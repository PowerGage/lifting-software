<?xml version="1.0" encoding="UTF-8"?>
<versions>

	<version number="0.01">
		<script>alter table LIFTER_ON_COMPETITION add CREATETIME TIMESTAMP</script>
		<script>SET TERM ^ ;
CREATE OR ALTER PROCEDURE DO_UP 
as
begin

  update lifter_on_competition set createtime=edittime where createtime is null; 

end
^
SET TERM ; ^</script>
		<script>EXECUTE PROCEDURE DO_UP;</script>

		<script>SET TERM ^ ;
CREATE OR ALTER PROCEDURE INSERT_LOC (
    lid double precision,
    idac double precision,
    idc double precision,
    selfweght double precision,
    idt double precision,
    zr integer,
    inz smallint,
    state double precision)
returns (
    result double precision,
    coef double precision)
as
  declare variable idcategory double precision;
  declare variable idwilks double precision;
  declare variable res double precision;
  declare variable loc double precision;
  declare variable sex smallint;
  declare variable asex smallint;
  declare variable aclub varchar(30);
  declare variable atrener varchar(30);
BEGIN
  result = -1;
  res = null;
  asex = 2;
  res = :Lid;

  select sex
    , club
    , trener
  from lifter
  where id_lifter = :Lid
  into :sex
    , :Aclub
    , :Atrener;

   if (sex = 1) then
     asex = 3;
   else
     asex = 2;


  select min(id_category)
  from weigth_category
  where we &gt;= :selfweght
    and (sex = :aSex or sex = 1)
  into :idcategory;

   select id_wilks
     , coef
  from wilks
  where self_weight &gt;= :selfweght 
    and sex = :sex
  order by self_weight
  rows 1
  into :idwilks, :coef;

  insert into lifter_on_competition
    (
      id_category,  id_lifter,
      id_compet,    id_wilks,
      id_stream,    club,
      trener,       id_team,
      zr,           InZach,
      id_agecl,     createtime)
  values
    (
      :idcategory, :LID,
      :IDC,        :idWilks,
      :STATE,      :aclub,
      :atrener,    :IDT,
      :zr,         :INZ,
      :IDAC,       CURRENT_TIMESTAMP
    );

  idcategory = NULL; 
  idwilks = NULL;
  res = NULL;
  LOC = NULL;
  sex = NULL;
  asex = NULL;
  ACLUB = NULL;
  ATRENER = NULL;

  select max(id_lifter_compet)
  from lifter_on_competition
  into RESULT;

  SUSPEND;
END
^
SET TERM ; ^</script>


		<script>SET TERM ^ ;
CREATE OR ALTER PROCEDURE VER 
returns (VERSION numeric(3,3))
as              
begin
  VERSION = 0.01;
  suspend;
end
^
SET TERM ; ^</script>
	</version>

	<version number="0.02">

		<script>SET TERM ^ ;
CREATE OR ALTER PROCEDURE EDIT_LOC (
    lid double precision,
    idac double precision,
    idc double precision,
    selfweght double precision,
    idt double precision,
    inz smallint,
    state double precision,
    squat double precision,
    bench double precision,
    dl double precision,
    loc double precision)
returns (
    coef double precision,
    ts timestamp)
as
declare variable idcategory double precision;
declare variable idwilks double precision;
declare variable res double precision;
declare variable sex smallint;
declare variable asex smallint;
declare variable aclub char(30);
declare variable atrener char(30);
declare variable range numeric(12,0);
BEGIN
  res = null;
  asex = 2;
  TS = CURRENT_TIMESTAMP;
  res = :lid;

  select sex
    , club
    , trener
  from lifter
  where id_lifter = :lid
  into :sex
    , :aclub
    , :atrener;

  select id_range
  from competit c
    left join lifter_on_competition loc on c.id_compet=loc.id_compet
  where loc.id_lifter_compet = :loc
  into :range;

  if (sex = 1) then
    asex = 3;

  select min(id_category)
  from weigth_category
  where we &gt;= :"SELFWEGHT"
    and (sex = :aSex or sex = 1)
  into :idcategory;

  select id_wilks
    , coef
  from wilks
  where self_weight &gt;= :"SELFWEGHT" and
    sex = :sex
  order by self_weight
  rows 1
  into :idwilks
    , :coef;

  update lifter_on_competition set
    id_category = :idcategory,
    id_compet   = :"IDC",
    id_wilks    = :idwilks,
    id_stream   = :"STATE",
    club        = :aclub,
    trener      = :atrener,
    id_team     = :"IDT",
    InZach      = :"INZ",
    id_agecl    = :"IDAC",
    EDITTIME    = :"TS"
  where
    ID_LIFTER_COMPET = :LOC;

  if (coalesce(:bench, 0) = 0) then
  begin
    bench = :selfweght;
    if (:range = 4) then
      bench = :bench /2;
    bench = ceiling(:bench/2.5)*2.5;
  end

  update lifter_exersis
  set squat1 = :squat
    , bench1 = :bench
    , dl1 = :dl
    , EDITTIME = :ts
  where ID_LIFTER_COMPET = :loc;

  idcategory = NULL;
  idwilks = NULL;
  res = NULL;
  sex = NULL;
  asex = NULL;
  ACLUB = NULL;
  ATRENER = NULL;
  range = NULL;

  POST_EVENT 'LOC_EDIT';
END
^
SET TERM ; ^</script>

		<script>SET TERM ^ ;
CREATE OR ALTER PROCEDURE ADD_LOC (
    lid numeric(12),
    idac numeric(12),
    idc numeric(12),
    selfweght double precision,
    idt numeric(12),
    zr integer,
    inz smallint,
    state double precision,
    squat double precision,
    bench double precision,
    dl double precision)
returns (
    loc numeric(12),
    coef double precision,
    ts timestamp)
as
declare variable idcategory numeric(12);
declare variable idwilks numeric(12);
declare variable res numeric(12);
declare variable sex smallint;
declare variable asex smallint;
declare variable aclub char(30);
declare variable atrener char(30);
declare variable range integer;
BEGIN
  LOC = GEN_ID(LOC, 1);
  res = null;
  asex = 2;
  TS = CURRENT_TIMESTAMP;
  res = :Lid;
  
  select sex
    , club
	, trener
  from lifter
  where id_lifter = :lid
  into :sex
    , :aclub
    , :atrener;

  if (sex = 1) then
    asex = 3;

  select min(id_category)
  from weigth_category
  where we &gt;= :SELFWEGHT and
    (sex = :aSex or sex = 1)
  into :idcategory;

  select id_wilks
    , coef
  from wilks
  where self_weight &gt;= :SELFWEGHT and
    sex = :sex
  order by self_weight
  rows 1
  into :idwilks
    , :coef;

  select id_range
  from competit c
    left join lifter_on_competition loc on c.id_compet = loc.id_compet
  where loc.id_lifter_compet = :loc
  into :range;

  insert into lifter_on_competition
    (
      ID_LIFTER_COMPET,      id_category,
      id_lifter,             id_compet,
      id_wilks,              id_stream,
      club,                  trener,
      id_team,               zr,
      InZach,                id_agecl,
      EDITTIME,              CREATETIME)
  values
    (
      :LOC,                  :idcategory,
      :LID,                  :IDC,
      :idwilks,              :STATE,
      :aclub,                :atrener,
      :IDT,                  :ZR,
      :INZ,                  :IDAC,
      :TS,                   CURRENT_TIMESTAMP
    );

  if (state = -1) then
    if (coalesce(:bench, 0) = 0) then
    begin
       bench = :selfweght;
       if (:range = 4) then
         bench = :bench /2;
       bench = ceiling(:bench/2.5)*2.5;
    end

  insert into lifter_exersis
    (
      ID_LIFTER_COMPET,
      squat1,
      bench1,
      dl1,
      STOY,
      EDITTIME
    )
  values 
    (
      :LOC,
      :SQUAT, 
      :BENCH, 
      :DL, 
      '0',
      :"TS"
    );
    
  idcategory = NULL;
  idwilks = NULL;
  res = NULL;
  sex = NULL;
  asex = NULL;
  ACLUB = NULL;
  ATRENER = NULL;
  RANGE = NULL;

  POST_EVENT 'LOC_ADD';
END
^
SET TERM ; ^</script>


		<script>SET TERM ^ ;
CREATE OR ALTER PROCEDURE BESTBENCHBYLOC (
    loc double precision)
returns (
    bench char(10))
as
declare variable bench_ numeric(9,1);
declare variable num numeric(9,1);
BEGIN
  select  bench1 * bench2, bench2
  from  lifter_exersis le
  where coalesce(oc5, 0) =1
    and le.id_lifter_compet = :Loc
  into :bench_, :num;

  IF ((bench_ IS NULL) or (num &lt; 8))  THEN
    bench = 0;
  ELSE
    bench = ceiling(:bench_/2.5)*2.5;

  bench_= NULL;
  num = NULL;
  SUSPEND;
END
^
SET TERM ; ^</script>


		<script>SET TERM ^ ;
CREATE OR ALTER PROCEDURE CURRENTTOTALL (
    loc numeric(12))
returns (
    totall double precision)
as
declare variable bestsquat numeric(9,1);
declare variable bestbench numeric(9,1);
declare variable bestdl numeric(9,1);
declare variable ocsquat integer;
declare variable ocbench integer;
declare variable ocdl integer;
declare variable range numeric(12);
BEGIN

  select cast(squat as numeric(9,1))
  from bestsquatbyloc(:LOC)
  into :BESTSQUAT;

  select cast(bench as numeric(9,1))
  from bestbenchbyloc(:LOC)
  into :BESTBENCH;

  select cast(DL as numeric(9,1))
  from bestdlbyloc1(:LOC)
  into :BESTDL;

  select coalesce(oc1, 0)+coalesce(oc2, 0)+coalesce(oc3, 0) as ocsquat
    , /*coalesce(oc4, 0)+*/ coalesce(oc5, 0) /*+coalesce(oc6, 0) */as ocbench
    , coalesce(oc7, 0)+coalesce(oc8, 0)+coalesce(oc9, 0) as ocdl
    , r.kind
  from lifter_on_competition loc 
    inner join competit c on loc.id_compet = c.id_compet 
    inner join lifter_exersis le on le.id_lifter_compet = loc.id_lifter_compet 
    inner join range r on r.id_range =c.id_range
  where loc.id_lifter_compet = :LOC
  into :ocsquat, :ocbench, :ocdl, :range;

  totall = 0;

  if (range = 1) then
    if ((ocbench &gt; 0) and (ocsquat &gt; 0) and (ocdl &gt; 0)) then
      TOTALL =  :BESTSQUAT + :BESTBENCH + :BESTDL;

  if ((range = 2) and (ocbench &gt; 0)) then
      TOTALL =  :BESTBENCH;

  if ((range = 3) and (ocdl &gt; 0)) then
      TOTALL =  :BESTDL;

  ocsquat = null;
  ocbench = null;
  ocdl = null;
  BestSquat = null;
  BestBench = null;
  BestDl = null;
  range = null;

  SUSPEND;
END
^
SET TERM ; ^</script>

		<script>SET TERM ^ ;

CREATE OR ALTER PROCEDURE ABSOLUTE (
    idc numeric(12))
returns (
    cat varchar(25),
    fio varchar(100),
    totall double precision,
    gloss double precision,
    sex integer,
    agename varchar(15),
    agenum integer,
    loc numeric(12))
as
BEGIN
for select ab.catname, ab.fio, ab.totall, ab.gloss,  ab.sex, ab.loc,'Teenagers' as agename, 1 as agenum  from absolutebyage(:"IDC") ab
where ageclass in (13) and sex = 0
order by 5,8,4 desc  rows 24
into :"CAT", :"FIO", :"TOTALL", :"GLOSS", :"SEX", :"LOC", :"AGENAME", :"AGENUM"
do suspend;

for select ab.catname, ab.fio, ab.totall, ab.gloss, ab.sex , ab.loc,'Junior   ', 2 from absolutebyage(:"IDC") ab
where ageclass = (20)  and sex = 0
order by 5,8,4 desc rows 24
into :"CAT", :"FIO", :"TOTALL", :"GLOSS", :"SEX", :"LOC", :"AGENAME", :"AGENUM"
do suspend;

for select ab.catname, ab.fio, ab.totall, ab.gloss, ab.sex , ab.loc,'Open     ', 3 from absolutebyage(:"IDC") ab
where ageclass = (-2) and sex = 0
order by 5,8,4 desc rows 24
into :"CAT", :"FIO", :"TOTALL", :"GLOSS", :"SEX", :"LOC", :"AGENAME", :"AGENUM"
do suspend;

for select ab.catname, ab.fio, ab.totall, ab.gloss, ab.sex , ab.loc,'Masters  ', 4 from absolutebyage(:"IDC") ab
where ageclass in (40, 50, 60) and sex = 0
order by 5,8,4 desc  rows 24
into :"CAT", :"FIO", :"TOTALL", :"GLOSS", :"SEX", :"LOC", :"AGENAME", :"AGENUM"
do suspend;



for select ab.catname, ab.fio, ab.totall, ab.gloss,  ab.sex, ab.loc,'Teenagers' as agename, 1 as agenum  from absolutebyage(:"IDC") ab
where ageclass in (13) and sex = 1
order by 5,8,4 desc  rows 24
into :"CAT", :"FIO", :"TOTALL", :"GLOSS", :"SEX", :"LOC", :"AGENAME", :"AGENUM"
do suspend;

for select ab.catname, ab.fio, ab.totall, ab.gloss, ab.sex , ab.loc,'Junior   ', 2 from absolutebyage(:"IDC") ab
where ageclass = (20)  and sex = 1
order by 5,8,4 desc rows 24
into :"CAT", :"FIO", :"TOTALL", :"GLOSS", :"SEX", :"LOC", :"AGENAME", :"AGENUM"
do suspend;

for select ab.catname, ab.fio, ab.totall, ab.gloss, ab.sex , ab.loc,'Open     ', 3 from absolutebyage(:"IDC") ab
where ageclass = (-2) and sex = 1
order by 5,8,4 desc rows 24
into :"CAT", :"FIO", :"TOTALL", :"GLOSS", :"SEX", :"LOC", :"AGENAME", :"AGENUM"
do suspend;

for select ab.catname, ab.fio, ab.totall, ab.gloss, ab.sex , ab.loc,'Masters  ', 4 from absolutebyage(:"IDC") ab
where ageclass in (40, 50, 60) and sex = 1
order by 5,8,4 desc  rows 24
into :"CAT", :"FIO", :"TOTALL", :"GLOSS", :"SEX", :"LOC", :"AGENAME", :"AGENUM"
do suspend;
END
^
SET TERM ; ^</script>


		<script>SET TERM ^ ;

CREATE OR ALTER PROCEDURE ABSOLUTE_GRAM (
    idc numeric(12))
returns (
    place integer,
    loc numeric(12),
    rusfio varchar(50),
    engfio varchar(50),
    wc varchar(20),
    totall double precision,
    gloss double precision,
    sex integer,
    age_name varchar(50),
    age_num numeric(12,0),
    agecnamerus varchar(50),
    agecnameeng varchar(50))
as
declare variable idac varchar(50);
declare variable num integer;
begin

idac = '';
num = 1;

FOR SELECT loc.id_lifter_compet,
  ab.cat,
  cast(Cutfio2(ab.fio) as varchar(50)) as rusfio,
  cast(Transliter(Cutfio2(ab.fio)) as varchar(50)) as Engfio,
  ab.totall, 
  ab.gloss, 
  ab.sex, 
  ab.agename, 
  ab.agenum, 
  ac.name as rusagedetname,
  ac.engname as engagedetname
FROM absolute(:IDC) ab
  inner join lifter_on_competition loc  on ab.loc = loc.id_lifter_compet
  inner join age_class ac on loc.id_agecl = ac.id_agecl
ORDER BY sex
  , agenum
  , gloss desc
INTO
    loc ,         wc ,
    rusfio ,      engfio ,
    totall,       gloss ,
    sex ,         age_name,
    age_num,      agecnamerus,
    agecnameeng
DO
BEGIN
  if (IDAC &lt;&gt;  age_name||sex) then
  begin
    NUM = 1;
    IDAC = :age_name||:sex;
  end

  if (NUM &lt; 4) then
  begin
   PLACE = NUM;
   NUM = NUM+1;
   SUSPEND;
  end
END

idac = NULL;
num = NULL;

END
^
SET TERM ; ^</script>


		<script>SET TERM ^ ;
CREATE OR ALTER PROCEDURE VER 
returns (VERSION numeric(3,3))
as              
begin
  VERSION = 0.02;
  suspend;
end
^
SET TERM ; ^</script>
	</version>

	<version number="0.03">

		<script>SET TERM ^ ;
CREATE OR ALTER PROCEDURE DO_UP 
as
begin

--INSERT INTO PARAMS (ID, ID_PARENT, NAME, "VALUE", DESCRIPTION) VALUES (1, NULL, 'ALL', NULL, NULL);
INSERT INTO PARAMS (ID, ID_PARENT, NAME, "VALUE", DESCRIPTION) VALUES (400, 1, 'Предварительная регистрации и взвешивание', NULL, NULL);
INSERT INTO PARAMS (ID, ID_PARENT, NAME, "VALUE", DESCRIPTION) VALUES (401, 400, 'AlowFilling1Attempts', '1', 'Разрешать ввод 1х попыток');

end
^
SET TERM ; ^</script>
		<script>EXECUTE PROCEDURE DO_UP;</script>

		<script>SET TERM ^ ;
CREATE OR ALTER PROCEDURE VER 
returns (VERSION numeric(3,3))
as              
begin
  VERSION = 0.03;
  suspend;
end
^
SET TERM ; ^</script>
	</version>

	<version number="0.04">
		<script>SET TERM ^ ;
CREATE OR ALTER PROCEDURE DO_UP 
as
begin
UPDATE AGE_CLASS SET 
    ENGNAME = 'Teen 13-19'
WHERE (ID_AGECL = 13);

UPDATE AGE_CLASS SET 
    ENGNAME = 'Juniors'
WHERE (ID_AGECL = 20);

UPDATE AGE_CLASS SET 
    ENGNAME = 'Open'
WHERE (ID_AGECL = -2);

UPDATE AGE_CLASS SET 
    ENGNAME = 'Masters 40-49'
WHERE (ID_AGECL = 40);

UPDATE AGE_CLASS SET 
    ENGNAME = 'Masters 50-49'
WHERE (ID_AGECL = 50);

UPDATE AGE_CLASS SET 
    ENGNAME = 'Sub Masters 33-39'
WHERE (ID_AGECL = -4);

UPDATE AGE_CLASS SET 
    ENGNAME = 'Masters 60-99'
WHERE (ID_AGECL = 60);



end
^
SET TERM ; ^</script>
		<script>EXECUTE PROCEDURE DO_UP;</script>
	</version>


	<version number="0.05">
		<script>SET TERM ^ ;
CREATE OR ALTER PROCEDURE ADD_TEAM (
    name char(50),
    fixrecord integer = 99)
returns (
    id double precision,
    ts timestamp)
as
begin
 ID = GEN_ID(TEAMS, 1);
 TS = CURRENT_TIMESTAMP;

 INSERT INTO TEAM (ID_TEAM, NAME, EDITTIME, FIXRECORD)
 VALUES (:ID, :NAME, :TS, :FIXRECORD);

 POST_EVENT 'TEAM_ADD';
end
^
SET TERM ; ^</script>


		<script>SET TERM ^ ;
CREATE OR ALTER PROCEDURE EDIT_TEAM (
    id double precision,
    name char(50),
    fixrecord integer = 99)
returns (
    ts timestamp)
as
begin
 TS = CURRENT_TIMESTAMP;

 UPDATE TEAM
 SET NAME = :NAME
   , FIXRECORD = :FIXRECORD
   , EDITTIME = :TS
 WHERE
   ID_TEAM = :ID;

 POST_EVENT 'TEAM_EDIT';
end
^
SET TERM ; ^</script>
	</version>

	<version number="0.06">
		<script>SET TERM ^ ;

CREATE OR ALTER PROCEDURE ADD_LOC (
    lid numeric(12,0),
    idac numeric(12,0),
    idc numeric(12,0),
    selfweght double precision,
    idt numeric(12,0),
    zr integer,
    inz smallint,
    state double precision,
    squat double precision,
    bench double precision,
    dl double precision)
returns (
    loc numeric(12,0),
    coef double precision,
    ts timestamp)
as
declare variable idcategory numeric(12,0);
declare variable idwilks numeric(12,0);
declare variable res numeric(12,0);
declare variable sex smallint;
declare variable asex smallint;
declare variable aclub char(30);
declare variable atrener char(30);
declare variable range integer;
BEGIN
  LOC = GEN_ID(LOC, 1);
  res = null;
  asex = 2;
  TS = CURRENT_TIMESTAMP;
  res = :Lid;
  
  select sex
    , club
    , trener
  from lifter
  where id_lifter = :lid
  into :sex
    , :aclub
    , :atrener;

  if (sex = 1) then
    asex = 3;

  select min(id_category)
  from weigth_category
  where we &gt;= :SELFWEGHT and
    (sex = :aSex or sex = 1)
  into :idcategory;

  select id_wilks
    , coef
  from wilks
  where self_weight &gt;= :SELFWEGHT and
    sex = :sex
  order by self_weight
  rows 1
  into :idwilks
    , :coef;

  select id_range from competit c where id_compet = :idc into :range;

  insert into lifter_on_competition
    (
      ID_LIFTER_COMPET,      id_category,
      id_lifter,             id_compet,
      id_wilks,              id_stream,
      club,                  trener,
      id_team,               zr,
      InZach,                id_agecl,
      EDITTIME,              CREATETIME)
  values
    (
      :LOC,                  :idcategory,
      :LID,                  :IDC,
      :idwilks,              :STATE,
      :aclub,                :atrener,
      :IDT,                  :ZR,
      :INZ,                  :IDAC,
      :TS,                   CURRENT_TIMESTAMP
    );

  if (state = -1) then
    if (coalesce(:bench, 0) = 0) then
    begin
       bench = :selfweght;
       if (:range = 4) then
         bench = :bench /2;
       bench = ceiling(:bench/2.5)*2.5;
    end

  insert into lifter_exersis
    (
      ID_LIFTER_COMPET,
      squat1,
      bench1,
      dl1,
      STOY,
      EDITTIME
    )
  values 
    (
      :LOC,
      :SQUAT, 
      :BENCH, 
      :DL, 
      '0',
      :"TS"
    );
    
  idcategory = NULL;
  idwilks = NULL;
  res = NULL;
  sex = NULL;
  asex = NULL;
  ACLUB = NULL;
  ATRENER = NULL;
  RANGE = NULL;

  POST_EVENT 'LOC_ADD';
END
^
SET TERM ; ^</script>
	</version>


	<version number="0.07">
		<script>
  DROP PROCEDURE ADD_TOWN;
  DROP PROCEDURE EDIT_TOWN;
  DROP PROCEDURE DELETE_TOWN;
  DROP TABLE TOWNS;
		</script>
		<script>
CREATE TABLE TOWNS (
  ID ID NOT NULL PRIMARY KEY,
  COUNTRY VARCHAR(3),
  REGION VARCHAR(50),
  NAME VARCHAR(50),
  EDITTIME   TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL

);
		</script>

		<script>SET TERM ^ ;
CREATE OR ALTER PROCEDURE ADD_TOWN (
    country varchar(3),
    region varchar(50),
    name varchar(50)
)
returns (
    id NUMERIC(12),
    ts timestamp)
as
begin
 ID = GEN_ID(TOWNS, 1);
 TS = CURRENT_TIMESTAMP;

 INSERT INTO TOWNS
   (ID, COUNTRY, REGION, NAME, EDITTIME)
 VALUES
   (:ID, :COUNTRY, :REGION, :NAME, :TS);
 POST_EVENT 'TOWN_ADD';
 POST_EVENT 'ADD';
end
^
SET TERM ; ^</script>

		<script>SET TERM ^ ;
CREATE OR ALTER PROCEDURE DELETE_TOWN (
    id NUMERIC(12))
returns (
    ts timestamp)
as
begin
  DELETE FROM
    TOWNS
  WHERE
    ID = :ID;

 TS = CURRENT_TIMESTAMP;

 INSERT INTO DELETED
    (ID, "TABLE", EDITTIME, "VALUE")
  VALUES
    (GEN_ID(DELETED, 1), 'TOWNS', :"TS", :"ID");

  POST_EVENT 'TOWN_DELETE';
  POST_EVENT 'DELETE';
end
^
SET TERM ; ^</script>

		<script>SET TERM ^ ;
CREATE OR ALTER PROCEDURE EDIT_TOWN (
    id NUMERIC(12),
    country varchar(3),
    region varchar(50),
    name varchar(50)
)
returns (
    ts timestamp)
as
begin
 TS = CURRENT_TIMESTAMP;

 UPDATE TOWNS SET COUNTRY = :COUNTRY
   , REGION = :REGION
   , NAME = :NAME
   , EDITTIME = :TS
 WHERE
  ID = :ID;

 POST_EVENT 'TOWN_EDIT';
 POST_EVENT 'EDIT';
end
^
SET TERM ; ^</script>

	</version>

	<version number="0.08">
<script>
DROP PROCEDURE ADD_LIFTER;
DROP PROCEDURE EDIT_LIFTER;
DROP PROCEDURE COMPETSTAT;
DROP PROCEDURE FINALREPORT;
DROP PROCEDURE COMPETITIONWINNERS2;
DROP PROCEDURE FINALREPORT2;
DROP PROCEDURE EDIT_COMPET;
DROP PROCEDURE ADD_COMPET;
DROP PROCEDURE INSERTLIFTER;
DROP PROCEDURE UPDATELIFTER;

alter table LIFTER  ALTER COLUMN TOWN   TYPE varchar(160);
alter table LIFTER  ALTER COLUMN ADRESS TYPE varchar(200);
alter table LIFTER  ALTER COLUMN PHONE  TYPE varchar(20);
alter table LIFTER  ALTER COLUMN EMAIL  TYPE varchar(100);
alter table COMPETIT  ALTER COLUMN TOWN TYPE varchar(160);
</script>

<script>SET TERM ^ ;

CREATE OR ALTER PROCEDURE ADD_COMPET (
    id_range numeric(12),
    name char(250),
    town varchar(160),
    description char(200),
    date_begin date,
    date_end date,
    level_ integer,
    grp numeric(12))
returns ( id numeric(12),
    ts timestamp)
as BEGIN

  ID = GEN_ID(COMPET, 1);
  TS = CURRENT_TIMESTAMP;

  INSERT INTO COMPETIT
  (
    ID_COMPET,    ID_RANGE,
    NAME,         TOWN,
    DESCRIPTION,  DATE_BEGIN,
    DATE_END,     "LEVEL",
    EDITTIME,     GRP
  )
  VALUES
  (
    :ID,         :ID_RANGE,
    :NAME,       :TOWN,
    :DESCRIPTION,:DATE_BEGIN,
    :DATE_END,   :LEVEL_,
    :TS,         coalesce(:GRP, :ID)
  );

  post_event 'COMPET_ADD';
  post_event 'ADD';
END^

CREATE OR ALTER PROCEDURE EDIT_COMPET (
    id_range NUMERIC(12),
    name char(250),
    town varchar(160),
    description char(200),
    date_begin date,
    date_end date,
    level_ integer,
    id_compet NUMERIC(12))
returns ( ts timestamp )
AS
  declare variable grp numeric(12);
BEGIN
  TS = CURRENT_TIMESTAMP;

  UPDATE
    COMPETIT
  SET
    ID_RANGE = :ID_RANGE,
    NAME = :NAME,
    TOWN = :TOWN,
    DESCRIPTION = :DESCRIPTION,
    DATE_BEGIN = :DATE_BEGIN,
    DATE_END = :DATE_END,
    "LEVEL" = :"LEVEL_",
    EDITTIME = CURRENT_TIMESTAMP
  WHERE
    ID_COMPET  = :ID_COMPET;

  SELECT grp FROM COMPETIT WHERE ID_COMPET  = :ID_COMPET INTO GRP;

  UPDATE
    COMPETIT
  SET
    NAME = :NAME,
    TOWN = :TOWN,
    DESCRIPTION = :DESCRIPTION,
    "LEVEL" = :"LEVEL_",
    EDITTIME = CURRENT_TIMESTAMP
  WHERE
    grp = :GRP;

  GRP = NULL;
  post_event 'COMPET_EDIT';
  post_event 'EDIT';
END^

SET TERM ; ^</script>

		<script>SET TERM ^ ;
CREATE OR ALTER PROCEDURE ADD_LIFTER (
    name char(60),        sex smallint,
    phone varchar(20),       dat_bith date,
    adress varchar(200),     town varchar(160),
    id_razr numeric(12),  club char(30),
    trener char(30),      regards char(500),
    email varchar(50),       aname char(60))
returns ( id numeric(12)
    , ts timestamp)
as BEGIN
  ID = GEN_ID(LIFTER, 1);
  TS = CURRENT_TIMESTAMP;
 
  INSERT INTO LIFTER
    (
      ID_LIFTER,
      name,      sex,
      phone,     dat_bith,
      adress,    town,
      id_razr,   club,
      trener,    regards,
      email,     ANAME,
      EDITTIME
    )
  VALUES
   (
     :ID, 
	 :NAME,      :SEX, 
	 :PHONE,     :DAT_BITH,
	 :ADRESS,    :TOWN,
	 :ID_RAZR,   :CLUB,
	 :TRENER,    :REGARDS,
	 :EMAIL,     :ANAME,
	 :TS
   );
  POST_EVENT 'LIFTER_ADD';
  POST_EVENT 'ADD';
END
^
SET TERM ; ^</script>

		<script>SET TERM ^ ;
CREATE OR ALTER PROCEDURE EDIT_LIFTER (
    id NUMERIC(12),              name char(60),
    sex smallint,                phone varchar(20),
    dat_bith date,               adress varchar(200),
    town varchar(160),           id_razr NUMERIC(12),
    club char(30),               trener char(30),
    regards char(500),           email varchar(50),
    aname char(60) )
returns ( ts timestamp )
as BEGIN

  UPDATE LIFTER SET name = :NAME
  WHERE id_lifter = :ID and
    ((:NAME &lt;&gt; '' AND
    name &lt;&gt; :NAME) OR
    Name is Null);

  UPDATE LIFTER SET  email = :EMAIL
  WHERE id_lifter = :"ID" and
    ((:EMAIL &lt;&gt; '' AND
    email &lt;&gt; :EMAIL) OR
    email is Null);

  UPDATE LIFTER SET sex = :SEX
  WHERE id_lifter = :ID and
    :SEX &lt;&gt; -1 AND
    sex &lt;&gt; :sex;

  UPDATE LIFTER SET Phone = :PHONE
  WHERE id_lifter = :ID and
    ((:PHONE &lt;&gt; '' AND
    Phone &lt;&gt; :PHONE) OR
    Phone is Null);

  UPDATE LIFTER SET dat_bith = :DAT_BITH
  WHERE id_lifter = :ID and
    dat_bith &lt;&gt; :dat_bith;

  UPDATE LIFTER SET adress = :ADRESS
  WHERE id_lifter = :ID and
    ((:ADRESS &lt;&gt; '' AND
    adress &lt;&gt; :ADRESS) OR
    adress is Null);

  UPDATE LIFTER SET Town = :TOWN
  WHERE id_lifter = :ID and
    ((:TOWN &lt;&gt; '' AND
    Town &lt;&gt; :TOWN) OR
    Town is Null);

  UPDATE LIFTER SET id_razr = :ID_RAZR
  WHERE id_lifter = :ID and
    :ID_RAZR &lt;&gt; -1 AND
    id_razr &lt;&gt; :id_razr;

  UPDATE LIFTER SET Club = :CLUB
  WHERE  id_lifter = :ID and
    ((:CLUB &lt;&gt; '' AND
    Club &lt;&gt; :CLUB) OR
    Club is Null);

  UPDATE LIFTER SET Trener = :TRENER
  WHERE id_lifter = :ID and
    ((:TRENER &lt;&gt; '' AND
    Trener &lt;&gt; :TRENER) OR
    Trener is Null);

  UPDATE LIFTER SET Regards = :REGARDS
  WHERE id_lifter = :ID and
    ((:REGARDS &lt;&gt; '' AND
    Regards &lt;&gt; :REGARDS) OR
    Regards is Null);
 
  UPDATE LIFTER SET ANAME = :ANAME
  WHERE id_lifter = :ID and
    ((:ANAME &lt;&gt; '' AND
    ANAME &lt;&gt; :ANAME) OR
    ANAME is Null);

  TS = CURRENT_TIMESTAMP;    

  UPDATE LIFTER SET
    EDITTIME = :TS
  WHERE
    ID_LIFTER = :ID;

 POST_EVENT 'LIFTER_EDIT';    
 POST_EVENT 'EDIT';    
END
^
SET TERM ; ^</script>


<script>SET TERM ^ ;
CREATE OR ALTER PROCEDURE COMPETSTAT (
    idc NUMERIC(12))
returns (
    NAME VARCHAR(150),
    "VALUE" VARCHAR(50))
as
begin
  NAME = 'Кол-во спортсменов общее';
  SELECT COUNT(ID_LIFTER_COMPET)
  FROM LIFTER_ON_COMPETITION
  WHERE ID_COMPET = :"IDC"
  INTO :"VALUE";
  suspend;

  NAME = 'Кол-во спортсменов уник.';
  SELECT COUNT(distinct ID_LIFTER)
  FROM LIFTER_ON_COMPETITION
  WHERE ID_COMPET = :IDC
  INTO :"VALUE";
  suspend;

  NAME = 'Кол-во команд участниц';
  SELECT COUNT(distinct ID_TEAM)
  FROM LIFTER_ON_COMPETITION
  WHERE ID_COMPET = :IDC
  INTO :"VALUE";
  suspend;

  NAME = 'Кол-во городов спортсменов';
  select count(distinct(l.town))
  from lifter_on_competition loc join
    Lifter L on l.id_lifter = loc.id_lifter
  where loc.id_compet = :"IDC"
  into :"VALUE";
  suspend;
  
  NAME = 'Кол-во рекордов национальных';
  select NUM from RECORDSINCOMPET(:IDC, 1) into :"VALUE";
  suspend;

  NAME = 'Кол-во рекордов европейских';
  select NUM from RECORDSINCOMPET(:IDC, 2) into :"VALUE";
  suspend;

  NAME = 'Кол-во рекордов мировых';
  select NUM from RECORDSINCOMPET(:IDC, 3) into :"VALUE";
  suspend;

  NAME = 'Спортсмены - самый пожилой';
  select TRIM(l.name)||'('||
    ((cast('now' as date) - l.dat_bith)/365)||
    ') '||', '||TRIM(l.town)
  from lifter_on_competition loc join
    Lifter L on l.id_lifter = loc.id_lifter
  where loc.id_compet = :IDC
  order by l.dat_bith asc
  rows 1 
  into :"VALUE";
  suspend;

  NAME = 'Спортсмены - самый молодой';
  select  TRIM(l.name)||'('||
    ((cast('now' as date) - l.dat_bith)/365)||
    ') '||', '||TRIM(l.town)
  from lifter_on_competition loc join
    Lifter L on l.id_lifter = loc.id_lifter
  where loc.id_compet = :IDC
  order by  l.dat_bith desc
  rows 1 
  into :"VALUE";
  suspend;

end^

SET TERM ; ^</script>



		<script>SET TERM ^ ;
CREATE OR ALTER PROCEDURE FINALREPORT (
    idc double precision)
returns (
    loc NUMERIC(12),                fio char(60),
    ageclass char(25),              bithdate date,
    bodyweight double precision,    coef float,
    team char(60),                  town varchar(160),
    squat1 char(9),                 oc1 integer,
    squat2 char(9),                 oc2 integer,
    squat3 char(9),                 oc3 integer,
    squat4 char(9),                 oc4 integer,
    bench1 char(9),                 oc5 integer,
    bench2 char(9),                 oc6 integer,
    bench3 char(9),                 oc7 integer,
    bench4 char(9),                 oc8 integer,
    dl1 char(9),                    oc9 integer,
    dl2 char(9),                    oc10 integer,
    dl3 char(9),                    oc11 integer,
    dl4 char(9),                    oc12 integer,
    totall char(12),                pts double precision,
    coach char(50),                 wcateg char(4),
    sex integer,                    ageclasseng char(25),
    orazr char(6),                  nrazr char(6))
as
  declare variable tmp char(1);
  declare variable acoef double precision;
  declare variable aclass double precision;
begin
for
select loc.id_lifter_compet,
  trim(cutfio2(l.name)) as Fio,   l.dat_bith as DateBith,
  trim(ac.ENGNAME) as AgeClass,   trim(ac.ENGNAME) as ageclasseng,
  w.Self_Weight as BodyWeight,    w.Coef as Coef,
  t.name as TeamName,             L.Town as LifterTown,
  le.Squat1,                      le.Oc1,
  le.Squat2,                      le.Oc2,
  le.Squat3,                      le.oc3,
  le.Squat4,                      le.oc10,
  le.Bench1,                      le.oc4,
  le.Bench2,                      le.oc5,
  le.Bench3,                      le.oc6,
  le.Bench4,                      le.oc11,
  le.Dl1,                         le.oc7,
  le.Dl2,                         le.oc8,
  le.Dl3,                         le.oc9,
  le.Dl4,                         le.oc12,
  Le.SummaAll as Totall,          le.SummaAll * w.Coef as Pts,
  loc.Trener,                     trim(Wc.name) as Categ,
  l.sex,                          loc.WasRazr,
  Loc.NewRazr,                   coalesce( (
select agecoef from agecorrection where age = (
select (cast('now' as date) - dat_bith)/365 from lifter where id_lifter = loc.id_lifter)
), 1) as acoef,
  loc.id_agecl
  from  lifter_on_competition loc 
    inner join  lifter_exersis le on le.id_lifter_compet=loc.id_lifter_compet
	inner join  Team T on t.id_team=loc.id_team 
	inner join  Lifter L on l.id_lifter=loc.id_lifter 
	inner join  Age_class Ac on ac.id_agecl=loc.id_agecl 
	inner join  Wilks w on w.id_wilks=loc.id_wilks 
	inner join  WEIGTH_CATEGORY wc on wc.ID_CATEGORY = Loc.ID_CATEGORY
where loc.id_compet = :idc
order by  l.sex
  , Loc.ID_CATEGORY
  , ac.from_age
  , le.summaall desc
  , w.Self_Weight asc
into 
  :loc, :FIO, :BITHDATE, :"AGECLASS", :"AGECLASSENG", :"BODYWEIGHT",
  :"COEF", :"TEAM", :"TOWN", 
  :"SQUAT1", :"OC1", :SQUAT2, :OC2, :"SQUAT3", :"OC3", :"SQUAT4", :"OC4"
  ,:"BENCH1", :"OC5", :"BENCH2", :"OC6", :"BENCH3", :"OC7", :"BENCH4", :"OC8"
  ,:"DL1", :"OC9", :"DL2", :"OC10", :"DL3", :"OC11", :"DL4", :"OC12"
  ,:TOTALL, :PTS, :"COACH", :"WCATEG", :"SEX", :orazr, :nrazr, :acoef, :ACLASS

do
begin
  tmp = '';

  if (:ACLASS &lt;&gt; -2) then
    COEF = :COEF * :ACOEF;

  PTS = Cast(:TOTALL as float) * :COEF;

  if
    (
      (nullif(:squat1, '0') &lt;&gt; '0') and
      (nullif(:oc1, -1)&gt;0)
    ) then
  begin 
    select result from checkrecord(:loc, 0, :squat1) into :tmp;
    squat1 = trim(:squat1)||:tmp;
  end

  if 
    (
      (nullif(:squat2, '0') &lt;&gt; '0') and
      (nullif(:oc2, -1)&gt;0)
    ) then
  begin 
    select result from checkrecord(:loc, 0, :squat2) into :tmp;
    squat2 = trim(:squat2)||:tmp;
  end

  if 
    (
      (nullif(:squat3, '0') &lt;&gt; '0') and
      (nullif(:oc3, -1)&gt;0)
    ) then
  begin 
    select result from checkrecord(:loc, 0, :squat3) into :tmp;
    squat3 = trim(:squat3)||:tmp;
  end

  if 
    (
      (nullif(:squat4, '0') &lt;&gt; '0') and
      (nullif(:oc4, -1)&gt;0)
    ) then
  begin 
    select result from checkrecord(:loc, 0, :squat4) into :tmp;
    squat4 = trim(:squat4)||:tmp;
  end


  if 
    (
      (nullif(:bench1, '0') &lt;&gt; '0') and
      (nullif(:oc5, -1)&gt;0)
    ) then
  begin 
    select result from checkrecord(:loc, 1, :bench1) into :tmp;
    bench1 = trim(:bench1)||:tmp;
  end

  if 
    (
      (nullif(:bench2, '0') &lt;&gt; '0') and
      (nullif(:oc6, -1)&gt;0)
    ) then
  begin 
    select result from checkrecord(:loc, 1, :bench2) into :tmp;
    bench2 = trim(:bench2)||:tmp;
  end

  if 
    (
      (nullif(:bench3, '0') &lt;&gt; '0') and
      (nullif(:oc7, -1)&gt;0)
    ) then
  begin 
    select result from checkrecord(:loc, 1, :bench3) into :tmp;
    bench3 = trim(:bench3)||:tmp;
  end

  if 
    (
      (nullif(:bench4, '0') &lt;&gt; '0') and
      (nullif(:oc8, 0)&gt;0)
    ) then
  begin 
    select result from checkrecord(:loc, 1, :bench4) into :tmp;
    bench4 = trim(:bench4)||:tmp;
  end

  if 
    (
      (nullif(:dl1, '0') &lt;&gt; '0') and
      (nullif(:oc9, 0)&gt;0)
    ) then
  begin 
    select result from checkrecord(:loc, 2, :dl1) into :tmp;
    dl1 = trim(:dl1)||:tmp;
  end

  if 
    (
      (nullif(:dl2, '0') &lt;&gt; '0') and
      (nullif(:oc10, 0)&gt;0)
    ) then
  begin 
    select result from checkrecord(:loc, 2, :dl2) into :tmp;
    dl2 = trim(:dl2)||:tmp;
  end

  if 
    (
      (nullif(:dl3, '0') &lt;&gt; '0') and
      (nullif(:oc11, 0)&gt;0)
    ) then
  begin 
    select result from checkrecord(:loc, 2, :dl3) into :tmp;
    dl3 = trim(:dl3)||:tmp;
  end

  if 
    (
      (nullif(:dl4, '0') &lt;&gt; '0') and
      (nullif(:oc12, 0)&gt;0)
    ) then
  begin 
    select result from checkrecord(:loc, 2, :dl4) into :tmp;
    dl4 = trim(:dl4)||:tmp;
  end

  if (nullif(:totall, '0') &lt;&gt; '0') then
  begin 
    select result from checkrecord(:loc, -2, :totall) into :tmp;
    totall = trim(:totall)||:tmp;
  end

  tmp = null;
  suspend;
end

end

^
CREATE OR ALTER PROCEDURE FINALREPORT2 (
    idc double precision)
returns (
    loc numeric(12,0),              fio char(60),
    ageclass char(25),              bithdate date,
    bodyweight double precision,    coef float,
    team char(60),                  town varchar(160),
    squat1 char(9),                 oc1 integer,
    squat2 char(9),                 oc2 integer,
    squat3 char(9),                 oc3 integer,
    squat4 char(9),                 oc4 integer,
    bench1 char(9),                 oc5 integer,
    bench2 char(9),                 oc6 integer,
    bench3 char(9),                 oc7 integer,
    bench4 char(9),                 oc8 integer,
    dl1 char(9),                    oc9 integer,
    dl2 char(9),                    oc10 integer,
    dl3 char(9),                    oc11 integer,
    dl4 char(9),                    oc12 integer,
    totall char(12),                pts double precision,
    coach char(50),                 wcateg char(4),
    sex integer,                    ageclasseng char(25),
    orazr char(6),                  nrazr char(6),
    tot numeric(6,2))
AS
  declare variable tmp char(1);
  declare variable acoef double precision;
  declare variable aclass double precision;
BEGIN
for
select
  loc.id_lifter_compet,
  trim(cutfio2(l.name)) as Fio,
  l.dat_bith as DateBith,
  trim(ac.ENGNAME) as AgeClass,
  trim(ac.ENGNAME) as ageclasseng,
  w.Self_Weight as BodyWeight,
  w.Coef as Coef,
  t.name as TeamName,
  L.Town as LifterTown,
  le.Squat1,
  le.Oc1,
  le.Squat2,
  le.Oc2,
  le.Squat3,
  le.oc3,
  le.Squat4,
  le.oc10,
  le.Bench1,
  le.oc4,
  le.Bench2,
  le.oc5,
  le.Bench3,
  le.oc6,
  le.Bench4,
  le.oc11,
  le.Dl1,
  le.oc7,
  le.Dl2,
  le.oc8,
  le.Dl3,
  le.oc9,
  le.Dl4,
  le.oc12,
  Le.SummaAll as Totall,
  le.SummaAll * w.Coef as Pts,
  loc.Trener,
  trim(Wc.name) as Categ,
  l.sex,
  loc.WasRazr,
  Loc.NewRazr,
coalesce( (
select agecoef from agecorrection where age = (
select (cast('now' as date) - dat_bith)/365 from lifter where id_lifter = loc.id_lifter)
), 1) as acoef,
  loc.id_agecl
from
  lifter_on_competition loc inner join
  lifter_exersis le
    on le.id_lifter_compet=loc.id_lifter_compet inner join
  Team T
    on t.id_team=loc.id_team inner join
  Lifter L
    on l.id_lifter=loc.id_lifter inner join
  Age_class2 Ac
    on ac.id_agecl=loc.id_agecl inner join
  Wilks w
    on w.id_wilks=loc.id_wilks inner join
  WEIGTH_CATEGORY wc
    on wc.ID_CATEGORY = Loc.ID_CATEGORY
where
  loc.id_compet = :idc
order by
  l.sex, Loc.ID_CATEGORY, ac.from_age, le.summaall desc, w.Self_Weight asc
into 
  :loc, :FIO, :BITHDATE, :"AGECLASS", :"AGECLASSENG", :"BODYWEIGHT",
  :"COEF", :"TEAM", :"TOWN", 
  :"SQUAT1", :"OC1", :SQUAT2, :OC2, :"SQUAT3", :"OC3", :"SQUAT4", :"OC4"
  ,:"BENCH1", :"OC5", :"BENCH2", :"OC6", :"BENCH3", :"OC7", :"BENCH4", :"OC8"
  ,:"DL1", :"OC9", :"DL2", :"OC10", :"DL3", :"OC11", :"DL4", :"OC12"
  ,:TOTALL, :PTS, :"COACH", :"WCATEG", :"SEX", :orazr, :nrazr, :acoef, :ACLASS

do
begin
  tmp = '';

  if (:ACLASS &lt;&gt; -2) then
    COEF = :COEF * :ACOEF;

  PTS = Cast(:TOTALL as float) * :COEF;

  if
    (
      (nullif(:squat1, '0') &lt;&gt; '0') and
      (nullif(:oc1, -1) &gt; 0)
    ) then
  begin 
    select result from checkrecord(:loc, 0, :squat1) into :tmp;
    squat1 = trim(:squat1)||:tmp;
  end

  if 
    (
      (nullif(:squat2, '0') &lt;&gt; '0') and
      (nullif(:oc2, -1) &gt; 0)
    ) then
  begin 
    select result from checkrecord(:loc, 0, :squat2) into :tmp;
    squat2 = trim(:squat2)||:tmp;
  end

  if 
    (
      (nullif(:squat3, '0') &lt;&gt; '0') and
      (nullif(:oc3, -1) &gt; 0)
    ) then
  begin 
    select result from checkrecord(:loc, 0, :squat3) into :tmp;
    squat3 = trim(:squat3)||:tmp;
  end

  if 
    (
      (nullif(:squat4, '0') &lt;&gt;'0') and
      (nullif(:oc4, -1) &gt; 0)
    ) then
  begin 
    select result from checkrecord(:loc, 0, :squat4) into :tmp;
    squat4 = trim(:squat4)||:tmp;
  end


  if 
    (
      (nullif(:bench1, '0') &lt;&gt;'0') and
      (nullif(:oc5, -1) &gt; 0)
    ) then
  begin 
    select result from checkrecord(:loc, 1, :bench1) into :tmp;
    bench1 = trim(:bench1)||:tmp;
  end

  if 
    (
      (nullif(:bench2, '0') &lt;&gt;'0') and
      (nullif(:oc6, -1) &gt; 0)
    ) then
  begin 
    select result from checkrecord(:loc, 1, :bench2) into :tmp;
    bench2 = trim(:bench2)||:tmp;
  end

  if 
    (
      (nullif(:bench3, '0') &lt;&gt;'0') and
      (nullif(:oc7, -1) &gt; 0)
    ) then
  begin 
    select result from checkrecord(:loc, 1, :bench3) into :tmp;
    bench3 = trim(:bench3)||:tmp;
  end

  if 
    (
      (nullif(:bench4, '0') &lt;&gt;'0') and
      (nullif(:oc8, 0) &gt; 0)
    ) then
  begin 
    select result from checkrecord(:loc, 1, :bench4) into :tmp;
    bench4 = trim(:bench4)||:tmp;
  end

  if 
    (
      (nullif(:dl1, '0') &lt;&gt;'0') and
      (nullif(:oc9, 0) &gt; 0)
    ) then
  begin 
    select result from checkrecord(:loc, 2, :dl1) into :tmp;
    dl1 = trim(:dl1)||:tmp;
  end

  if 
    (
      (nullif(:dl2, '0') &lt;&gt; '0') and
      (nullif(:oc10, 0) &gt; 0)
    ) then
  begin 
    select result from checkrecord(:loc, 2, :dl2) into :tmp;
    dl2 = trim(:dl2)||:tmp;
  end

  if 
    (
      (nullif(:dl3, '0') &lt;&gt;'0') and
      (nullif(:oc11, 0) &gt; 0)
    ) then
  begin 
    select result from checkrecord(:loc, 2, :dl3) into :tmp;
    dl3 = trim(:dl3)||:tmp;
  end

  if 
    (
      (nullif(:dl4, '0') &lt;&gt;'0') and
      (nullif(:oc12, 0) &gt; 0)
    ) then
  begin 
    select result from checkrecord(:loc, 2, :dl4) into :tmp;
    dl4 = trim(:dl4)||:tmp;
  end

  tot = :TOTALL;

  if (nullif(:totall, '0') &lt;&gt; '0') then
  begin 
    select result from checkrecord(:loc, -2, :totall) into :tmp;
    totall = trim(:totall)||:tmp;
  end

  tmp = null;
  suspend;
end
end
^
SET TERM ; ^</script>
		<script>SET TERM ^ ;
CREATE OR ALTER PROCEDURE COMPETITIONWINNERS2 (
    idc numeric(12,0))
returns (
    place integer,
    fio varchar(150),
    totall varchar(12),
    gloss double precision,
    ageclass varchar(25),
    sex integer,
    loc numeric(12,0),
    idcateg numeric(12,0),
    categname char(10))
as
declare variable cwc char(25);
declare variable cidac char(25);
declare variable i integer;
begin
  cWC = '';
  cIDAC = '';
  I = 1;

  FOR
  SELECT
    FIO, TOTALL, PTS, AGECLASS, SEX, LOC, WCATEG
  FROM
    FINALREPORT2(:IDC)
  WHERE
    coalesce(TOT, 0) &gt; 0
  into :"FIO", :"TOTALL", :"GLOSS",  :"AGECLASS", :"SEX", :"LOC", :CATEGNAME
  do
  begin
    if ((:cWC &lt;&gt; :CATEGNAME ) or (:cIDAC &lt;&gt; :AGECLASS)) then
    begin
      i = 1;
      cWC =  :CATEGNAME;
      cIDAC = :AGECLASS;
    end

    if (:i &lt; 4) then
    begin
      PLACE = :i;
      i = :i + 1;
      suspend;
    end
  end

  cWC = NULL;
  cIDAC = NULL;
  I = NULL;
end

^
SET TERM ; ^</script>

	</version>

	<version number="0.09">
		<script>ALTER SEQUENCE TOWNS RESTART WITH 0</script>
		<script>SET TERM ^ ;

CREATE OR ALTER PROCEDURE DO_UP 
as
begin
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Адыгея','Адыгейск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Адыгея','Майкоп', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Алтай','Горно-Алтайск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Алтайский край','Алейск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Алтайский край','Барнаул', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Алтайский край','Белокуриха', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Алтайский край','Бийск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Алтайский край','Горняк', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Алтайский край','Заринск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Алтайский край','Змеиногорск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Алтайский край','Камень-на-Оби', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Алтайский край','Новоалтайск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Алтайский край','Рубцовск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Алтайский край','Славгород', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Алтайский край','Яровое', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Амурская область','Белогорск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Амурская область','Благовещенск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Амурская область','Завитинск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Амурская область','Зея', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Амурская область','Райчихинск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Амурская область','Свободный', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Амурская область','Сковородино', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Амурская область','Тында', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Амурская область','Шимановск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Архангельская область','Архангельск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Архангельская область','Вельск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Архангельская область','Каргополь', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Архангельская область','Коряжма', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Архангельская область','Котлас', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Архангельская область','Мезень', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Архангельская область','Мирный', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Архангельская область','Новодвинск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Архангельская область','Няндома', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Архангельская область','Онега', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Архангельская область','Северодвинск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Архангельская область','Сольвычегодск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Архангельская область','Шенкурск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Астраханская область','Астрахань', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Астраханская область','Ахтубинск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Астраханская область','Знаменск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Астраханская область','Камызяк', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Астраханская область','Нариманов', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Астраханская область','Харабали', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Башкортостан','Агидель', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Башкортостан','Баймак', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Башкортостан','Белебей', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Башкортостан','Белорецк', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Башкортостан','Бирск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Башкортостан','Благовещенск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Башкортостан','Давлеканово', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Башкортостан','Дюртюли', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Башкортостан','Ишимбай', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Башкортостан','Кумертау', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Башкортостан','Межгорье', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Башкортостан','Мелеуз', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Башкортостан','Нефтекамск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Башкортостан','Октябрьский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Башкортостан','Салават', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Башкортостан','Сибай', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Башкортостан','Стерлитамак', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Башкортостан','Туймазы', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Башкортостан','Уфа', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Башкортостан','Учалы', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Башкортостан','Янаул', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Белгородская область','Алексеевка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Белгородская область','Белгород', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Белгородская область','Бирюч', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Белгородская область','Валуйки', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Белгородская область','Грайворон', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Белгородская область','Губкин', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Белгородская область','Короча', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Белгородская область','Новый Оскол', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Белгородская область','Старый Оскол', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Белгородская область','Строитель', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Белгородская область','Шебекино', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Брянская область','Брянск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Брянская область','Дятьково', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Брянская область','Жуковка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Брянская область','Злынка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Брянская область','Карачев', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Брянская область','Клинцы', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Брянская область','Мглин', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Брянская область','Новозыбков', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Брянская область','Почеп', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Брянская область','Севск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Брянская область','Сельцо', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Брянская область','Стародуб', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Брянская область','Сураж', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Брянская область','Трубчевск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Брянская область','Унеча', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Брянская область','Фокино', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Бурятия','Бабушкин', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Бурятия','Гусиноозёрск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Бурятия','Закаменск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Бурятия','Кяхта', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Бурятия','Северобайкальск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Бурятия','Улан-Удэ', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Владимирская область','Александров', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Владимирская область','Владимир', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Владимирская область','Вязники', CURRENT_TIMESTAMP FROM TMP;
end
^
SET TERM ; ^</script>
		<script>EXECUTE PROCEDURE DO_UP;</script>

		<script>SET TERM ^ ;

CREATE OR ALTER PROCEDURE DO_UP 
as
begin
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Владимирская область','Гороховец', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Владимирская область','Гусь-Хрустальный', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Владимирская область','Камешково', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Владимирская область','Карабаново', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Владимирская область','Киржач', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Владимирская область','Ковров', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Владимирская область','Кольчугино', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Владимирская область','Костерёво', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Владимирская область','Курлово', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Владимирская область','Лакинск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Владимирская область','Меленки', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Владимирская область','Муром', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Владимирская область','Петушки', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Владимирская область','Покров', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Владимирская область','Радужный', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Владимирская область','Собинка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Владимирская область','Струнино', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Владимирская область','Судогда', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Владимирская область','Суздаль', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Владимирская область','Юрьев-Польский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Волгоградская область','Волгоград', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Волгоградская область','Волжский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Волгоградская область','Дубовка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Волгоградская область','Жирновск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Волгоградская область','Калач-на-Дону', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Волгоградская область','Камышин', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Волгоградская область','Котельниково', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Волгоградская область','Котово', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Волгоградская область','Краснослободск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Волгоградская область','Ленинск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Волгоградская область','Михайловка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Волгоградская область','Николаевск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Волгоградская область','Новоаннинский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Волгоградская область','Палласовка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Волгоградская область','Петров Вал', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Волгоградская область','Серафимович', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Волгоградская область','Суровикино', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Волгоградская область','Урюпинск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Волгоградская область','Фролово', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Вологодская область','Бабаево', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Вологодская область','Белозерск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Вологодская область','Великий Устюг', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Вологодская область','Вологда', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Вологодская область','Вытегра', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Вологодская область','Грязовец', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Вологодская область','Кадников', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Вологодская область','Кириллов', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Вологодская область','Красавино', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Вологодская область','Никольск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Вологодская область','Сокол', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Вологодская область','Тотьма', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Вологодская область','Устюжна', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Вологодская область','Харовск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Вологодская область','Череповец', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Воронежская область','Бобров', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Воронежская область','Богучар', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Воронежская область','Борисоглебск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Воронежская область','Бутурлиновка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Воронежская область','Воронеж', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Воронежская область','Калач', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Воронежская область','Лиски', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Воронежская область','Нововоронеж', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Воронежская область','Новохопёрск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Воронежская область','Острогожск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Воронежская область','Павловск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Воронежская область','Поворино', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Воронежская область','Россошь', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Воронежская область','Семилуки', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Воронежская область','Эртиль', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Дагестан','Буйнакск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Дагестан','Дагестанские Огни', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Дагестан','Дербент', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Дагестан','Избербаш', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Дагестан','Каспийск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Дагестан','Кизилюрт', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Дагестан','Кизляр', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Дагестан','Махачкала', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Дагестан','Хасавюрт', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Дагестан','Южно-Сухокумск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Еврейская АО','Биробиджан', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Еврейская АО','Облучье', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Забайкальский край','Балей', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Забайкальский край','Борзя', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Забайкальский край','Краснокаменск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Забайкальский край','Могоча', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Забайкальский край','Нерчинск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Забайкальский край','Петровск-Забайкальский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Забайкальский край','Сретенск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Забайкальский край','Хилок', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Забайкальский край','Чита', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Забайкальский край','Шилка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ивановская область','Вичуга', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ивановская область','Гаврилов Посад', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ивановская область','Заволжск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ивановская область','Иваново', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ивановская область','Кинешма', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ивановская область','Комсомольск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ивановская область','Кохма', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ивановская область','Наволоки', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ивановская область','Плёс', CURRENT_TIMESTAMP FROM TMP;
end
^
SET TERM ; ^</script>
		<script>EXECUTE PROCEDURE DO_UP;</script>

		<script>SET TERM ^ ;

CREATE OR ALTER PROCEDURE DO_UP 
as
begin
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ивановская область','Приволжск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ивановская область','Пучеж', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ивановская область','Родники', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ивановская область','Тейково', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ивановская область','Фурманов', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ивановская область','Шуя', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ивановская область','Южа', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ивановская область','Юрьевец', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ингушетия','Карабулак', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ингушетия','Магас', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ингушетия','Малгобек', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ингушетия','Назрань', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Иркутская область','Алзамай', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Иркутская область','Ангарск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Иркутская область','Байкальск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Иркутская область','Бирюсинск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Иркутская область','Бодайбо', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Иркутская область','Братск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Иркутская область','Вихоревка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Иркутская область','Железногорск-Илимский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Иркутская область','Зима', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Иркутская область','Иркутск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Иркутская область','Киренск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Иркутская область','Нижнеудинск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Иркутская область','Саянск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Иркутская область','Свирск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Иркутская область','Слюдянка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Иркутская область','Тайшет', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Иркутская область','Тулун', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Иркутская область','Усолье-Сибирское', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Иркутская область','Усть-Илимск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Иркутская область','Усть-Кут', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Иркутская область','Черемхово', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Иркутская область','Шелехов', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кабардино-Балкария','Баксан', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кабардино-Балкария','Майский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кабардино-Балкария','Нальчик', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кабардино-Балкария','Нарткала', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кабардино-Балкария','Прохладный', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кабардино-Балкария','Терек', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кабардино-Балкария','Тырныауз', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кабардино-Балкария','Чегем', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Калининградская область','Багратионовск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Калининградская область','Балтийск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Калининградская область','Гвардейск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Калининградская область','Гурьевск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Калининградская область','Гусев', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Калининградская область','Зеленоградск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Калининградская область','Калининград', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Калининградская область','Краснознаменск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Калининградская область','Ладушкин', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Калининградская область','Мамоново', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Калининградская область','Неман', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Калининградская область','Нестеров', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Калининградская область','Озёрск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Калининградская область','Пионерский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Калининградская область','Полесск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Калининградская область','Правдинск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Калининградская область','Светлогорск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Калининградская область','Светлый', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Калининградская область','Славск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Калининградская область','Советск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Калининградская область','Черняховск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Калининградская область','Приморск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Калмыкия','Городовиковск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Калмыкия','Лагань', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Калмыкия','Элиста', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Калужская область','Балабаново', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Калужская область','Белоусово', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Калужская область','Боровск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Калужская область','Ермолино', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Калужская область','Жиздра', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Калужская область','Жуков', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Калужская область','Калуга', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Калужская область','Киров', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Калужская область','Козельск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Калужская область','Кондрово', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Калужская область','Кремёнки', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Калужская область','Людиново', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Калужская область','Малоярославец', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Калужская область','Медынь', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Калужская область','Мещовск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Калужская область','Мосальск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Калужская область','Обнинск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Калужская область','Сосенский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Калужская область','Спас-Деменск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Калужская область','Сухиничи', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Калужская область','Таруса', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Калужская область','Юхнов', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Камчатский край','Вилючинск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Камчатский край','Елизово', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Камчатский край','Петропавловск-Камчатский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Карачаево-Черкесия','Карачаевск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Карачаево-Черкесия','Теберда', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Карачаево-Черкесия','Усть-Джегута', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Карачаево-Черкесия','Черкесск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Карелия','Беломорск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Карелия','Кемь', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Карелия','Кондопога', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Карелия','Костомукша', CURRENT_TIMESTAMP FROM TMP;
end
^
SET TERM ; ^</script>
		<script>EXECUTE PROCEDURE DO_UP;</script>
		<script>SET TERM ^ ;

CREATE OR ALTER PROCEDURE DO_UP 
as
begin
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Карелия','Лахденпохья', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Карелия','Медвежьегорск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Карелия','Олонец', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Карелия','Петрозаводск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Карелия','Питкяранта', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Карелия','Пудож', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Карелия','Сегежа', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Карелия','Сортавала', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Карелия','Суоярви', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кемеровская область','Анжеро-Судженск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кемеровская область','Белово', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кемеровская область','Берёзовский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кемеровская область','Гурьевск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кемеровская область','Калтан', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кемеровская область','Кемерово', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кемеровская область','Киселёвск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кемеровская область','Ленинск-Кузнецкий', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кемеровская область','Мариинск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кемеровская область','Междуреченск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кемеровская область','Мыски', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кемеровская область','Новокузнецк', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кемеровская область','Осинники', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кемеровская область','Полысаево', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кемеровская область','Прокопьевск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кемеровская область','Салаир', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кемеровская область','Тайга', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кемеровская область','Таштагол', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кемеровская область','Топки', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кемеровская область','Юрга', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кировская область','Белая Холуница', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кировская область','Вятские Поляны', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кировская область','Зуевка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кировская область','Киров', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кировская область','Кирово-Чепецк', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кировская область','Кирс', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кировская область','Котельнич', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кировская область','Луза', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кировская область','Малмыж', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кировская область','Мураши', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кировская область','Нолинск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кировская область','Омутнинск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кировская область','Орлов', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кировская область','Слободской', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кировская область','Советск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кировская область','Сосновка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кировская область','Уржум', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кировская область','Яранск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Коми','Воркута', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Коми','Вуктыл', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Коми','Емва', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Коми','Инта', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Коми','Микунь', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Коми','Печора', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Коми','Сосногорск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Коми','Сыктывкар', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Коми','Усинск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Коми','Ухта', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Костромская область','Буй', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Костромская область','Волгореченск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Костромская область','Галич', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Костромская область','Кологрив', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Костромская область','Кострома', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Костромская область','Макарьев', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Костромская область','Мантурово', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Костромская область','Нерехта', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Костромская область','Нея', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Костромская область','Солигалич', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Костромская область','Чухлома', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Костромская область','Шарья', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','Абинск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','Анапа', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','Апшеронск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','Армавир', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','Белореченск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','Геленджик', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','Горячий Ключ', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','Гулькевичи', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','Ейск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','Кореновск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','Краснодар', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','Кропоткин', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','Крымск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','Курганинск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','Лабинск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','Новокубанск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','Новороссийск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','Приморско-Ахтарск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','Славянск-на-Кубани', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','Сочи', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','Темрюк', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','Тимашёвск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','Тихорецк', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','Туапсе', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','Усть-Лабинск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','Хадыженск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Красноярский край','Артёмовск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Красноярский край','Ачинск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Красноярский край','Боготол', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Красноярский край','Бородино', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Красноярский край','Дивногорск', CURRENT_TIMESTAMP FROM TMP;
end
^
SET TERM ; ^</script>
		<script>EXECUTE PROCEDURE DO_UP;</script>
		<script>SET TERM ^ ;

CREATE OR ALTER PROCEDURE DO_UP 
as
begin
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Красноярский край','Дудинка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Красноярский край','Енисейск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Красноярский край','Железногорск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Красноярский край','Заозёрный', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Красноярский край','Зеленогорск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Красноярский край','Игарка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Красноярский край','Иланский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Красноярский край','Канск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Красноярский край','Кодинск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Красноярский край','Красноярск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Красноярский край','Лесосибирск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Красноярский край','Минусинск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Красноярский край','Назарово', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Красноярский край','Норильск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Красноярский край','Сосновоборск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Красноярский край','Ужур', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Красноярский край','Уяр', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Красноярский край','Шарыпово', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Курганская область','Далматово', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Курганская область','Катайск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Курганская область','Курган', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Курганская область','Куртамыш', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Курганская область','Макушино', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Курганская область','Петухово', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Курганская область','Шадринск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Курганская область','Шумиха', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Курганская область','Щучье', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Курская область','Дмитриев', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Курская область','Железногорск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Курская область','Курск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Курская область','Курчатов', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Курская область','Льгов', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Курская область','Обоянь', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Курская область','Рыльск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Курская область','Суджа', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Курская область','Фатеж', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Курская область','Щигры', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ленинградская область','Бокситогорск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ленинградская область','Волосово', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ленинградская область','Волхов', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ленинградская область','Всеволожск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ленинградская область','Выборг', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ленинградская область','Высоцк', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ленинградская область','Гатчина', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ленинградская область','Ивангород', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ленинградская область','Каменногорск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ленинградская область','Кингисепп', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ленинградская область','Кириши', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ленинградская область','Кировск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ленинградская область','Коммунар', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ленинградская область','Лодейное Поле', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ленинградская область','Луга', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ленинградская область','Любань', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ленинградская область','Никольское', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ленинградская область','Новая Ладога', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ленинградская область','Отрадное', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ленинградская область','Пикалёво', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ленинградская область','Подпорожье', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ленинградская область','Приморск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ленинградская область','Приозерск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ленинградская область','Светогорск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ленинградская область','Сертолово', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ленинградская область','Сланцы', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ленинградская область','Сосновый Бор', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ленинградская область','Сясьстрой', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ленинградская область','Тихвин', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ленинградская область','Тосно', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ленинградская область','Шлиссельбург', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Липецкая область','Грязи', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Липецкая область','Данков', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Липецкая область','Елец', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Липецкая область','Задонск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Липецкая область','Лебедянь', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Липецкая область','Липецк', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Липецкая область','Усмань', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Липецкая область','Чаплыгин', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Магаданская область','Магадан', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Магаданская область','Сусуман', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Марий Эл','Волжск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Марий Эл','Звенигово', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Марий Эл','Йошкар-Ола', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Марий Эл','Козьмодемьянск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Мордовия','Ардатов', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Мордовия','Инсар', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Мордовия','Ковылкино', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Мордовия','Краснослободск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Мордовия','Рузаевка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Мордовия','Саранск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Мордовия','Темников', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Москва','Москва', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Апрелевка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Балашиха', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Бронницы', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Верея', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Видное', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Волоколамск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Воскресенск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Высоковск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Голицыно', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Дедовск', CURRENT_TIMESTAMP FROM TMP;
end
^
SET TERM ; ^</script>
		<script>EXECUTE PROCEDURE DO_UP;</script>
		<script>SET TERM ^ ;
CREATE OR ALTER PROCEDURE DO_UP 
as
begin
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Дзержинский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Дмитров', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Долгопрудный', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Домодедово', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Дрезна', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Дубна', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Егорьевск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Железнодорожный', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Жуковский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Зарайск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Звенигород', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Ивантеевка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Истра', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Кашира', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Климовск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Клин', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Коломна', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Котельники', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Королёв', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Красноармейск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Красногорск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Краснозаводск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Краснознаменск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Кубинка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Куровское', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Ликино-Дулёво', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Лобня', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Лосино-Петровский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Луховицы', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Лыткарино', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Люберцы', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Можайск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Московский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Мытищи', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Наро-Фоминск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Ногинск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Одинцово', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Ожерелье', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Озёры', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Орехово-Зуево', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Павловский Посад', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Пересвет', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Подольск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Протвино', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Пушкино', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Пущино', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Раменское', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Реутов', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Рошаль', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Руза', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Сергиев Посад', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Серпухов', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Солнечногорск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Старая Купавна', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Ступино', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Талдом', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Троицк', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Фрязино', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Химки', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Хотьково', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Черноголовка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Чехов', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Шатура', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Щёлково', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Щербинка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Электрогорск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Электросталь', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Электроугли', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Юбилейный', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','Яхрома', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Мурманская область','Апатиты', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Мурманская область','Гаджиево', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Мурманская область','Заозёрск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Мурманская область','Заполярный', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Мурманская область','Кандалакша', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Мурманская область','Кировск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Мурманская область','Ковдор', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Мурманская область','Кола', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Мурманская область','Мончегорск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Мурманская область','Мурманск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Мурманская область','Оленегорск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Мурманская область','Островной', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Мурманская область','Полярные Зори', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Мурманская область','Полярный', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Мурманская область','Североморск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Мурманская область','Снежногорск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ненецкий Авт. Окр.','Нарьян-Мар', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Нижегородская область','Арзамас', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Нижегородская область','Балахна', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Нижегородская область','Богородск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Нижегородская область','Бор', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Нижегородская область','Ветлуга', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Нижегородская область','Володарск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Нижегородская область','Ворсма', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Нижегородская область','Выкса', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Нижегородская область','Горбатов', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Нижегородская область','Городец', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Нижегородская область','Дзержинск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Нижегородская область','Заволжье', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Нижегородская область','Княгинино', CURRENT_TIMESTAMP FROM TMP;
end
^
SET TERM ; ^</script>
		<script>EXECUTE PROCEDURE DO_UP;</script>
		<script>SET TERM ^ ;
CREATE OR ALTER PROCEDURE DO_UP 
as
begin
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Нижегородская область','Кстово', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Нижегородская область','Кулебаки', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Нижегородская область','Лукоянов', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Нижегородская область','Лысково', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Нижегородская область','Навашино', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Нижегородская область','Нижний Новгород', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Нижегородская область','Павлово', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Нижегородская область','Первомайск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Нижегородская область','Перевоз', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Нижегородская область','Саров', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Нижегородская область','Семёнов', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Нижегородская область','Сергач', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Нижегородская область','Урень', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Нижегородская область','Чкаловск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Нижегородская область','Шахунья', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Новгородская область','Боровичи', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Новгородская область','Валдай', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Новгородская область','Великий Новгород', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Новгородская область','Малая Вишера', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Новгородская область','Окуловка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Новгородская область','Пестово', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Новгородская область','Сольцы', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Новгородская область','Старая Русса', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Новгородская область','Холм', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Новгородская область','Чудово', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Новосибирская область','Барабинск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Новосибирская область','Бердск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Новосибирская область','Болотное', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Новосибирская область','Искитим', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Новосибирская область','Карасук', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Новосибирская область','Каргат', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Новосибирская область','Куйбышев', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Новосибирская область','Купино', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Новосибирская область','Новосибирск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Новосибирская область','Обь', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Новосибирская область','Татарск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Новосибирская область','Тогучин', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Новосибирская область','Черепаново', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Новосибирская область','Чулым', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Омская область','Исилькуль', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Омская область','Калачинск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Омская область','Называевск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Омская область','Омск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Омская область','Тара', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Омская область','Тюкалинск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Оренбургская область','Абдулино', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Оренбургская область','Бугуруслан', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Оренбургская область','Бузулук', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Оренбургская область','Гай', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Оренбургская область','Кувандык', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Оренбургская область','Медногорск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Оренбургская область','Новотроицк', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Оренбургская область','Оренбург', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Оренбургская область','Орск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Оренбургская область','Соль-Илецк', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Оренбургская область','Сорочинск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Оренбургская область','Ясный', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Орловская область','Болхов', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Орловская область','Дмитровск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Орловская область','Ливны', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Орловская область','Малоархангельск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Орловская область','Мценск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Орловская область','Новосиль', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Орловская область','Орёл', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Пензенская область','Белинский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Пензенская область','Городище', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Пензенская область','Заречный', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Пензенская область','Каменка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Пензенская область','Кузнецк', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Пензенская область','Нижний Ломов', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Пензенская область','Никольск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Пензенская область','Пенза', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Пензенская область','Сердобск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Пензенская область','Спасск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Пензенская область','Сурск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Пермский край','Александровск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Пермский край','Березники', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Пермский край','Верещагино', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Пермский край','Горнозаводск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Пермский край','Гремячинск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Пермский край','Губаха', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Пермский край','Добрянка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Пермский край','Кизел', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Пермский край','Красновишерск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Пермский край','Краснокамск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Пермский край','Кудымкар', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Пермский край','Кунгур', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Пермский край','Лысьва', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Пермский край','Нытва', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Пермский край','Оса', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Пермский край','Оханск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Пермский край','Очёр', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Пермский край','Пермь', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Пермский край','Соликамск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Пермский край','Усолье', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Пермский край','Чайковский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Пермский край','Чердынь', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Пермский край','Чёрмоз', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Пермский край','Чернушка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Пермский край','Чусовой', CURRENT_TIMESTAMP FROM TMP;
end
^
SET TERM ; ^</script>
		<script>EXECUTE PROCEDURE DO_UP;</script>
		<script>SET TERM ^ ;
CREATE OR ALTER PROCEDURE DO_UP 
as
begin
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Приморский край','Арсеньев', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Приморский край','Артём', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Приморский край','Большой Камень', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Приморский край','Владивосток', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Приморский край','Дальнегорск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Приморский край','Дальнереченск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Приморский край','Лесозаводск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Приморский край','Находка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Приморский край','Партизанск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Приморский край','Спасск-Дальний', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Приморский край','Уссурийск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Приморский край','Фокино', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Псковская область','Великие Луки', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Псковская область','Гдов', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Псковская область','Дно', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Псковская область','Невель', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Псковская область','Новоржев', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Псковская область','Новосокольники', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Псковская область','Опочка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Псковская область','Остров', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Псковская область','Печоры', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Псковская область','Порхов', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Псковская область','Псков', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Псковская область','Пустошка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Псковская область','Пыталово', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Псковская область','Себеж', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ростовская область','Азов', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ростовская область','Аксай', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ростовская область','Батайск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ростовская область','Белая Калитва', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ростовская область','Волгодонск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ростовская область','Гуково', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ростовская область','Донецк', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ростовская область','Зверево', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ростовская область','Зерноград', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ростовская область','Каменск-Шахтинский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ростовская область','Константиновск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ростовская область','Красный Сулин', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ростовская область','Миллерово', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ростовская область','Морозовск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ростовская область','Новочеркасск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ростовская область','Новошахтинск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ростовская область','Пролетарск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ростовская область','Ростов-на-Дону', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ростовская область','Сальск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ростовская область','Семикаракорск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ростовская область','Таганрог', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ростовская область','Цимлянск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ростовская область','Шахты', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Рязанская область','Касимов', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Рязанская область','Кораблино', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Рязанская область','Михайлов', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Рязанская область','Новомичуринск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Рязанская область','Рыбное', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Рязанская область','Ряжск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Рязанская область','Рязань', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Рязанская область','Сасово', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Рязанская область','Скопин', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Рязанская область','Спас-Клепики', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Рязанская область','Спасск-Рязанский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Рязанская область','Шацк', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Самарская область','Жигулёвск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Самарская область','Кинель', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Самарская область','Нефтегорск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Самарская область','Новокуйбышевск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Самарская область','Октябрьск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Самарская область','Отрадный', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Самарская область','Похвистнево', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Самарская область','Самара', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Самарская область','Сызрань', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Самарская область','Тольятти', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Самарская область','Чапаевск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Санкт-Петербург','Зеленогорск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Санкт-Петербург','Колпино', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Санкт-Петербург','Красное Село', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Санкт-Петербург','Кронштадт', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Санкт-Петербург','Ломоносов', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Санкт-Петербург','Павловск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Санкт-Петербург','Петергоф', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Санкт-Петербург','Пушкин', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Санкт-Петербург','Санкт-Петербург', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Санкт-Петербург','Сестрорецк', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Саратовская область','Аркадак', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Саратовская область','Аткарск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Саратовская область','Балаково', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Саратовская область','Балашов', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Саратовская область','Вольск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Саратовская область','Ершов', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Саратовская область','Калининск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Саратовская область','Красноармейск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Саратовская область','Красный Кут', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Саратовская область','Маркс', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Саратовская область','Новоузенск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Саратовская область','Петровск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Саратовская область','Пугачёв', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Саратовская область','Ртищево', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Саратовская область','Саратов', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Саратовская область','Хвалынск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Саратовская область','Шиханы', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Саратовская область','Энгельс', CURRENT_TIMESTAMP FROM TMP;
end
^
SET TERM ; ^</script>
		<script>EXECUTE PROCEDURE DO_UP;</script>
		<script>SET TERM ^ ;
CREATE OR ALTER PROCEDURE DO_UP 
as
begin
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Сахалинская область','Александровск-Сахалинский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Сахалинская область','Анива', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Сахалинская область','Долинск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Сахалинская область','Корсаков', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Сахалинская область','Курильск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Сахалинская область','Макаров', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Сахалинская область','Невельск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Сахалинская область','Оха', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Сахалинская область','Поронайск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Сахалинская область','Северо-Курильск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Сахалинская область','Томари', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Сахалинская область','Углегорск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Сахалинская область','Холмск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Сахалинская область','Шахтёрск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Сахалинская область','Южно-Сахалинск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Свердловская область','Алапаевск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Свердловская область','Арамиль', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Свердловская область','Артёмовский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Свердловская область','Асбест', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Свердловская область','Берёзовский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Свердловская область','Богданович', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Свердловская область','Верхний Тагил', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Свердловская область','Верхняя Пышма', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Свердловская область','Верхняя Салда', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Свердловская область','Верхняя Тура', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Свердловская область','Верхотурье', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Свердловская область','Волчанск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Свердловская область','Дегтярск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Свердловская область','Екатеринбург', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Свердловская область','Заречный', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Свердловская область','Ивдель', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Свердловская область','Ирбит', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Свердловская область','Каменск-Уральский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Свердловская область','Камышлов', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Свердловская область','Карпинск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Свердловская область','Качканар', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Свердловская область','Кировград', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Свердловская область','Краснотурьинск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Свердловская область','Красноуральск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Свердловская область','Красноуфимск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Свердловская область','Кушва', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Свердловская область','Лесной', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Свердловская область','Михайловск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Свердловская область','Невьянск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Свердловская область','Нижние Серги', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Свердловская область','Нижний Тагил', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Свердловская область','Нижняя Салда', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Свердловская область','Нижняя Тура', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Свердловская область','Новая Ляля', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Свердловская область','Новоуральск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Свердловская область','Первоуральск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Свердловская область','Полевской', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Свердловская область','Ревда', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Свердловская область','Реж', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Свердловская область','Североуральск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Свердловская область','Серов', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Свердловская область','Среднеуральск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Свердловская область','Сухой Лог', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Свердловская область','Сысерть', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Свердловская область','Тавда', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Свердловская область','Талица', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Свердловская область','Туринск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Северная Осетия - Алания','Алагир', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Северная Осетия - Алания','Ардон', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Северная Осетия - Алания','Беслан', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Северная Осетия - Алания','Владикавказ', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Северная Осетия - Алания','Дигора', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Северная Осетия - Алания','Моздок', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Смоленская область','Велиж', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Смоленская область','Вязьма', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Смоленская область','Гагарин', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Смоленская область','Демидов', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Смоленская область','Десногорск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Смоленская область','Дорогобуж', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Смоленская область','Духовщина', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Смоленская область','Ельня', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Смоленская область','Починок', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Смоленская область','Рославль', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Смоленская область','Рудня', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Смоленская область','Сафоново', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Смоленская область','Смоленск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Смоленская область','Сычёвка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Смоленская область','Ярцево', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ставропольский край','Благодарный', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ставропольский край','Будённовск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ставропольский край','Георгиевск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ставропольский край','Ессентуки', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ставропольский край','Железноводск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ставропольский край','Зеленокумск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ставропольский край','Изобильный', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ставропольский край','Ипатово', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ставропольский край','Кисловодск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ставропольский край','Лермонтов', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ставропольский край','Минеральные Воды', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ставропольский край','Михайловск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ставропольский край','Невинномысск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ставропольский край','Нефтекумск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ставропольский край','Новоалександровск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ставропольский край','Новопавловск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ставропольский край','Пятигорск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ставропольский край','Светлоград', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ставропольский край','Ставрополь', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тамбовская область','Жердевка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тамбовская область','Кирсанов', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тамбовская область','Котовск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тамбовская область','Мичуринск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тамбовская область','Моршанск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тамбовская область','Рассказово', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тамбовская область','Тамбов', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тамбовская область','Уварово', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Татарстан','Агрыз', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Татарстан','Азнакаево', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Татарстан','Альметьевск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Татарстан','Арск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Татарстан','Бавлы', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Татарстан','Болгар', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Татарстан','Бугульма', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Татарстан','Буинск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Татарстан','Елабуга', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Татарстан','Заинск', CURRENT_TIMESTAMP FROM TMP;
end
^
SET TERM ; ^</script>
		<script>EXECUTE PROCEDURE DO_UP;</script>
		<script>SET TERM ^ ;
CREATE OR ALTER PROCEDURE DO_UP 
as
begin
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Татарстан','Зеленодольск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Татарстан','Казань', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Татарстан','Лаишево', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Татарстан','Лениногорск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Татарстан','Мамадыш', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Татарстан','Менделеевск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Татарстан','Мензелинск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Татарстан','Набережные Челны', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Татарстан','Нижнекамск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Татарстан','Нурлат', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Татарстан','Тетюши', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Татарстан','Чистополь', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тверская область','Андреаполь', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тверская область','Бежецк', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тверская область','Белый', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тверская область','Бологое', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тверская область','Весьегонск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тверская область','Вышний Волочёк', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тверская область','Западная Двина', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тверская область','Зубцов', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тверская область','Калязин', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тверская область','Кашин', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тверская область','Кимры', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тверская область','Конаково', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тверская область','Красный Холм', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тверская область','Кувшиново', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тверская область','Лихославль', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тверская область','Нелидово', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тверская область','Осташков', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тверская область','Ржев', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тверская область','Старица', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тверская область','Тверь', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тверская область','Торжок', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тверская область','Торопец', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тверская область','Удомля', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Томская область','Асино', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Томская область','Кедровый', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Томская область','Колпашево', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Томская область','Северск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Томская область','Стрежевой', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Томская область','Томск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тульская область','Алексин', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тульская область','Белёв', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тульская область','Богородицк', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тульская область','Болохово', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тульская область','Венёв', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тульская область','Донской', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тульская область','Ефремов', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тульская область','Кимовск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тульская область','Киреевск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тульская область','Липки', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тульская область','Новомосковск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тульская область','Плавск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тульская область','Суворов', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тульская область','Тула', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тульская область','Узловая', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тульская область','Чекалин', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тульская область','Щёкино', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тульская область','Ясногорск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тульская область','Советск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тыва','Ак-Довурак', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тыва','Кызыл', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тыва','Туран', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тыва','Чадан', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тыва','Шагонар', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тюменская область','Заводоуковск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тюменская область','Ишим', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тюменская область','Тобольск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тюменская область','Тюмень', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тюменская область','Ялуторовск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Удмуртия','Воткинск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Удмуртия','Глазов', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Удмуртия','Ижевск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Удмуртия','Камбарка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Удмуртия','Можга', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Удмуртия','Сарапул', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ульяновская область','Барыш', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ульяновская область','Димитровград', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ульяновская область','Инза', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ульяновская область','Новоульяновск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ульяновская область','Сенгилей', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ульяновская область','Ульяновск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Хабаровский край','Амурск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Хабаровский край','Бикин', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Хабаровский край','Вяземский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Хабаровский край','Комсомольск-на-Амуре', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Хабаровский край','Николаевск-на-Амуре', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Хабаровский край','Советская Гавань', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Хабаровский край','Хабаровск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Хакасия','Абаза', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Хакасия','Абакан', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Хакасия','Саяногорск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Хакасия','Сорск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Хакасия','Черногорск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ханты-Мансийский авт. окр.','Белоярский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ханты-Мансийский авт. окр.','Когалым', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ханты-Мансийский авт. окр.','Лангепас', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ханты-Мансийский авт. окр.','Лянтор', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ханты-Мансийский авт. окр.','Мегион', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ханты-Мансийский авт. окр.','Нефтеюганск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ханты-Мансийский авт. окр.','Нижневартовск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ханты-Мансийский авт. окр.','Нягань', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ханты-Мансийский авт. окр.','Покачи', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ханты-Мансийский авт. окр.','Пыть-Ях', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ханты-Мансийский авт. окр.','Радужный', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ханты-Мансийский авт. окр.','Советский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ханты-Мансийский авт. окр.','Сургут', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ханты-Мансийский авт. окр.','Урай', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ханты-Мансийский авт. окр.','Ханты-Мансийск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ханты-Мансийский авт. окр.','Югорск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Челябинская область','Аша', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Челябинская область','Бакал', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Челябинская область','Верхнеуральск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Челябинская область','Верхний Уфалей', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Челябинская область','Еманжелинск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Челябинская область','Златоуст', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Челябинская область','Карабаш', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Челябинская область','Карталы', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Челябинская область','Касли', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Челябинская область','Катав-Ивановск', CURRENT_TIMESTAMP FROM TMP;
end
^
SET TERM ; ^</script>
		<script>EXECUTE PROCEDURE DO_UP;</script>
		<script>SET TERM ^ ;
CREATE OR ALTER PROCEDURE DO_UP 
as
begin
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Челябинская область','Копейск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Челябинская область','Коркино', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Челябинская область','Куса', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Челябинская область','Кыштым', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Челябинская область','Магнитогорск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Челябинская область','Миасс', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Челябинская область','Миньяр', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Челябинская область','Нязепетровск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Челябинская область','Озёрск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Челябинская область','Пласт', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Челябинская область','Сатка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Челябинская область','Сим', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Челябинская область','Снежинск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Челябинская область','Трёхгорный', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Челябинская область','Троицк', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Челябинская область','Усть-Катав', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Челябинская область','Чебаркуль', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Челябинская область','Челябинск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Челябинская область','Южноуральск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Челябинская область','Юрюзань', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Чечня','Аргун', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Чечня','Грозный', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Чечня','Гудермес', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Чечня','Урус-Мартан', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Чечня','Шали', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Чувашия','Алатырь', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Чувашия','Канаш', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Чувашия','Козловка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Чувашия','Мариинский Посад', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Чувашия','Новочебоксарск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Чувашия','Цивильск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Чувашия','Чебоксары', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Чувашия','Шумерля', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Чувашия','Ядрин', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Чукотский авт. окр.','Анадырь', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Чукотский авт. окр.','Билибино', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Чукотский авт. окр.','Певек', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Якутия','Алдан', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Якутия','Верхоянск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Якутия','Вилюйск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Якутия','Ленск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Якутия','Мирный', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Якутия','Нерюнгри', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Якутия','Нюрба', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Якутия','Олёкминск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Якутия','Покровск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Якутия','Среднеколымск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Якутия','Томмот', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Якутия','Удачный', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Якутия','Якутск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ямало-Ненецкий авт. окр.','Губкинский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ямало-Ненецкий авт. окр.','Лабытнанги', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ямало-Ненецкий авт. окр.','Муравленко', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ямало-Ненецкий авт. окр.','Надым', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ямало-Ненецкий авт. окр.','Новый Уренгой', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ямало-Ненецкий авт. окр.','Ноябрьск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ямало-Ненецкий авт. окр.','Салехард', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ямало-Ненецкий авт. окр.','Тарко-Сале', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ярославская область','Гаврилов-Ям', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ярославская область','Данилов', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ярославская область','Любим', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ярославская область','Мышкин', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ярославская область','Переславль-Залесский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ярославская область','Пошехонье', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ярославская область','Ростов', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ярославская область','Рыбинск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ярославская область','Тутаев', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ярославская область','Углич', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ярославская область','Ярославль', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ингушетия','станица Орджоникидзевская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','станица Каневская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ставропольский край','пгт Горячеводский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','станица Ленинградская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','пгт Нахабино', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','станица Динская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Саратовская область','пгт Приволжский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','станица Павловская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','пгт Томилино', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','станица Староминская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Воронежская область','село Новая Усмань', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ставропольский край','пгт Иноземцево', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','станица Кущёвская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ставропольский край','село Александровское', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ставропольский край','село Кочубеевское', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','станица Полтавская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','пгт Власиха', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Адыгея','пгт Яблоновский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ханты-Мансийский автономный округ — Югра','пгт Пойковский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','станица Тбилисская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','пгт Мостовской', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','станица Северская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','станица Елизаветинская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','станица Новотитаровская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','пгт Малаховка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','пгт Ильский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','станица Отрадная', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Самарская область','пгт Безенчук', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','пгт Монино', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Чечня','село Курчалой', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','станица Брюховецкая', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ингушетия','станица Нестеровская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','пгт Калининец', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Волгоградская область','пгт Городище', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','пгт Красково', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Башкортостан','пгт Чишмы', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Приморский край','пгт Лучегорск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Вологодская область','пгт Шексна', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Башкортостан','пгт Приютово', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Красноярский край','пгт Берёзовка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Удмуртия','пгт Игра', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Новосибирская область','пгт Линёво', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ханты-Мансийский автономный округ — Югра','пгт Фёдоровский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кабардино-Балкария','село Дугулубгей', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Чечня','село Ачхой-Мартан', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ессентукская','станица Ессентукская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','пгт Ахтырский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ростовская область','посёлок Орловский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ставропольский край','пгт Горячеводский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','пгт Нахабино', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Саратовская область','пгт Приволжский', CURRENT_TIMESTAMP FROM TMP;
end
^
SET TERM ; ^</script>
		<script>EXECUTE PROCEDURE DO_UP;</script>
		<script>SET TERM ^ ;
CREATE OR ALTER PROCEDURE DO_UP 
as
begin
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','пгт Томилино', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ставропольский край','пгт Иноземцево', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Адыгея','пгт Яблоновский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','пгт Власиха', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ханты-Мансийский автономный округ','пгт Пойковский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','пгт Мостовской', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','пгт Малаховка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','пгт Ильский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Самарская область','пгт Безенчук', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','пгт Монино', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','пгт Красково', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','пгт Калининец', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Волгоградская область','пгт Городище', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Башкортостан','пгт Чишмы', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Приморский край','пгт Лучегорск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Вологодская область','пгт Шексна', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Башкортостан','пгт Приютово', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Красноярский край','пгт Берёзовка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Удмуртия','пгт Игра', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Новосибирская область','пгт Линёво', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ханты-Мансийский автономный округ','пгт Фёдоровский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','пгт Ахтырский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Удмуртия','пгт Ува', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Алтайский край','пгт Южный', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','пгт Афипский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Алтайский край','пгт Тальменка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Новосибирская область','пгт Краснообск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Воронежская область','пгт Придонской[3]', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ставропольский край','пгт пос. Свободы', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кемеровская область','пгт Промышленная', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Воронежская область','пгт Анна', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Адыгея','пгт Энем', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','пгт Белоозёрский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Красноярский край','пгт Шушенское', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ханты-Мансийский автономный округ','пгт Излучинск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','пгт Тучково', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Дагестан','пгт Тарки', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Хабаровский край','пгт Ванино', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Татарстан','пгт Васильево', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Татарстан','пгт Кукмор', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Марий Эл','пгт Медведево', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Северная Осетия','пгт Заводской', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Белгородская область','пгт Разумное', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Свердловская область','пгт Рефтинский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Новосибирская область','пгт Коченёво', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Дагестан','пгт Семендер', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Удмуртия','пгт Балезино', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Татарстан','пгт Камские Поляны', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','пгт Софрино', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кемеровская область','пгт Новый Городок', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Дагестан','пгт Альбурикент', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Воронежская область','пгт Грибановский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Рязанская область','пгт Шилово', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Забайкальский край','пгт Агинское', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Дагестан','пгт Ленинкент', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Приморский край','пгт Кавалерово', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Новосибирская область','пгт Сузун', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Белгородская область','пгт Чернянка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Иркутская область','пгт Чунский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тыва','пгт Каа-Хем', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','пгт Удельная', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Волгоградская область','пгт Елань', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кемеровская область','пгт Яшкино', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Хакасия','пгт Усть-Абакан', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ханты-Мансийский автономный округ','пгт Белый Яр', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Бурятия','пгт Селенгинск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Калужская область','пгт Товарково', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Волгоградская область','пгт Средняя Ахтуба', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кемеровская область','пгт Бачатский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Брянская область','пгт Навля', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Мурманская область','пгт Мурмаши', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Приморский край','пгт Славянка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Татарстан','пгт Джалиль', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Белгородская область','пгт Борисовка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Брянская область','пгт Климово', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Красноярский край','пгт Курагино', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Якутия','пгт Айхал', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Воронежская область','пгт Сомово[3]', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Челябинская область','пгт Красногорский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Мордовия','пгт Комсомольский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ленинградская область','пгт Рощино', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Самарская область','пгт Суходол', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Забайкальский край','пгт Чернышевск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Брянская область','пгт Клетня', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Хабаровский край','пгт Солнечный', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Челябинская область','пгт Октябрьский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Омская область','пгт Таврическое', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Саратовская область','пгт Степное', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Челябинская область','пгт Роза', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Новосибирская область','пгт Маслянино', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Хабаровский край','пгт Чегдомын', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Забайкальский край','пгт Карымское', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кемеровская область','пгт Грамотеино', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Смоленская область','пгт Верхнеднепровский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Свердловская область','пгт Арти', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Архангельская область','пгт Вычегодский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','пгт Запрудня', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Волгоградская область','пгт Краснооктябрьский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Мурманская область','пгт Никель', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Пермский край','пгт Полазна', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тамбовская область','пгт Первомайский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','пгт Большие Вязёмы', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','пгт Селятино', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Свердловская область','пгт Белоярский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кемеровская область','пгт Инской', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Дагестан','пгт Белиджи', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Волгоградская область','пгт Светлый Яр', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Саратовская область','пгт Светлый', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Забайкальский край','пгт Шерловая Гора', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Архангельская область','пгт Коноша', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Дагестан','пгт Новый Кяхулай', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Забайкальский край','пгт Горный', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Дагестан','пгт Мамедкала', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Новосибирская область','пгт Кольцово', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Костромская область','пгт Ветлужский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ленинградская область','пгт Сиверский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Воронежская область','пгт Таловая', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Забайкальский край','пгт Первомайский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ставропольский край','пгт Солнечнодольск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Красноярский край','пгт Емельяново', CURRENT_TIMESTAMP FROM TMP;
end
^
SET TERM ; ^</script>
		<script>EXECUTE PROCEDURE DO_UP;</script>
		<script>SET TERM ^ ;
CREATE OR ALTER PROCEDURE DO_UP 
as
begin
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Коми','пгт Воргашор', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Орловская область','пгт Знаменка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Воронежская область','пгт Кантемировка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Хабаровский край','пгт Эльбан', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кемеровская область','пгт Краснобродский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Самарская область','пгт Рощинский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ленинградская область','пгт Вырица', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Новосибирская область','пгт Колывань', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ростовская область','пгт Усть-Донецкий', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Забайкальский край','пгт Забайкальск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ленинградская область','пгт Ульяновка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тверская область','пгт Редкино', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кемеровская область','пгт Яя', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Алтайский край','пгт Благовещенка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Пензенская область','пгт Мокшан', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Белгородская область','пгт Волоконовка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ульяновская область','пгт Чердаклы', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Алтайский край','пгт Сибирский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Вологодская область','пгт Кадуй', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Калужская область','пгт Воротынск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','пгт Михнево', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Омская область','пгт Большеречье', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','пгт Фряново', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ростовская область','пгт Каменоломни', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Волгоградская область','пгт Иловля', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','пгт Кокошкино', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Татарстан','пгт Алексеевское', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Амурская область','пгт Прогресс', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кемеровская область','пгт Тяжинский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ульяновская область','пгт Новоспасское', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ханты-Мансийский автономный округ','пгт Междуреченский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Архангельская область','пгт Плесецк', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Омская область','пгт Черлак', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Дагестан','пгт Шамхал', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Амурская область','пгт Магдагачи', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тверская область','пгт Озёрный', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','пгт Псебай', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ямало-Ненецкий автономный округ','пгт Пангоды', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Омская область','пгт Муромцево', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Пензенская область','пгт Земетчино', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','пгт Львовский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Адыгея','пгт Тульский[4]', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','пгт Шаховская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ленинградская область','пгт пос. им. Морозова', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Бурятия','пгт Онохой', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Амурская область','пгт Серышево', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Татарстан','пгт Уруссу', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Марий Эл','пгт Советский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Челябинская область','пгт Первомайский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','пгт Правдинский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','пгт Быково', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Пензенская область','пгт Башмаково', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Самарская область','пгт Алексеевка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Хабаровский край','пгт Хор', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Забайкальский край','пгт Атамановка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ульяновская область','пгт Ишеевка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Красноярский край','пгт Солнечный', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ханты-Мансийский автономный округ','пгт Новоаганск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Пермский край','пгт Яйва', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Мордовия','пгт Зубова Поляна', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Белгородская область','пгт Ракитное', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','пгт Ильинский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','пгт Некрасовский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Приморский край','пгт Пограничный', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Белгородская область','пгт Ровеньки', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Новосибирская область','пгт Ордынское', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Свердловская область','пгт Бисерть', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Забайкальский край','пгт Могойтуй', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Омская область','пгт Любинский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ленинградская область','пгт Мга', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Новосибирская область','пгт Мошково', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Сахалинская область','пгт Ноглики', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кемеровская область','пгт Шерегеш', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Забайкальский край','пгт Новокручининский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Иркутская область','пгт Новая Игирма', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','пгт Новомихайловский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Иркутская область','пгт Куйтун', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Владимирская область','пгт Балакирево', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ямало-Ненецкий автономный округ','пгт Уренгой', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тульская область','пгт Первомайский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Брянская область','пгт Локоть', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','пгт Андреевка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Татарстан','пгт Аксубаево', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','деревня Давыдово', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Оренбургская область','поселок Акбулак', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Свердловская область','поселок Баранчинский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Челябинская область','поселок Бреды', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Свердловская область','поселок Буланаш', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Калужская область','поселок Воротынск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ростовская область','поселок Гигант', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','поселок Двубратский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Липецкая область','поселок Добринка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Московская область','поселок Завода «Мосрентген»', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ростовская область','поселок Зимовники', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кемеровская область','поселок Малиновка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ростовская область','поселок Матвеев-Курган', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Нижегородская область','поселок Мулино', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ханты-Мансийский автономный округ','поселок Нижнесортымский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Оренбургская область','поселок Новоорск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Оренбургская область','поселок Новосергиевка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ростовская область','поселок Орловский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ростовская область','поселок Персиановский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Оренбургская область','поселок Саракташ', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тамбовская область','поселок Строитель', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Свердловская область','поселок Троицкий', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Приморский край','поселок Трудовое', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Оренбургская область','поселок Тюльган', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Челябинская область','поселок Увельский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Иркутская область','поселок Усть-Ордынский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Калужская область','поселок Ферзиково', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ростовская область','поселок Целина', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ростовская область','поселок Чертково', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Чечня','село Автуры', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Саратовская область','село Александров Гай', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ставропольский край','село Александровское', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Чечня','село Аллерой', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Алтайский край','село Алтайское', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Чечня','село Алхан-Кала', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Челябинская область','село Аргаяш', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ставропольский край','село Арзгир', CURRENT_TIMESTAMP FROM TMP;
end
^
SET TERM ; ^</script>
		<script>EXECUTE PROCEDURE DO_UP;</script>
		<script>SET TERM ^ ;
CREATE OR ALTER PROCEDURE DO_UP 
as
begin
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Дагестан','село Ахты', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Чечня','село Ачхой-Мартан', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Дагестан','село Бабаюрт', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Чечня','село Бачи-Юрт', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','село Белая Глина', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Пензенская область','село Бессоновка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Красноярский край','село Богучаны', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Самарская область','село Большая Глушица', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Тюменская область','село Боровский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Дагестан','село Ботлих', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Челябинская область','село Варна', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Алтайский край','село Волчиха', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Коми','село Выльгорт', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Чечня','село Гелдаган', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Чечня','село Гойты', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ставропольский край','село Дивное', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ставропольский край','село Донское', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кабардино-Балкария','село Дыгулыбгей', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Амурская область','село Екатеринославка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кабардино-Балкария','село Заюково', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Башкортостан','село Иглино', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Оренбургская область','село Илек', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кабардино-Балкария','село Исламей', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Приморский край','село Камень-Рыболов', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Башкортостан','село Кандры', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','?нгушетия','село Кантышево', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Дагестан','село Карабудахкент', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Дагестан','село Касумкент', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Дагестан','село Каякент', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кабардино-Балкария','село Кенже', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Самарская область','село Кинель-Черкассы', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ставропольский край','село Кочубеевское', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ставропольский край','село Красногвардейское', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ставропольский край','село Краснокумское', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Башкортостан','село Красноусольский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Астраханская область','село Красный Яр', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ростовская область','село Кулешовка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Алтайский край','село Кулунда', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ставропольский край','село Курсавка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Чечня','село Курчалой', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Башкортостан','село Кушнаренково', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ставропольский край','село Левокумское', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Омская область','село Лузино', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Алтай','село Майма', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Чечня','село Майртуп', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Чечня','село Мескер-Юрт', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Алтайский край','село Михайловское', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Северная Осетия','село Михайловское', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кабардино-Балкария','село Нартан', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Дагестан','село Нижнее Казанище', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Воронежская область','село Новая Усмань', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Северная Осетия','село Ногир', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Северная Осетия','село Октябрьское', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Алтайский край','село Павловск', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ростовская область','село Песчанокопское', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Приморский край','село Покровка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ростовская область','село Покровское', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Алтайский край','село Поспелиха', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Нижегородская область','село Починки', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ставропольский край','село Прасковея', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Башкортостан','село Раевский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ингушетия','село Сагопши', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ростовская область','село Самарское', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Чечня','село Самашки', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Башкортостан','село Серафимовский', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ставропольский край','село Солдато-Александровское', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Чечня','село Старые Атаги', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Дагестан','село Султан-Янги-Юрт', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Северная Осетия','село Сунжа', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ингушетия','село Сурхахи', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Башкортостан','село Толбазы', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Оренбургская область','село Тоцкое Второе', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Алтайский край','село Троицкое', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Калмыкия','село Троицкое', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','село Успенское', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Карачаево-Черкесия','село Учкекен', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кабардино-Балкария','село Хасанья', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Приморский край','село Хороль', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Чечня','село Цоцин-Юрт', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ростовская область','село Чалтырь', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кабардино-Балкария','село Чегем Второй', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Башкортостан','село Чекмагуш', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Приморский край','село Черниговка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Приморский край','село Чугуевка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Кабардино-Балкария','село Шалушка', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Алтайский край','село Шипуново', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ингушетия','село Экажево', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Северная Осетия','село Эльхотово', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ингушетия','село Яндаре', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ставропольский край','станица Александрийская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','станица Анапская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','станица Анастасиевская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Чечня','станица Ассиновская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ростовская область','станица Багаевская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','станица Брюховецкая', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','станица Варениковская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','станица Васюринская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','станица Выселки', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Адыгея','станица Гиагинская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','станица Динская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ростовская область','станица Егорлыкская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','станица Елизаветинская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ставропольский край','станица Ессентукская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Карачаево-Черкесия','станица Зеленчукская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','станица Кавказская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','станица Казанская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','станица Калининская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','станица Каневская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ростовская область','станица Кривянская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','станица Крыловская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ставропольский край','станица Курская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','станица Кущёвская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','станица Ладожская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','станица Ленинградская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ставропольский край','станица Лысогорская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','станица Марьянская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','станица Медведовская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ставропольский край','станица Незлобная', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ингушетия','станица Нестеровская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','станица Новоминская', CURRENT_TIMESTAMP FROM TMP;
end
^
SET TERM ; ^</script>
		<script>EXECUTE PROCEDURE DO_UP;</script>
		<script>SET TERM ^ ;
CREATE OR ALTER PROCEDURE DO_UP 
as
begin
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','станица Новопокровская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','станица Новотитаровская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','станица Октябрьская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ингушетия','станица Орджоникидзевская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','станица Отрадная', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','станица Павловская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','станица Петровская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','станица Платнировская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','станица Полтавская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','станица Северская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','станица Советская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','станица Старовеличковская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','станица Стародеревянковская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','станица Старокорсунская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','станица Староминская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','станица Старомышастовская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','станица Старонижестеблиевская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','станица Старотитаровская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','станица Старощербиновская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ставропольский край','станица Суворовская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ростовская область','станица Тацинская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','станица Тбилисская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Ингушетия','станица Троицкая', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Адыгея','станица Ханская', CURRENT_TIMESTAMP FROM TMP;
INSERT INTO TOWNS SELECT GEN_ID(TOWNS, 1), 'RUS','Краснодарский край','станица Холмская', CURRENT_TIMESTAMP FROM TMP;
end
^
SET TERM ; ^</script>
		<script>EXECUTE PROCEDURE DO_UP;</script>


		<script>SET TERM ^ ;
CREATE OR ALTER PROCEDURE ADD_TEAM (
    name char(50),
    fixrecord integer = 99)
returns (
    id double precision,
    ts timestamp)
as
begin
 ID = GEN_ID(TEAMS, 1);
 TS = CURRENT_TIMESTAMP;

 INSERT INTO TEAM (ID_TEAM, NAME, EDITTIME, FIXRECORD)
 VALUES (:ID, :NAME, :TS, :FIXRECORD);

 POST_EVENT 'TEAM_ADD';
 POST_EVENT 'ADD';
end
^
SET TERM ; ^</script>


		<script>SET TERM ^ ;
CREATE OR ALTER PROCEDURE EDIT_TEAM (
    id double precision,
    name char(50),
    fixrecord integer = 99)
returns (
    ts timestamp)
as
begin
 TS = CURRENT_TIMESTAMP;

 UPDATE TEAM
 SET NAME = :NAME
   , FIXRECORD = :FIXRECORD
   , EDITTIME = :TS
 WHERE
   ID_TEAM = :ID;

 POST_EVENT 'TEAM_EDIT';
 POST_EVENT 'EDIT';
end
^
SET TERM ; ^</script>


		<script>SET TERM ^ ;
CREATE OR ALTER PROCEDURE DO_UP 
as
begin
update lifter l set l.town = (select FIRST 1 case when name not like region then name||'/'||region else name end from towns where UPPER(cast (trim(name) as varchar(50) character set win1251 )) like UPPER(cast (trim(l.town) as varchar(50) character set win1251 )))
where l.id_lifter in (
select id from (
select l.id_lifter as id, (select FIRST 1 case when name not like region then name||'/'||region else name end from towns where UPPER(cast (trim(name) as varchar(50) character set win1251 )) like UPPER(cast (trim(l.town) as varchar(50) character set win1251 ))) as t1 from lifter l
) tbl  where tbl.t1 is not null);
end
^
SET TERM ; ^</script>
		<script>EXECUTE PROCEDURE DO_UP;</script>

	</version>

	<version number="0.10">
		<script>SET TERM ^ ;
CREATE OR ALTER PROCEDURE DO_UP 
as
begin
  delete from lifter2razr;
end
^
SET TERM ; ^</script>
		<script>EXECUTE PROCEDURE DO_UP;</script>
	</version>
	<version number="0.11">
		<script>ALTER TABLE LIFTER2RAZR ADD CONSTRAINT FK_LIFTER2RAZR_NORMAT FOREIGN KEY (ID_NORMAT) REFERENCES NORMAT(ID_NORMAT);</script>
	</version>


	<version number="0.12">
		<script>ALTER TABLE LIFTER2RAZR ADD LOC_ID NUMERIC(12);</script>
		<script>ALTER TABLE LIFTER2RAZR ALTER ID_NORMAT position 3;</script>
		<script>SET TERM ^ ;
CREATE OR ALTER procedure APPLY_NEWRAZR (
    IDC numeric(12,0),
    MAXRAZR numeric(12,0))
returns (
    RESULT integer)
as
declare variable NRAZR numeric(12,0);
declare variable LOC numeric(12,0);
declare variable ORAZR numeric(12,0);
declare variable IDL numeric(12,0);
declare variable NORMAT numeric(12,0);
declare variable N varchar(6);
declare variable O varchar(6);
begin
  for
    select lifter
      , orazr
      , nrazr
      , loc
      , normat
    from
      GET_COMPETNEWRAZR(:IDC) into :idl, :Orazr,: Nrazr, :loc, :NORMAT
    DO
    begin

      select trim(name) from razr where id_razr = :nrazr into :N;
      select trim(name) from razr where id_razr = :orazr into :O;

      if (:nrazr &gt; :orazr) then
        N = '+'||trim(:N);

      update LIFTER_ON_COMPETITION 
      set NEWRAZR = cast(:N as char(6))
        , WASRAZR = cast(:O as char(6))
      where id_lifter_compet = :loc;

      if (Nrazr &gt;= maxrazr) then
        Nrazr = maxrazr;
      
      orazr = -1;
      select id from lifter2razr where id_lifter = :idl and id_normat = :normat into orazr;
      if (coalesce(orazr, -1) &lt; 1) then
        Insert into lifter2razr (id, id_lifter, id_normat, loc_id) values (GEN_ID(GEN_LIFTER2RAZR_ID, 1), :idl, :normat, :loc);

      idl     = null;
      Orazr   = null;
      Nrazr   = null;
      loc     = null;
      NORMAT  = null;
      N       = null;
      O       = null;
    end

  idl    = null;
  Orazr  = null;
  Nrazr   = null;
  loc     = null;
  NORMAT  = null;
  N = null;
  O = null;
  result = 1;
  suspend;
end
^
SET TERM ; ^</script>


		<script>SET TERM ^ ;
CREATE OR ALTER procedure GET_COMPETNEWRAZR (
    IDC numeric(12,0))
returns (
    LIFTER numeric(12,0),
    LNAME char(60),
    ORAZR numeric(12,0),
    NRAZR numeric(12,0),
    LOC numeric(12,0),
    TOTALL float,
    WCATEG numeric(12,0),
    NORMAT numeric(12,0))
as
begin
for
select
  l.id_lifter,
  l.name,
 COALESCE((
     select
      max(n2.id_razr)
     from
       lifter2razr lr1 join
       normat n2 on n2.id_normat = lr1.id_normat
     where
       lr1.id_lifter = l.id_lifter and
       n2.id_range = c.id_range and
       n2.sex = l.sex
     rows 1 to 1
  ), 0) as old_razr,

  (select max (id_razr) from normat n1 where
   n1.id_category=lc.id_category and n1.sex=l.sex and sum_tot &lt;= le.summaall and id_range=c.id_range) as new_razr,
  (select first 1 id_normat from normat n1 where
   n1.id_category=lc.id_category and n1.sex=l.sex and sum_tot &lt;= le.summaall and id_range=c.id_range order by id_razr desc ) as new_normat,
  lc.ID_LIFTER_COMPET,
  le.summaall,
  lc.id_category
from
  Lifter_Exersis le,
  Lifter_on_competition lc,
  Lifter L,
  Competit C
where
  lc.id_compet=c.id_compet and
  l.id_lifter=lc.id_lifter and
  le.ID_LIFTER_COMPET=lc.ID_LIFTER_COMPET and
  lc.id_compet= :IDC and
  COALESCE((
     select
      max(n2.id_razr)
     from
       lifter2razr lr1 join
       normat n2 on n2.id_normat = lr1.id_normat
     where
       lr1.id_lifter = l.id_lifter and
       n2.id_range = c.id_range and
       n2.sex = l.sex
     rows 1 to 1
  ), -1)
  &lt;=
  (
     select
       max (id_razr)
     from
       normat n1
     where
       n1.id_category=lc.id_category and
       n1.sex=l.sex and
       sum_tot&lt;=le.summaall and
       id_range=c.id_range
     rows 1 to 1
  )
  and le.summaall&gt;0
order by
  l.sex, l.name
into
  :lifter,
  :lname,
  :orazr,
  :nrazr,
  :normat,
  :loc,
  :totall,
  :wcateg
  DO suspend;
end
^
SET TERM ; ^</script>

	</version>

	<version number="0.13">
		<script>
CREATE TABLE LIFTEREXRANGE (
    LIFTER_ID  ID /* ID = NUMERIC(12,0) */,
    RANGE_ID   ID /* ID = NUMERIC(12,0) */,
    EDITTIME   TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
		</script>
		<script>
ALTER TABLE LIFTEREXRANGE ADD CONSTRAINT FK_LIFTEREXRANGE_1 FOREIGN KEY (LIFTER_ID) REFERENCES LIFTER (ID_LIFTER) ON DELETE CASCADE;
ALTER TABLE LIFTEREXRANGE ADD CONSTRAINT FK_LIFTEREXRANGE_2 FOREIGN KEY (RANGE_ID) REFERENCES RANGE (ID_RANGE) ON DELETE CASCADE;
CREATE EXCEPTION CANT_PARTICIPATE 'Спортсмену запрещено участвовать в этом виде соревнований';
		</script>
	</version>

	<version number="0.14">
		<script>SET TERM ^ ;
create or alter procedure ADD_LIFTER_EXCL (
    LIFTER_ID numeric(12),
    RANGE_ID numeric(12))
as
begin
  INSERT INTO LIFTEREXRANGE (lifter_id, range_id) values (:lifter_id, :range_id);
end
^
SET TERM ; ^</script>

		<script>SET TERM ^ ;
CREATE OR ALTER procedure CHECK_LIFTER_EXCL (
    LOC numeric(12),
    LIFTER_ID numeric(12),
    RANGE_ID numeric(12))
returns (
    RESULT smallint)
as
begin

  if (loc is not null) then
    select loc.id_lifter, c.id_range
    from lifter_on_competition loc inner join
      competit c on loc.id_compet = c.id_compet
    where loc.id_lifter_compet = :loc
    into :LIFTER_ID, :RANGE_ID;

  select count(*)
  from lifterexrange
  where lifter_id = :LIFTER_ID and range_id = :RANGE_ID
  into :RESULT;

  if ((lifter_id is null) or (range_id is null)) then
    RESULT = 1;

  SUSPEND;
end
^
SET TERM ; ^</script>

		<script>SET TERM ^ ;
CREATE OR ALTER procedure ADD_LOC (
    LID numeric(12),           IDAC numeric(12),
    IDC numeric(12),           SELFWEGHT numeric(12),
    IDT numeric(12),           ZR integer,
    INZ smallint,              STATE double precision,
    SQUAT double precision,    BENCH double precision,
    DL double precision)
returns (
    LOC  numeric(12),
    COEF double precision,
    TS timestamp)
as
declare variable IDCATEGORY numeric(12); declare variable IDWILKS    numeric(12);
declare variable RES double precision;   declare variable SEX smallint;
declare variable ASEX smallint;          declare variable ACLUB varchar(50);
declare variable ATRENER varchar(50);    declare variable range integer;
BEGIN
  /* Поиск необходимых данных */
  LOC = GEN_ID(LOC, 1);
  res = null;
  asex = 2;
  TS = CURRENT_TIMESTAMP;
  res = :Lid;
  
  select sex, club, trener
  from lifter
  where id_lifter = :LID
  into :sex, :aclub, :atrener;

  if (sex = 1) then
    asex = 3;

  select min(id_category)
  from weigth_category
  where we &gt;= :SELFWEGHT
    and (sex = :aSex or sex = 1)
  into :idcategory;

  select id_wilks, coef
  from  wilks
  where self_weight &gt;= :SELFWEGHT
    and sex = :sex
  order by self_weight
  rows 1
  into :idwilks, :coef;

  select id_range from competit c where id_compet = :idc into :range;

  insert into lifter_on_competition
    (
      ID_LIFTER_COMPET,  id_category,
      id_lifter,         id_compet,
      id_wilks,          id_stream,
      club,              trener,
      id_team,           zr,
      InZach,            id_agecl,
      EDITTIME)
  values
    (
      :loc,             :idcategory,
      :lid  ,           :idc,
      :idwilks,         :STATE,
      :aclub,           :atrener,
      :IDT,             :ZR,
      :INZ,             :IDAC,
      :TS
    );

  if (state = -1) then
    if (coalesce(:bench, 0) = 0) then
    begin
       bench = :selfweght;
       if (:range = 4) then
         bench = :bench /2;
       bench = ceiling(:bench/2.5)*2.5;
    end
  
  insert into lifter_exersis
    (
      ID_LIFTER_COMPET,      squat1,
      bench1,                dl1,
      STOY,                  EDITTIME
    )
  values 
    (
      :LOC,      :SQUAT, 
      :BENCH,    :DL, 
      '0',       :TS
    );

  select result from check_lifter_excl(:LOC, NULL, NULL) into :res;
  if (res = 1) then
    exception cant_participate;

    
  idcategory = NULL;
  idwilks = NULL;
  res = NULL;
  sex = NULL;
  asex = NULL;
  ACLUB = NULL;
  ATRENER = NULL;

  POST_EVENT 'LOC_ADD';
END
^
SET TERM ; ^</script>

		<script>SET TERM ^ ;
CREATE OR ALTER procedure EDIT_LOC (
    LID numeric(12),         IDAC numeric(12),
    IDC numeric(12),         SELFWEGHT double precision,
    IDT numeric(12),         INZ smallint,
    STATE double precision,  SQUAT double precision,
    BENCH double precision,  DL double precision,
    LOC numeric(12))
returns (
    COEF double precision,   TS timestamp)
as
declare variable IDCATEGORY numeric(12); declare variable IDWILKS numeric(12);
declare variable RES double precision;   declare variable SEX smallint;
declare variable ASEX smallint;          declare variable ACLUB varchar(50);
declare variable ATRENER varchar(50);    declare variable range integer;
BEGIN
  select result from check_lifter_excl(:LOC, NULL, NULL) into :res;
  if (res = 1) then
    exception cant_participate;

  /* Поиск необходимых данных */
  res = null;
  asex = 2;
  TS = CURRENT_TIMESTAMP;
  res = :Lid;

  select sex, club, trener
  from lifter
  where id_lifter = :lid
  into :sex, :aclub, :atrener;

  if (sex = 1) then
    asex = 3;

  select min(id_category)
  from weigth_category
  where we &gt;= :SELFWEGHT
    and (sex = :aSex or sex = 1)
  into :idcategory;

  select id_wilks, coef
  from wilks
  where self_weight &gt;= :SELFWEGHT
    and sex = :sex
  order by self_weight
  rows 1
  into :idwilks, :coef;

  select id_range from competit c where id_compet = :idc into :range;

  update lifter_on_competition set
    id_category = :idcategory,    id_compet = :idc,
    id_wilks = :idwilks,          id_stream = :STATE,
    club = :aclub,                trener = :atrener,
    id_team = :idt,               InZach = :inz,
    id_agecl = :idac,             EDITTIME = :ts
  where
    ID_LIFTER_COMPET = :LOC;

  if (coalesce(:bench, 0) = 0) then
  begin
    bench = :selfweght;
    if (:range = 4) then
      bench = :bench /2;
    bench = ceiling(:bench/2.5)*2.5;
  end

  update lifter_exersis set
    squat1 = :SQUAT,    bench1 = :BENCH,
    dl1 = :DL,    EDITTIME = :ts
  where
    ID_LIFTER_COMPET = :LOC;

  idcategory = NULL;
  idwilks = NULL;
  res = NULL;
  sex = NULL;
  asex = NULL;
  ACLUB = NULL;
  ATRENER = NULL;

  POST_EVENT 'LOC_EDIT';
END
^
SET TERM ; ^</script>

		<script>SET TERM ^ ;
CREATE OR ALTER PROCEDURE DO_UP 
as
begin
  delete from lifterexrange;
  insert into lifterexrange
    select id_lifter, id_range, current_timestamp from range r, lifter l where l.id_lifter &lt; 0   order by   id_lifter, id_range;
end
^
SET TERM ; ^</script>
		<script>EXECUTE PROCEDURE DO_UP;</script>

		<script>SET TERM ^ ;
CREATE OR ALTER PROCEDURE ADD_TEAM (
    name char(50),
    fixrecord integer = 99)
returns (
    id double precision,
    ts timestamp)
as
begin
 ID = GEN_ID(TEAMS, 1);
 TS = CURRENT_TIMESTAMP;

 INSERT INTO TEAM (ID_TEAM, NAME, EDITTIME, FIXRECORD)
 VALUES (:ID, :NAME, :TS, :FIXRECORD);

 POST_EVENT 'TEAM_ADD';
end
^
SET TERM ; ^</script>


		<script>SET TERM ^ ;
CREATE OR ALTER PROCEDURE EDIT_TEAM (
    id double precision,
    name char(50),
    fixrecord integer = 99)
returns (
    ts timestamp)
as
begin
 TS = CURRENT_TIMESTAMP;

 UPDATE TEAM
 SET NAME = :NAME
   , FIXRECORD = :FIXRECORD
   , EDITTIME = :TS
 WHERE
   ID_TEAM = :ID;

 POST_EVENT 'TEAM_EDIT';
end
^
SET TERM ; ^</script>

	
	</version>

	<version number="0.15">
		<script>SET TERM ^ ;
CREATE OR ALTER procedure GET_STREAM_DESCR (
    IDC numeric(12,0),
    IDS numeric(12,0))
returns (
    DESCR varchar(512))
as
declare variable SEX integer;
declare variable AGENAME varchar(150);
declare variable WCNAME varchar(150);
declare variable ASEX integer;
declare variable AAGENAME varchar(150);
begin
 descr = '';
 aSex = -1;
 aAgeName = '';


 for select tbl.sex, tbl.name as ageName, wc.name as wcName
    from (
        select l.sex, ac.name, wc.we
        from lifter_on_competition loc
          inner join lifter l on l.id_lifter = loc.id_lifter
          inner join age_class ac on ac.id_agecl = loc.id_agecl
          inner join weigth_category  wc on wc.id_category = loc.id_category
        where id_compet = :idc and id_stream = :ids
        group by l.sex, ac.name, wc.we
    ) tbl
    inner join weigth_category  wc on wc.we = tbl.we
     order by tbl.sex, tbl.name, wc.we
    into :sex, :agename, :wcname
  do begin
    if (sex &lt;&gt; asex) then
    begin
      if (asex &gt; -1) then
        descr = :descr ||'|';
      if (sex = 1) then
        descr = :descr || 'Мужчины: ';
      if (sex = 0) then
        descr = :descr || 'Женщины: ';
      asex = :sex;
    end

    if (ageName &lt;&gt; aAgeName) then
    begin
      if (substring(:descr from CHAR_LENGTH(:descr)-1) = ',') then
        descr = substring(:descr from 1 for CHAR_LENGTH(:descr)-2)||'; ';

      descr = :descr || Trim(:ageName)||': ';
      aagename = :agename;
    end

    descr = :descr ||Trim(:wcname)||', ';
  end

  if (substring(:descr from CHAR_LENGTH(:descr)-1) = ',') then
    descr = substring(:descr from 1 for CHAR_LENGTH(:descr)-2);

 descr = trim(:descr);
 suspend;
 aSex     = null;
 aAgeName = null;
 sex      = null;
 ageName  = null;
 wcName   = null;
end
^
SET TERM ; ^</script>
	</version>


	<version number="0.16">
		<script>SET TERM ^ ;
CREATE OR ALTER PROCEDURE DO_UP 
as
begin
UPDATE AGE_CLASS SET 
    NAME = 'Юноши 13 - 19',
    FROM_AGE = 1,
    TO_AGE = 19,
    ENGNAME = 'Teen 13-19'
WHERE (ID_AGECL = 13);

UPDATE AGE_CLASS SET 
    NAME = 'Юниоры 20 - 23',
    FROM_AGE = 20,
    TO_AGE = 23,
    ENGNAME = 'Juniors'
WHERE (ID_AGECL = 20);

UPDATE AGE_CLASS SET 
    NAME = 'Открытая',
    FROM_AGE = 24,
    TO_AGE = 39,
    ENGNAME = 'Open'
WHERE (ID_AGECL = -2);

UPDATE AGE_CLASS SET 
    NAME = 'Мастера 40 - 49',
    FROM_AGE = 40,
    TO_AGE = 49,
    ENGNAME = 'Masters 40-49'
WHERE (ID_AGECL = 40);

UPDATE AGE_CLASS SET 
    NAME = 'Саб. мастера 33 - 39',
    FROM_AGE = 33,
    TO_AGE = 39,
    ENGNAME = 'Sub Masters 33-39'
WHERE (ID_AGECL = -4);

UPDATE AGE_CLASS SET 
    NAME = 'Мастера 50 - 59',
    FROM_AGE = 50,
    TO_AGE = 59,
    ENGNAME = 'Masters 50-59'
WHERE (ID_AGECL = 50);

UPDATE AGE_CLASS SET 
    NAME = 'Мастера 60+',
    FROM_AGE = 60,
    TO_AGE = 999,
    ENGNAME = 'Masters 60+'
WHERE (ID_AGECL = 60);
end
^
SET TERM ; ^</script>
		<script>EXECUTE PROCEDURE DO_UP;</script>
	</version>
	
	<version number="0.17">
		<script>SET TERM ^ ;
CREATE OR ALTER procedure ADD_LOC (
    LID numeric(12),           IDAC numeric(12),
    IDC numeric(12),           SELFWEGHT double precision,
    IDT numeric(12),           ZR integer,
    INZ smallint,              STATE double precision,
    SQUAT double precision,    BENCH double precision,
    DL double precision )
returns (
    LOC  numeric(12),		    COEF double precision,
    TS timestamp )
as
	declare variable IDCATEGORY numeric(12); declare variable IDWILKS    numeric(12);
	declare variable RES double precision;   declare variable SEX smallint;
	declare variable ASEX smallint;          declare variable ACLUB varchar(50);
	declare variable ATRENER varchar(50);    declare variable range integer;
BEGIN
  /* Поиск необходимых данных */
  LOC = GEN_ID(LOC, 1);
  res = null;
  asex = 2;
  TS = CURRENT_TIMESTAMP;
  res = :Lid;
  
  select sex, club, trener
  from lifter
  where id_lifter = :LID
  into :sex, :aclub, :atrener;

  if (sex = 1) then asex = 3;

  select min(id_category)
  from weigth_category
  where we &gt;= :SELFWEGHT
    and (sex = :aSex or sex = 1)
  into :idcategory;

  select id_wilks, coef
  from  wilks
  where self_weight &gt;= :SELFWEGHT
    and sex = :sex
  order by self_weight
  rows 1
  into :idwilks, :coef;

  select id_range from competit c where id_compet = :idc into :range;

  insert into lifter_on_competition
    (
      ID_LIFTER_COMPET,  id_category,
      id_lifter,         id_compet,
      id_wilks,          id_stream,
      club,              trener,
      id_team,           zr,
      InZach,            id_agecl,
      EDITTIME)
  values
    (
      :loc,             :idcategory,
      :lid  ,           :idc,
      :idwilks,         :STATE,
      :aclub,           :atrener,
      :IDT,             :ZR,
      :INZ,             :IDAC,
      :TS
    );

  if (state = -1) then
    if (coalesce(:bench, 0) = 0) then
    begin
       bench = :selfweght;
       if (:range = 4) then
         bench = :bench /2;
       bench = ceiling(:bench/2.5)*2.5;
    end
  
  insert into lifter_exersis
    (
      ID_LIFTER_COMPET,      squat1,
      bench1,                dl1,
      STOY,                  EDITTIME
    )
  values 
    (
      :LOC,      :SQUAT, 
      :BENCH,    :DL, 
      '0',       :TS
    );

  select result from check_lifter_excl(:LOC, NULL, NULL) into :res;
  if (res = 1) then
    exception cant_participate;
    
  idcategory = NULL;
  idwilks = NULL;
  res = NULL;
  sex = NULL;
  asex = NULL;
  ACLUB = NULL;
  ATRENER = NULL;

  POST_EVENT 'LOC_ADD';
END
^
SET TERM ; ^</script>

	<script>SET TERM ^ ;
CREATE OR ALTER procedure SELECT_RECORDS (
    LOC numeric(12,0),
    EXERSCISE integer)
returns (
    ID_LIFTER numeric(12,0),
    ID_AGECL numeric(12,0),
    WEGHT double precision,
    SOREVN_NAME varchar(200) character set WIN1251,
    "LEVEL" integer)
as
declare variable TODAY date;
declare variable ID_CATEGORY numeric(12,0);
declare variable ID_COMPET numeric(12,0);
declare variable ID_RANGE numeric(12,0);
declare variable LIFTER_SEX integer;
declare variable LIFTER_DATEBITH date;
declare variable LEVLOW bigint;
declare variable LEVHIGH bigint;
declare variable FIX integer;
declare variable LVL numeric(12,0);
BEGIN
    TODAY = CAST('NOW' AS DATE);

  SELECT
    LOC.ID_COMPET,
    LOC.ID_CATEGORY,
    C.ID_RANGE,
    L.SEX,
    c."LEVEL",
    T.FIXRECORD
  FROM
    LIFTER_ON_COMPETITION LOC JOIN
    COMPETIT C ON C.ID_COMPET= LOC.ID_COMPET JOIN
    LIFTER L ON LOC.ID_LIFTER= L.ID_LIFTER JOIN
    TEAM T on T.ID_TEAM = LOC.ID_TEAM
  WHERE
    LOC.ID_LIFTER_COMPET = :LOC
  INTO
    :ID_COMPET,
    :ID_CATEGORY,
    :ID_RANGE,
    :LIFTER_SEX,
    :LevHigh,
    :LEVLOW;

FOR SELECT "LEVEL" as lvl FROM PLEVEL where  "LEVEL" between :LEVLOW and :LEVHIGH order by 1 desc INTO :LVL do
    begin
    for SELECT
    r.ID_LIFTER,
    r.ID_AGECL,
    WEGHT,
    SOREVN_NAME,
    "LEVEL"
  FROM
    (
    select ID_RECORD, id_lifter, ID_CATEGORY, ID_RANGE, id_agecl,"LEVEL" ,ID_EXER, WEGHT, SOREVN_NAME  from RECORDS
    union all
    select ID_RECORD, id_lifter, ID_CATEGORY, ID_RANGE, id_agecl,"LEVEL" ,ID_EXER, WEGHT, SOREVN_NAME  from pRecord(:EXERSCISE, :ID_CATEGORY, :ID_RANGE)
    )
    R JOIN
    LIFTER L ON L.ID_LIFTER = R.ID_LIFTER JOIN
    AGE_CLASS AC ON ac.id_agecl=r.id_agecl
  WHERE
    ID_CATEGORY = :ID_CATEGORY AND
    ID_RANGE = :ID_RANGE AND
    ID_EXER = :EXERSCISE AND
    L.SEX = :LIFTER_SEX AND
    R."LEVEL" = :lvl AND
    r.ID_AGECL IN
      (
          SELECT ID_AGECL
          FROM
            AGE_CLASS
          WHERE
            (
             SELECT
                (:TODAY - L.DAT_BITH) / 365
              FROM
                LIFTER_ON_COMPETITION LOC INNER JOIN
                LIFTER L on loc.id_lifter = l.id_lifter
              WHERE
                LOC.ID_LIFTER_COMPET = :LOC
            ) &gt;= cast(FROM_AGE as int)  and
            (
             SELECT
                (:TODAY - L.DAT_BITH) / 365
              FROM
                LIFTER_ON_COMPETITION LOC INNER JOIN
                LIFTER L on loc.id_lifter = l.id_lifter
              WHERE
                LOC.ID_LIFTER_COMPET = :LOC
            ) &lt;= cast(TO_AGE as int)
          OR ID_AGECL = -2
      ) AND
    R.ID_RECORD in (SELECT ID_RECORD FROM MAX_RECORDS(:id_range, :id_category, :lifter_sex, :exerscise))
  ORDER BY
     ac.from_age, "LEVEL"
  INTO
    :ID_LIFTER,
    :ID_AGECL,
    :WEGHT,
    :SOREVN_NAME,
    :"LEVEL"
   do SUSPEND;
  end

  TODAY = NULL;
  ID_CATEGORY = NULL;
  ID_COMPET = NULL;
  ID_RANGE = NULL;
  LIFTER_SEX = NULL;
  LIFTER_DATEBITH = NULL;
  LEVLOW = NULL;
  LEVHIGH = NULL;
  FIX = NULL;
  LVL = NULL;
END^
SET TERM ; ^</script>
	</version>

	<version number="0.18">
		<script>SET TERM ^ ;
CREATE OR ALTER procedure COMPETSTAT (
    IDC numeric(12,0))
returns (
    NAME varchar(150),
    "VALUE" varchar(250))
as
begin
  NAME = 'Кол-во спортсменов общее';
  SELECT COUNT(ID_LIFTER_COMPET)
  FROM LIFTER_ON_COMPETITION
  WHERE ID_COMPET = :"IDC"
  INTO :"VALUE";
  suspend;

  NAME = 'Кол-во спортсменов уник.';
  SELECT COUNT(distinct ID_LIFTER)
  FROM LIFTER_ON_COMPETITION
  WHERE ID_COMPET = :IDC
  INTO :"VALUE";
  suspend;

  NAME = 'Кол-во команд участниц';
  SELECT COUNT(distinct ID_TEAM)
  FROM LIFTER_ON_COMPETITION
  WHERE ID_COMPET = :IDC
  INTO :"VALUE";
  suspend;

  NAME = 'Кол-во городов спортсменов';
  select count(distinct(l.town))
  from lifter_on_competition loc join
    Lifter L on l.id_lifter = loc.id_lifter
  where loc.id_compet = :IDC
  into :"VALUE";
  suspend;
  
  NAME = 'Кол-во рекордов национальных';
  select NUM from RECORDSINCOMPET(:IDC, 1) into :"VALUE";
  suspend;

  NAME = 'Кол-во рекордов европейских';
  select NUM from RECORDSINCOMPET(:IDC, 2) into :"VALUE";
  suspend;

  NAME = 'Кол-во рекордов мировых';
  select NUM from RECORDSINCOMPET(:IDC, 3) into :"VALUE";
  suspend;

  NAME = 'Спортсмены - самый пожилой';
  select TRIM(l.name)||'('||
    ((cast('now' as date) - l.dat_bith)/365)||
    ') '||', '||TRIM(l.town)
  from lifter_on_competition loc join
    Lifter L on l.id_lifter = loc.id_lifter
  where loc.id_compet = :IDC
  order by l.dat_bith asc
  rows 1 
  into :"VALUE";
  suspend;

  NAME = 'Спортсмены - самый молодой';
  select  TRIM(l.name)||'('||
    ((cast('now' as date) - l.dat_bith)/365)||
    ') '||', '||TRIM(l.town)
  from lifter_on_competition loc join
    Lifter L on l.id_lifter = loc.id_lifter
  where loc.id_compet = :IDC
  order by  l.dat_bith desc
  rows 1 
  into :"VALUE";
  suspend;

end

^SET TERM ; ^</script>
	</version>
	



	<version number="0.19">
		<script>SET TERM ^ ;
create or alter procedure COPY_LIFTER_COMPET (
    loc numeric(12),
    idc numeric(12),
    ids numeric(12),
    idac numeric(12),
    move integer)
returns (
    id numeric(12),
    ts timestamp
    )
AS BEGIN
  ts = current_timestamp;

  if (coalesce(move, 0) = 1) then
  begin
    id = :loc;
    update lifter_on_competition set  id_compet = :idc
	    ,id_stream = :ids
	    ,id_agecl = :idac
	where 
      id_lifter_compet = :loc;
  end else
  begin
	  merge into lifter_on_competition dest_loc
	  using (select id_category,
	          id_lifter,         id_compet,
	          id_wilks,          id_stream,
	          club,              trener,
	          id_team,           zr,
	          InZach,            id_agecl,
	          newRazr,           wasRazr,
	          edittime,          createtime
	    from lifter_on_competition
	    where id_lifter_compet = :loc) as source_loc
	  on dest_loc.id_compet = :idc
	    and dest_loc.id_stream = :ids
	    and dest_loc.id_agecl = :idac
	    and dest_loc.id_lifter = source_loc.id_lifter
	    and dest_loc.id_category = source_loc.id_category
	  when matched then update set
	        id_stream = :ids,                   id_category = source_loc.id_category,
	        id_wilks = source_loc.id_wilks,     id_team = source_loc.id_team,
	        trener = source_loc.trener,         zr = source_loc.zr,
	        newRazr = source_loc.newRazr,       wasRazr = source_loc.wasRazr,
	        inZach = source_loc.inZach,         club = source_loc.club,
	        createtime = source_loc.createtime, edittime = :ts
	  when not matched then insert
	        ( id_lifter_compet,  id_category,
	          id_lifter,         id_compet,
	          id_wilks,          id_stream,
	          club,              trener,
	          id_team,           zr,
	          inzach,            id_agecl,
	          edittime,          createtime)
	      values
	        ( gen_id(loc, 1),               source_loc.id_category,
	          source_loc.id_lifter,         :idc,
	          source_loc.id_wilks,          :ids,
	          source_loc.club,              source_loc.trener,
	          source_loc.id_team,           source_loc.zr,
	          source_loc.inzach,            :idac,
	          :ts,                          :ts);

	  select loc2.id_lifter_compet
	  from lifter_on_competition loc1, lifter_on_competition loc2
	  where loc1.id_lifter_compet = :loc
	    and loc1.id_lifter=loc2.id_lifter
	    and loc2.id_compet = :idc
	    and loc2.id_stream = :ids
	    and loc2.id_agecl = :idac
	    and loc1.id_category=loc2.id_category
	  rows 1
	  into :id;

	  merge into lifter_exersis dest_le
	  using (select id_lifter_compet,
	        SQUAT1,    OC1,
	        SQUAT2,    OC2,
	        SQUAT3,    OC3,
	        SQUAT4,    OC10,
	        BENCH1,    OC4,
	        BENCH2,    OC5,
	        BENCH3,    OC6,
	        BENCH4,    OC11,
	        DL1,       OC7,
	        DL2,       OC8,
	        DL3,       OC9,
	        DL4,       OC12,
	        SUMMAALL,  PLACE,
	        POINTS,    STOY,
	        EDITTIME
	      from lifter_exersis
	    where id_lifter_compet = :loc) as source_le
	  on source_le.id_lifter_compet = :id
	  when matched then update set
	        SQUAT1 = source_le.SQUAT1,      OC1 = source_le.oc1,
	        SQUAT2 = source_le.SQUAT2,      OC2 = source_le.oc2,
	        SQUAT3 = source_le.SQUAT3,      OC3 = source_le.oc3,
	        SQUAT4 = source_le.SQUAT4,      OC10 = source_le.oc10,
	        BENCH1 = source_le.BENCH1,      OC4 = source_le.oc4,
	        BENCH2 = source_le.BENCH2,      OC5 = source_le.oc5,
	        BENCH3 = source_le.BENCH3,      OC6 = source_le.oc6,
	        BENCH4 = source_le.BENCH4,      OC11 = source_le.oc11,
	        DL1 = source_le.DL1,            OC7 = source_le.oc7,
	        DL2 = source_le.DL2,            OC8 = source_le.oc8,
	        DL3 = source_le.DL3,            OC9 = source_le.oc9,
	        DL4 = source_le.DL4,            OC12 = source_le.oc12,
	        SUMMAALL = source_le.SUMMAALL,  PLACE = source_le.place,
	        POINTS = source_le.POINTS,      STOY = source_le.stoy,
	        EDITTIME = :ts
	   when not matched then insert
	       (SQUAT1,    OC1,
	        SQUAT2,    OC2,
	        SQUAT3,    OC3,
	        SQUAT4,    OC10,
	        BENCH1,    OC4,
	        BENCH2,    OC5,
	        BENCH3,    OC6,
	        BENCH4,    OC11,
	        DL1,       OC7,
	        DL2,       OC8,
	        DL3,       OC9,
	        DL4,       OC12,
	        SUMMAALL,  PLACE,
	        POINTS,    STOY,
	        EDITTIME,  id_lifter_compet) values
	       (source_le.SQUAT1,    source_le.OC1,
	        source_le.SQUAT2,    source_le.OC2,
	        source_le.SQUAT3,    source_le.OC3,
	        source_le.SQUAT4,    source_le.OC10,
	        source_le.BENCH1,    source_le.OC4,
	        source_le.BENCH2,    source_le.OC5,
	        source_le.BENCH3,    source_le.OC6,
	        source_le.BENCH4,    source_le.OC11,
	        source_le.DL1,       source_le.OC7,
	        source_le.DL2,       source_le.OC8,
	        source_le.DL3,       source_le.OC9,
	        source_le.DL4,       source_le.OC12,
	        source_le.SUMMAALL,  source_le.PLACE,
	        source_le.POINTS,    source_le.STOY,
	        :ts,                 :id);
  end

/*
  if ((coalesce(move, 0) = 1) and (:loc &lt;&gt; :id)) then
  begin
    delete from lifter_exersis where id_lifter_compet = :loc;
    delete from lifter_on_competition where id_lifter_compet = :loc;
    insert into deleted (id, "TABLE", EDITTIME, "VALUE")
      VALUES (GEN_ID(DELETED, 1), 'LIFTER_ON_COMPETITION', :ts, :loc);

    POST_EVENT 'LOC_DELETE';
  end
*/

  POST_EVENT 'LOC_EDIT';
END
^SET TERM ; ^</script>
	</version>

	<version number="0.26">
	  <script>SET TERM ^ ; 
CREATE OR ALTER PROCEDURE DO_UP as
begin 
	update competit set grp = id_compet where id_compet in (
	select t1.id_compet
	from (select  grp, id_compet  from competit) t1 left join
	  competit c on c.id_compet =t1.grp
	where c.id_compet is null);		

	merge into stream dest using (select 'Комбинированный' as name from tmp) as src
	on upper(dest.name) like upper(src.name) when not matched then insert 
	(id_stream, name, edittime) values (gen_id(stream, 1), src.name, current_timestamp);
	
end^ 
SET TERM ; ^</script>
	<script>EXECUTE PROCEDURE DO_UP;</script>
  </version>

	<version number="0.27">
    <script>SET TERM ^ ; 
CREATE OR ALTER PROCEDURE DO_UP as
begin 
/**/ 
end^ 
SET TERM ; ^</script>

	<script optional ="1">ALTER TABLE COMPETIT DROP CONSTRAINT FK_COMPETIT_RAZR;</script>
    <script optional ="1">ALTER TABLE COMPETIT DROP CONSTRAINT FK_COMPETIT_PARENT_ID;</script>
    <script optional ="1">ALTER TABLE COMPETIT DROP MIN_RAZR_ID;</script>

	<script>ALTER TABLE COMPETIT ADD MIN_RAZR_ID ID DEFAULT 0;</script>
		<script>SET TERM ^ ;
CREATE OR ALTER PROCEDURE DO_UP 
as
begin
  update competit c set c.min_razr_id = 0  where c.min_razr_id is null;

  update RDB$FIELDS set
	RDB$CHARACTER_SET_ID = 52,
	RDB$COLLATION_ID = 0,
	RDB$FIELD_TYPE = 37
  where
	RDB$FIELD_TYPE in ( 37, 14) and  RDB$CHARACTER_LENGTH is not null;	
end
^
SET TERM ; ^</script>
		<script>EXECUTE PROCEDURE DO_UP;</script>

      <script>ALTER TABLE COMPETIT ADD CONSTRAINT FK_COMPETIT_RAZR FOREIGN KEY (MIN_RAZR_ID) REFERENCES RAZR (ID_RAZR);</script>
   	  <script>ALTER TABLE COMPETIT ADD CONSTRAINT FK_COMPETIT_PARENT_ID FOREIGN KEY (GRP) REFERENCES COMPETIT(ID_COMPET);</script>

<script>SET TERM ^ ;
CREATE OR ALTER procedure SELECT_RECORDS (
    LOC numeric(12,0),
    EXERSCISE integer)
returns (
    ID_LIFTER numeric(12,0),
    ID_AGECL numeric(12,0),
    WEGHT double precision,
    SOREVN_NAME varchar(200) character set WIN1251,
    "LEVEL" integer)
as
declare variable TODAY date;
declare variable ID_CATEGORY numeric(12,0);
declare variable ID_COMPET numeric(12,0);
declare variable ID_RANGE numeric(12,0);
declare variable LIFTER_SEX integer;
declare variable LIFTER_DATEBITH date;
declare variable LEVLOW integer;
declare variable LEVHIGH integer;
declare variable FIX integer;
declare variable LVL numeric(12,0);
BEGIN
    TODAY = CAST('NOW' AS DATE);

  SELECT
    LOC.ID_COMPET,
    LOC.ID_CATEGORY,
    C.ID_RANGE,
    L.SEX,
    c."LEVEL",
    T.FIXRECORD
  FROM
    LIFTER_ON_COMPETITION LOC JOIN
    COMPETIT C ON C.ID_COMPET= LOC.ID_COMPET JOIN
    LIFTER L ON LOC.ID_LIFTER= L.ID_LIFTER JOIN
    TEAM T on T.ID_TEAM = LOC.ID_TEAM
  WHERE
    LOC.ID_LIFTER_COMPET = :LOC
  INTO
    :ID_COMPET,
    :ID_CATEGORY,
    :ID_RANGE,
    :LIFTER_SEX,
    :LevHigh,
    :LEVLOW;

FOR SELECT "LEVEL" as lvl FROM PLEVEL where  "LEVEL" between :LEVLOW and :LEVHIGH order by 1 desc INTO :LVL do
    begin
    for SELECT
    r.ID_LIFTER,
    r.ID_AGECL,
    WEGHT,
    SOREVN_NAME,
    "LEVEL"
  FROM
    (
    select ID_RECORD, id_lifter, ID_CATEGORY, ID_RANGE, id_agecl,"LEVEL" ,ID_EXER, WEGHT, SOREVN_NAME  from RECORDS
    union all
    select ID_RECORD, id_lifter, ID_CATEGORY, ID_RANGE, id_agecl,"LEVEL" ,ID_EXER, WEGHT, SOREVN_NAME  from pRecord(:EXERSCISE, :ID_CATEGORY, :ID_RANGE)
    )
    R JOIN
    LIFTER L ON L.ID_LIFTER = R.ID_LIFTER JOIN
    AGE_CLASS AC ON ac.id_agecl=r.id_agecl
  WHERE
    ID_CATEGORY = :ID_CATEGORY AND
    ID_RANGE = :ID_RANGE AND
    ID_EXER = :EXERSCISE AND
    L.SEX = :LIFTER_SEX AND
    R."LEVEL" = :lvl AND
    r.ID_AGECL IN
      (
          SELECT ID_AGECL
          FROM
            AGE_CLASS
          WHERE
            (
             SELECT
                (:TODAY - L.DAT_BITH) / 365
              FROM
                LIFTER_ON_COMPETITION LOC INNER JOIN
                LIFTER L on loc.id_lifter = l.id_lifter
              WHERE
                LOC.ID_LIFTER_COMPET = :LOC
            ) &gt;= cast(FROM_AGE as int)  and
            (
             SELECT
                (:TODAY - L.DAT_BITH) / 365
              FROM
                LIFTER_ON_COMPETITION LOC INNER JOIN
                LIFTER L on loc.id_lifter = l.id_lifter
              WHERE
                LOC.ID_LIFTER_COMPET = :LOC
            ) &lt;= cast(TO_AGE as int)
          OR ID_AGECL = -2
      ) AND
    R.ID_RECORD in (SELECT ID_RECORD FROM MAX_RECORDS(:id_range, :id_category, :lifter_sex, :exerscise))
  ORDER BY
     ac.from_age, "LEVEL"
  INTO
    :ID_LIFTER,
    :ID_AGECL,
    :WEGHT,
    :SOREVN_NAME,
    :"LEVEL"
   do SUSPEND;
  end

  TODAY = NULL;
  ID_CATEGORY = NULL;
  ID_COMPET = NULL;
  ID_RANGE = NULL;
  LIFTER_SEX = NULL;
  LIFTER_DATEBITH = NULL;
  LEVLOW = NULL;
  LEVHIGH = NULL;
  FIX = NULL;
  LVL = NULL;
END^
SET TERM ; ^</script>
	</version>

	<version number="0.28">
	<script optional ="1">DROP TABLE TRANSLATE_RUS_ENG;</script>
    <script>SET TERM ^ ; 
CREATE OR ALTER PROCEDURE DO_UP as
begin 
/**/ 
end^ 
SET TERM ; ^</script>

	<script>
	CREATE TABLE TRANSLATE_RUS_ENG (
		ID       CHAR(50) CHARACTER SET ASCII NOT NULL,
		VAL      VARCHAR(254) CHARACTER SET WIN1251
);</script>
	<script>ALTER TABLE TRANSLATE_RUS_ENG ADD CONSTRAINT PK_TRANSLATE_RUS_ENG PRIMARY KEY (ID);</script>
	</version>

	<version number="0.29">
    <script>SET TERM ^ ; 
CREATE OR ALTER PROCEDURE DO_UP as
begin 
	delete from lifter_exersis where id_lifter_compet in
	(
	SELECT id_lifter_compet FROM LIFTER_ON_COMPETITION loc Inner join competit c on loc.id_compet = c.id_compet
	WHERE c.ID_RANGE in (17, 14)
	);

	delete from  LIFTER_ON_COMPETITION where id_lifter_compet in
	(
	SELECT id_lifter_compet FROM LIFTER_ON_COMPETITION loc Inner join competit c on loc.id_compet = c.id_compet
	WHERE c.ID_RANGE in (17, 14)
	);
	delete from competit where ID_RANGE in (17, 14);
    DELETE FROM RANGE WHERE ID_RANGE in (17, 14); /* 'WPC 1 слойная становая тяга', 'AWPC 1 слойная становая тяга'*/
/*

    UPDATE OR INSERT INTO TRANSLATE_RUS_ENG (ID, VAL)
    VALUES ('RANGE_0', 'WPC multi ply benchpress') MATCHING (ID);
    UPDATE OR INSERT INTO TRANSLATE_RUS_ENG (ID, VAL)
    VALUES ('RANGE_1', 'WPC multi ply powerlifting') MATCHING (ID);
*/
    UPDATE OR INSERT INTO TRANSLATE_RUS_ENG (ID, VAL)
    VALUES ('RANGE_2', 'Folk bench press single body weight') MATCHING (ID);
/*
    UPDATE OR INSERT INTO TRANSLATE_RUS_ENG (ID, VAL)
    VALUES ('RANGE_3', 'AWPC multi ply powerlifting') MATCHING (ID);
*/	
    UPDATE OR INSERT INTO TRANSLATE_RUS_ENG (ID, VAL)
    VALUES ('RANGE_4', 'Folk bench press half of body weight') MATCHING (ID);
 
/*
    UPDATE OR INSERT INTO TRANSLATE_RUS_ENG (ID, VAL)
    VALUES ('RANGE_5', 'AWPC raw powerlifting') MATCHING (ID);
    
	UPDATE OR INSERT INTO TRANSLATE_RUS_ENG (ID, VAL)
    VALUES ('RANGE_6', 'WPC raw benchpress') MATCHING (ID);
    UPDATE OR INSERT INTO TRANSLATE_RUS_ENG (ID, VAL)
    VALUES ('RANGE_7', 'WPC raw powerlifting') MATCHING (ID);

    UPDATE OR INSERT INTO TRANSLATE_RUS_ENG (ID, VAL)
    VALUES ('RANGE_8', 'WPC single ply benchpress') MATCHING (ID);
    UPDATE OR INSERT INTO TRANSLATE_RUS_ENG (ID, VAL)
    VALUES ('RANGE_9', 'WPC single ply powerlifting') MATCHING (ID);
	
    UPDATE OR INSERT INTO TRANSLATE_RUS_ENG (ID, VAL)
    VALUES ('RANGE_10', 'AWPC single ply benchpress') MATCHING (ID);
    UPDATE OR INSERT INTO TRANSLATE_RUS_ENG (ID, VAL)
    VALUES ('RANGE_11', 'AWPC single ply powerlifting') MATCHING (ID);

    UPDATE OR INSERT INTO TRANSLATE_RUS_ENG (ID, VAL)
    VALUES ('RANGE_12', 'WPC multy ply deadlift') MATCHING (ID);
    UPDATE OR INSERT INTO TRANSLATE_RUS_ENG (ID, VAL)
    VALUES ('RANGE_13', 'WPC raw deadlift') MATCHING (ID);
	
    UPDATE OR INSERT INTO TRANSLATE_RUS_ENG (ID, VAL)
    VALUES ('RANGE_15', 'AWPC multy ply deadlift') MATCHING (ID);
    UPDATE OR INSERT INTO TRANSLATE_RUS_ENG (ID, VAL)
    VALUES ('RANGE_16', 'AWPC raw deadlift') MATCHING (ID);
*/
end^ 
SET TERM ; ^</script>

		<script>EXECUTE PROCEDURE DO_UP;</script>
	</version>



	<version number="0.30">
	<script optional ="1">DROP PROCEDURE CHECK_ENTRY;</script>
	<script optional ="1">DROP TABLE COMPET_ENTRY_LIMIT;</script>
    <script>SET TERM ^ ; 
CREATE OR ALTER PROCEDURE DO_UP as
begin 
/**/ 
end^ 
SET TERM ; ^</script>

    <script>SET TERM ^ ; 
CREATE TABLE COMPET_ENTRY_LIMIT (
    ID_COMPET    ID not null,
    ID_CATEGORY  ID not null,
    ID_RAZR      ID not null,
    ID_AGECL     ID not null,
	SEX			 INT not null
)^
SET TERM ; ^</script>

    <script>SET TERM ^ ; 
ALTER TABLE COMPET_ENTRY_LIMIT ADD CONSTRAINT PK_COMPET_ENTRY_LIMIT PRIMARY KEY (ID_COMPET, ID_CATEGORY, ID_RAZR, ID_AGECL, SEX)^	
ALTER TABLE COMPET_ENTRY_LIMIT ADD CONSTRAINT FK_COMPET_ENTRY_LIMIT_COMPET FOREIGN KEY (ID_COMPET) REFERENCES COMPETIT (ID_COMPET)^
ALTER TABLE COMPET_ENTRY_LIMIT ADD CONSTRAINT FK_COMPET_ENTRY_LIMIT_WC FOREIGN KEY (ID_CATEGORY) REFERENCES WEIGTH_CATEGORY (ID_CATEGORY)^
ALTER TABLE COMPET_ENTRY_LIMIT ADD CONSTRAINT FK_COMPET_ENTRY_LIMIT_RAZR FOREIGN KEY (ID_RAZR) REFERENCES RAZR (ID_RAZR)^
ALTER TABLE COMPET_ENTRY_LIMIT ADD CONSTRAINT FK_COMPET_ENTRY_LIMIT_AGECL FOREIGN KEY (ID_AGECL) REFERENCES AGE_CLASS (ID_AGECL)^
SET TERM ; ^</script>
</version>	


	<version number="0.31">
    <script optional ="1">DROP INDEX PARAMS_NAME_VAL;</script>
    <script optional ="1">DROP INDEX PARAMS_IDX_UP_NAME;</script>
    <script optional ="1">DROP INDEX LIFTER_UANAME;</script>
    <script optional ="1">DROP INDEX LIFTER_UNAME;</script>
    <script optional ="1">ALTER TABLE COMPETIT DROP MIN_RAZR_ID;</script>

    <script>CREATE INDEX PARAMS_NAME_VAL ON PARAMS (NAME, "VALUE");</script>
    <script>CREATE UNIQUE INDEX PARAMS_IDX_UP_NAME ON PARAMS COMPUTED BY (UPPER(NAME));</script>
    <script>CREATE INDEX LIFTER_UANAME ON LIFTER COMPUTED BY (UPPER(ANAME));</script>
    <script>CREATE INDEX LIFTER_UNAME ON LIFTER COMPUTED BY (UPPER(NAME));</script>	

	<script>SET TERM ^ ;
CREATE OR ALTER procedure CHECK_ENTRY (
    COMPET_ID numeric(12,0),
    TOTALL double precision,
    AGECLASS_ID numeric(12,0),
    WEIGHTCLASS_ID numeric(12,0),
    LIFTER_ID numeric(12,0))
returns (
    RESULT integer,
    MINRAZRNAME varchar(4) character set WIN1251 collate WIN1251)
as
declare variable CEL integer;
declare variable MINTOTALL double precision;
begin
    result = 1;

    cel = null;
    minTotall = null;

    select coalesce( cast( (select "VALUE" from params where upper(name) = upper('CheckEntryLimitations')) as int), 0) from tmp into cel;

    if (cel = 0) then
    begin
      suspend;
      exit;
    end

    select n.sum_tot, r.name
    from compet_entry_limit cel inner join
      razr r on  cel.id_razr = r.id_razr inner join
      competit c on cel.id_compet = c.id_compet left join
      normat n on (n.id_range = c.id_range and n.id_category = cel.id_category and cel.id_razr = n.id_razr)
    where cel.id_compet = :compet_id
      and cel.id_category = :weightclass_id
      and cel.id_agecl = :ageclass_id
      and n.sex = (select sex from lifter where id_lifter = :lifter_id)
      and cel.sex = n.sex
    into minTotall, MinRazrName;

    if (coalesce(totall, 0) &lt; coalesce(minTotall, 0)) then result = 0;

    cel = null;
    minTotall = null;
    suspend;
end
^ SET TERM ; ^</script>
	
    <script>SET TERM ^ ; 
CREATE OR ALTER PROCEDURE DO_UP as
begin 
	UPDATE OR INSERT INTO PARAMS (ID, ID_PARENT, NAME, "VALUE", DESCRIPTION)
						  VALUES (500, 1, 'General', NULL, 'Общие настройки')
						MATCHING (ID);
	UPDATE OR INSERT INTO PARAMS (ID, ID_PARENT, NAME, "VALUE", DESCRIPTION)
						  VALUES (501, 500, 'CheckEntryLimitations', '0', 'Проверять ограничения по разряду')
						MATCHING (ID);
						
	update RDB$FIELDS set RDB$FIELD_LENGTH = 512, RDB$CHARACTER_LENGTH = 512 where RDB$FIELD_NAME = 'RDB$391';

	update razr set name = trim(name);
	update lifter set name = trim(name), aname = trim(aname), town = trim(town);

	update RDB$FIELDS set RDB$FIELD_TYPE = 37, RDB$CHARACTER_SET_ID = 52, RDB$COLLATION_ID = 0 where RDB$FIELD_NAME = 'RDB$441';
	UPDATE RAZR  set ID_RAZR = -1 where ID_RAZR = 0;
	UPDATE OR INSERT INTO RAZR (ID_RAZR, NAME) VALUES (1, '2Ю') MATCHING (ID_RAZR);
	UPDATE OR INSERT INTO RAZR (ID_RAZR, NAME) VALUES (2, '1Ю') MATCHING (ID_RAZR);
    UPDATE RAZR set NAME = TRIM(NAME);

end
^ SET TERM ; ^</script>
		<script>EXECUTE PROCEDURE DO_UP;</script>
	
</version>	


<version number="0.32">
    <script>SET TERM ^ ; 
CREATE OR ALTER PROCEDURE DO_UP as
begin 
  update RDB$RELATION_FIELDS set RDB$NULL_FLAG = 1 where (RDB$FIELD_NAME = 'ID_RAZR') and (RDB$RELATION_NAME = 'LIFTER');
  update lifter set id_razr = -1 where id_razr = 0;
end
^ SET TERM ; ^</script>
	<script>EXECUTE PROCEDURE DO_UP;</script>
</version>	

<version number="0.33">
    <script>SET TERM ^ ; 
CREATE OR ALTER PROCEDURE DO_UP as
begin 
/**/ 
end^ 
SET TERM ; ^</script>	

	<script optional ="1">DROP INDEX FK_LIFTER_RAZR;</script>
    <script>ALTER TABLE LIFTER ADD CONSTRAINT FK_LIFTER_RAZR FOREIGN KEY (ID_RAZR) REFERENCES RAZR(ID_RAZR);</script>	
</version>	

<version number="0.34">
    <script>SET TERM ^ ; 
CREATE OR ALTER PROCEDURE DO_UP as
begin 
	UPDATE OR INSERT INTO PARAMS (ID, ID_PARENT, NAME, "VALUE", DESCRIPTION)
						  VALUES (1, NULL, 'ALL', NULL, NULL)
						MATCHING (ID);
	UPDATE OR INSERT INTO PARAMS (ID, ID_PARENT, NAME, "VALUE", DESCRIPTION)
						  VALUES (200, 1, 'Секретарский модуль', NULL, NULL)
						MATCHING (ID);
	UPDATE OR INSERT INTO PARAMS (ID, ID_PARENT, NAME, "VALUE", DESCRIPTION)
						  VALUES (300, 1, 'Модуль таймера', NULL, NULL)
						MATCHING (ID);
	UPDATE OR INSERT INTO PARAMS (ID, ID_PARENT, NAME, "VALUE", DESCRIPTION)
						  VALUES (400, 1, 'Предварительная регистрации и взвешивание', NULL, NULL)
						MATCHING (ID);
	UPDATE OR INSERT INTO PARAMS (ID, ID_PARENT, NAME, "VALUE", DESCRIPTION)
						  VALUES (500, 1, 'General', NULL, 'Общие настройки')
						MATCHING (ID);

	UPDATE OR INSERT INTO PARAMS (ID, ID_PARENT, NAME, "VALUE", DESCRIPTION)
						  VALUES (402, 400, 'StreamsForCheckEntryLimitations', '', 'Потоки которые проверять на допуски')
						MATCHING (ID);
end
^ SET TERM ; ^</script>
		<script>EXECUTE PROCEDURE DO_UP;</script>
	
    <script>SET TERM ^ ; 
CREATE OR ALTER PROCEDURE DO_UP as
begin 
	UPDATE OR INSERT INTO PARAMS (ID, ID_PARENT, NAME, "VALUE", DESCRIPTION)
						  VALUES (500, 1, 'General', NULL, 'Общие настройки')
						MATCHING (ID);
	UPDATE OR INSERT INTO PARAMS (ID, ID_PARENT, NAME, "VALUE", DESCRIPTION)
						  VALUES (501, 500, 'CheckEntryLimitations', '0', 'Проверять ограничения по разряду')
						MATCHING (ID);
						
	update RDB$FIELDS set RDB$FIELD_LENGTH = 512, RDB$CHARACTER_LENGTH = 512 where RDB$FIELD_NAME = 'RDB$391';

	update razr set name = trim(name);
	update lifter set name = trim(name), aname = trim(aname), town = trim(town);

	update RDB$FIELDS set RDB$FIELD_TYPE = 37, RDB$CHARACTER_SET_ID = 52, RDB$COLLATION_ID = 0 where RDB$FIELD_NAME = 'RDB$441';
	UPDATE RAZR  set ID_RAZR = -1 where ID_RAZR = 0;
	UPDATE OR INSERT INTO RAZR (ID_RAZR, NAME) VALUES (1, '2Ю') MATCHING (ID_RAZR);
	UPDATE OR INSERT INTO RAZR (ID_RAZR, NAME) VALUES (2, '1Ю') MATCHING (ID_RAZR);
    UPDATE RAZR set NAME = TRIM(NAME);

end
^ SET TERM ; ^</script>
		<script>EXECUTE PROCEDURE DO_UP;</script>
	
</version>	

	<version number="0.35">
	<script>SET TERM ^ ;
CREATE OR ALTER procedure CHECK_ENTRY (
    COMPET_ID numeric(12,0),
    TOTALL double precision,
    AGECLASS_ID numeric(12,0),
    WEIGHTCLASS_ID numeric(12,0),
    LIFTER_ID numeric(12,0))
returns (
    RESULT integer,
    MINRAZRNAME varchar(50) character set WIN1251 collate WIN1251)
as
declare variable CEL integer;
declare variable MINTOTALL double precision;
begin
    result = 1;

    cel = null;
    minTotall = null;

    select coalesce( cast( (select "VALUE" from params where upper(name) = upper('CheckEntryLimitations')) as int), 0) from tmp into cel;

    if (cel = 0) then
    begin
      suspend;
      exit;
    end

    select n.sum_tot, r.name ||' ('||n.sum_tot||'кг.)'
    from compet_entry_limit cel inner join
      razr r on  cel.id_razr = r.id_razr inner join
      competit c on cel.id_compet = c.id_compet left join
      normat n on (n.id_range = c.id_range and n.id_category = cel.id_category and cel.id_razr = n.id_razr)
    where cel.id_compet = :compet_id
      and cel.id_category = :weightclass_id
      and cel.id_agecl = :ageclass_id
      and n.sex = (select sex from lifter where id_lifter = :lifter_id)
      and cel.sex = n.sex
    into minTotall, MinRazrName;

    if (coalesce(totall, 0) &lt; coalesce(minTotall, 0)) then result = 0;

    cel = null;
    minTotall = null;
    suspend;
end
^ SET TERM ; ^</script>
		
</version>	

	<version number="0.36">
    <script>SET TERM ^ ; 
CREATE OR ALTER PROCEDURE DO_UP as
begin 
 /*
1. ПЛ без экипировки
2. ПЛ в 1-эк
3. ПЛ в многослойной эк.
[16:06:49] Роянова Наталья: 4. ЖИМ без эк
5.Жим в 1-эк
6. Жим в мн. эк.
[16:07:03] Роянова Наталья: 7.Тяга без эк.
8. Тяга в эк. 
 */

 
/* WPC */    
/*
    UPDATE OR INSERT INTO TRANSLATE_RUS_ENG (ID, VAL)
    VALUES ('RANGE_ORD_7', '01') MATCHING (ID); --WPC raw powerlifting
    UPDATE OR INSERT INTO TRANSLATE_RUS_ENG (ID, VAL)
    VALUES ('RANGE_ORD_9', '02') MATCHING (ID); -- WPC single ply powerlifting
	UPDATE OR INSERT INTO TRANSLATE_RUS_ENG (ID, VAL)
    VALUES ('RANGE_ORD_1', '03') MATCHING (ID); --WPC multi ply powerlifting

    UPDATE OR INSERT INTO TRANSLATE_RUS_ENG (ID, VAL)
    VALUES ('RANGE_ORD_6', '04') MATCHING (ID); 	--WPC raw benchpress
    UPDATE OR INSERT INTO TRANSLATE_RUS_ENG (ID, VAL)
    VALUES ('RANGE_ORD_8', '05') MATCHING (ID); 	--WPC single ply benchpress
    UPDATE OR INSERT INTO TRANSLATE_RUS_ENG (ID, VAL)
    VALUES ('RANGE_ORD_0', '06') MATCHING (ID);	--WPC multi ply benchpress
*/
/* AWPC */	
/*
    UPDATE OR INSERT INTO TRANSLATE_RUS_ENG (ID, VAL)
    VALUES ('RANGE_ORD_5', '07') MATCHING (ID); -- AWPC raw powerlifting
    UPDATE OR INSERT INTO TRANSLATE_RUS_ENG (ID, VAL)
    VALUES ('RANGE_ORD_11', '08') MATCHING (ID); -- AWPC single ply powerlifting
    UPDATE OR INSERT INTO TRANSLATE_RUS_ENG (ID, VAL)
    VALUES ('RANGE_ORD_3', '09') MATCHING (ID); -- AWPC multi ply powerlifting
*/	
    UPDATE OR INSERT INTO TRANSLATE_RUS_ENG (ID, VAL)
    VALUES ('RANGE_ORD_4', '10') MATCHING (ID); -- AWPC raw benchpress
/*
    UPDATE OR INSERT INTO TRANSLATE_RUS_ENG (ID, VAL)
    VALUES ('RANGE_ORD_10', '11') MATCHING (ID); -- AWPC single ply benchpress
*/
    UPDATE OR INSERT INTO TRANSLATE_RUS_ENG (ID, VAL)
    VALUES ('RANGE_ORD_2', '12') MATCHING (ID); -- AWPC multi ply benchpress

	
/* DL */	
/*
    UPDATE OR INSERT INTO TRANSLATE_RUS_ENG (ID, VAL)
    VALUES ('RANGE_ORD_13', '13') MATCHING (ID); -- WPC raw deadlift
    UPDATE OR INSERT INTO TRANSLATE_RUS_ENG (ID, VAL)
    VALUES ('RANGE_ORD_12', '14') MATCHING (ID); -- WPC multy ply deadlift
	
    UPDATE OR INSERT INTO TRANSLATE_RUS_ENG (ID, VAL)
    VALUES ('RANGE_ORD_16', '15') MATCHING (ID); -- AWPC raw deadlift
    UPDATE OR INSERT INTO TRANSLATE_RUS_ENG (ID, VAL)
    VALUES ('RANGE_ORD_15', '16') MATCHING (ID); -- AWPC multy ply deadlift
*/
	
end^ 
SET TERM ; ^</script>

		<script>EXECUTE PROCEDURE DO_UP;</script>
	</version>

<version number="0.37">
    <script>SET TERM ^ ; 
CREATE OR ALTER PROCEDURE DO_UP as
begin 
	UPDATE OR INSERT INTO PARAMS (ID, ID_PARENT, NAME, "VALUE", DESCRIPTION)
						  VALUES (210, 200, 'MaxDelayForNextAttempt', '99999', 'Время для подачи заявки на следующий подход (секунды)')
						MATCHING (ID);
end
^ SET TERM ; ^</script>
		<script>EXECUTE PROCEDURE DO_UP;</script>
		
</version>	


	<version number="0.38">
    <script>SET TERM ^ ; 
CREATE OR ALTER PROCEDURE DO_UP as
begin 
  update lifter set name = trim(name);
  update lifter set aname = trim(coalesce(aname, ''));
  update WEIGTH_CATEGORY set name = trim(name);
	update RDB$RELATION_FIELDS set
	RDB$NULL_FLAG = 1
	where (RDB$FIELD_NAME = 'ID_EXER') and
	(RDB$RELATION_NAME = 'RECORDS');
	update RDB$RELATION_FIELDS set
	RDB$NULL_FLAG = 1
	where (RDB$FIELD_NAME = 'ID_AGECL') and
	(RDB$RELATION_NAME = 'RECORDS');
	update RDB$RELATION_FIELDS set
	RDB$NULL_FLAG = 1
	where (RDB$FIELD_NAME = 'ID_LIFTER') and
	(RDB$RELATION_NAME = 'RECORDS');
	update RDB$RELATION_FIELDS set
	RDB$NULL_FLAG = 1
	where (RDB$FIELD_NAME = 'ID_CATEGORY') and
	(RDB$RELATION_NAME = 'RECORDS');
	update RDB$RELATION_FIELDS set
	RDB$NULL_FLAG = 1
	where (RDB$FIELD_NAME = 'ID_RANGE') and
	(RDB$RELATION_NAME = 'RECORDS');
	update RDB$RELATION_FIELDS set
	RDB$NULL_FLAG = 1
	where (RDB$FIELD_NAME = 'LEVEL') and
	(RDB$RELATION_NAME = 'RECORDS');

  
end^ 
SET TERM ; ^</script>

		<script>EXECUTE PROCEDURE DO_UP;</script>
		<script optional ="1">DROP INDEX XPKWEIGTH_CATEGORY;</script>
		<script optional ="1">DROP INDEX WEIGTH_CATEGORY_UNAME;</script>
		<script optional ="1">DROP INDEX RECORDS_REC_SEARCH;</script>
		<script>CREATE INDEX WEIGTH_CATEGORY_UNAME ON WEIGTH_CATEGORY COMPUTED BY (UPPER(NAME))</script>
<script>CREATE INDEX RECORDS_REC_SEARCH ON RECORDS (
    ID_RECORD,
    ID_EXER,
    ID_AGECL,
    ID_LIFTER,
    ID_CATEGORY,
    ID_COMPET,
    ID_RANGE,
    "LEVEL",
    WEGHT
);</script>
	</version>

	<version number="0.39">
    <script>SET TERM ^ ; 
CREATE OR ALTER PROCEDURE DO_UP as
begin 
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (0, 7, 8, 2, 14, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (1, 7, 13, 2, 13, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (2, 7, 7, 2, 16, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (3, 7, 6, 2, 18, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (4, 7, 5, 2, 19, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (5, 7, 4, 2, 20, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (6, 7, 3, 2, 21, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (7, 7, 2, 2, 22, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (8, 7, 1, 2, 23, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (9, 7, 0, 2, 24, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (10, 8, 13, 2, 15, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (11, 8, 8, 2, 18, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (12, 8, 7, 2, 21, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (13, 8, 6, 2, 23, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (14, 8, 5, 2, 24, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (15, 8, 4, 2, 25, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (16, 8, 3, 2, 26, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (17, 8, 2, 2, 27, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (18, 8, 1, 2, 28, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (19, 8, 0, 2, 29, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (20, 3, 13, 4, 12, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (21, 3, 8, 4, 14, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (22, 3, 7, 4, 16, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (23, 3, 6, 4, 18, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (24, 3, 5, 4, 20, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (25, 3, 4, 4, 21, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (26, 3, 3, 4, 22, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (27, 3, 2, 4, 23, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (28, 3, 1, 4, 24, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (29, 3, 0, 4, 25, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (30, 4, 13, 4, 24, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (31, 4, 8, 4, 26, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (32, 4, 7, 4, 28, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (33, 4, 6, 4, 30, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (34, 4, 5, 4, 32, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (35, 4, 4, 4, 33, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (36, 4, 3, 4, 34, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (37, 4, 2, 4, 35, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (38, 4, 1, 4, 36, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (39, 4, 0, 4, 37, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (40, 5, 13, 4, 36, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (41, 6, 13, 4, 49, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (42, 6, 8, 4, 51, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (43, 5, 8, 4, 38, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (44, 6, 7, 4, 53, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (45, 5, 7, 4, 40, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (46, 6, 6, 4, 55, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (47, 5, 6, 4, 42, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (48, 6, 5, 4, 57, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (49, 5, 5, 4, 44, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (50, 6, 4, 4, 58, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (51, 5, 4, 4, 45, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (52, 6, 3, 4, 59, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (53, 5, 3, 4, 46, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (54, 6, 2, 4, 60, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (55, 5, 2, 4, 47, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (56, 6, 1, 4, 61, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (57, 5, 1, 4, 48, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (58, 6, 0, 4, 62, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (59, 5, 0, 4, 49, 0, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (60, 1, 14, 4, 18, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (61, 1, 12, 4, 19, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (62, 1, 11, 4, 20, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (63, 1, 10, 4, 21, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (64, 1, 9, 4, 22, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (65, 1, 8, 4, 23, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (66, 1, 7, 4, 24, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (67, 1, 6, 4, 25, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (68, 1, 5, 4, 26, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (69, 1, 4, 4, 27, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (70, 1, 3, 4, 28, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (71, 1, 2, 4, 29, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (72, 2, 2, 4, 35, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (73, 2, 3, 4, 34, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (74, 2, 4, 4, 33, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (75, 2, 5, 4, 32, 1, '-1')
                    MATCHING (ID_NORMAT);
end^ 
SET TERM ; ^</script>

		<script>EXECUTE PROCEDURE DO_UP;</script>

		<script>SET TERM ^ ; 
CREATE OR ALTER PROCEDURE DO_UP as
begin 

UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (76, 2, 6, 4, 31, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (77, 2, 7, 4, 30, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (78, 2, 8, 4, 29, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (79, 2, 9, 4, 28, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (80, 2, 10, 4, 27, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (81, 2, 11, 4, 26, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (82, 2, 12, 4, 25, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (83, 2, 14, 4, 24, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (84, 8, 14, 2, 31, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (85, 7, 14, 2, 26, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (86, 6, 14, 2, 21, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (87, 5, 14, 2, 17, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (88, 4, 14, 2, 13, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (89, 3, 14, 2, 9, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (90, 8, 12, 2, 34, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (91, 7, 12, 2, 28, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (92, 6, 12, 2, 23, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (93, 5, 12, 2, 19, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (94, 4, 12, 2, 15, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (95, 3, 12, 2, 11, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (96, 8, 11, 2, 37, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (97, 7, 11, 2, 31, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (98, 6, 11, 2, 25, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (99, 5, 11, 2, 21, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (100, 4, 11, 2, 17, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (101, 3, 11, 2, 13, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (102, 8, 10, 2, 39, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (103, 7, 10, 2, 33, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (104, 6, 10, 2, 28, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (105, 5, 10, 2, 23, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (106, 4, 10, 2, 19, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (107, 3, 10, 2, 15, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (108, 8, 9, 2, 41, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (109, 7, 9, 2, 35, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (110, 6, 9, 2, 30, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (111, 5, 9, 2, 24, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (112, 4, 9, 2, 20, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (113, 3, 9, 2, 16, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (114, 8, 8, 2, 43, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (115, 7, 8, 2, 37, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (116, 6, 8, 2, 32, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (117, 5, 8, 2, 25, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (118, 4, 8, 2, 21, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (119, 3, 8, 2, 17, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (120, 8, 7, 2, 45, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (121, 7, 7, 2, 39, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (122, 6, 7, 2, 34, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (123, 5, 7, 2, 26, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (124, 4, 7, 2, 22, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (125, 3, 7, 2, 18, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (126, 8, 6, 2, 47, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (127, 7, 6, 2, 41, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (128, 6, 6, 2, 36, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (129, 5, 6, 2, 28, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (130, 4, 6, 2, 23, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (131, 3, 6, 2, 19, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (132, 8, 5, 2, 49, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (133, 7, 5, 2, 43, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (134, 6, 5, 2, 38, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (135, 5, 5, 2, 29, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (136, 4, 5, 2, 24, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (137, 3, 5, 2, 20, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (138, 8, 4, 2, 51, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (139, 7, 4, 2, 45, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (140, 6, 4, 2, 40, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (141, 5, 4, 2, 30, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (142, 4, 4, 2, 25, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (143, 3, 4, 2, 21, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (144, 8, 3, 2, 52, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (145, 7, 3, 2, 46, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (146, 6, 3, 2, 41, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (147, 5, 3, 2, 31, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (148, 4, 3, 2, 26, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (149, 3, 3, 2, 22, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (150, 8, 2, 2, 53, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (151, 7, 2, 2, 47, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (152, 6, 2, 2, 42, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (153, 5, 2, 2, 32, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (154, 4, 2, 2, 27, 1, '-1')
                    MATCHING (ID_NORMAT);
UPDATE OR INSERT INTO NORMAT (ID_NORMAT, ID_RAZR, ID_CATEGORY, ID_RANGE, SUM_TOT, SEX, NK)
                      VALUES (155, 3, 2, 2, 23, 1, '-1')
                    MATCHING (ID_NORMAT);
end^ 
SET TERM ; ^</script>

		<script>EXECUTE PROCEDURE DO_UP;</script>

		<script>SET TERM ^ ; 
CREATE OR ALTER procedure GET_COMPETNEWRAZR (IDC numeric(12,0))
returns (
    LIFTER numeric(12,0),
    LNAME varchar(60) character set WIN1251,
    ORAZR numeric(12,0),
    NRAZR numeric(12,0),
    LOC numeric(12,0),
    TOTALL float,
    WCATEG numeric(12,0),
    NORMAT numeric(12,0))
as begin
for
select
  l.id_lifter,
  l.name,
 COALESCE((
     select
      max(n2.id_razr)
     from
       lifter2razr lr1 join
       normat n2 on n2.id_normat = lr1.id_normat
     where
       lr1.id_lifter = l.id_lifter and
       n2.id_range = c.id_range and
       n2.sex = l.sex
     rows 1 to 1
  ), -1) as old_razr,

  (select max (id_razr) from normat n1 where
   n1.id_category=lc.id_category and n1.sex=l.sex and sum_tot &lt;= le.bench2 and id_range=c.id_range) as new_razr,
  (select first 1 id_normat from normat n1 where
   n1.id_category=lc.id_category and n1.sex=l.sex and sum_tot &lt;= le.bench2 and id_range=c.id_range order by id_razr desc ) as new_normat,
  lc.ID_LIFTER_COMPET,
  le.bench2,
  lc.id_category
from
  Lifter_Exersis le,
  Lifter_on_competition lc,
  Lifter L,
  Competit C
where
  lc.id_compet=c.id_compet and
  l.id_lifter=lc.id_lifter and
  le.ID_LIFTER_COMPET=lc.ID_LIFTER_COMPET and
  lc.id_compet= :IDC and
  COALESCE((
     select
      max(n2.id_razr)
     from
       lifter2razr lr1 join
       normat n2 on n2.id_normat = lr1.id_normat
     where
       lr1.id_lifter = l.id_lifter and
       n2.id_range = c.id_range and
       n2.sex = l.sex
     rows 1 to 1
  ), -1)
  &lt;=
  (
     select
       max (id_razr)
     from
       normat n1
     where
       n1.id_category = lc.id_category and
       n1.sex = l.sex and
       sum_tot &lt;= le.bench2 and
       id_range=c.id_range
     rows 1 to 1
  )
  and le.summaall&gt;0
order by
  l.sex, l.name
into
  :lifter,
  :lname,
  :orazr,
  :nrazr,
  :normat,
  :loc,
  :totall,
  :wcateg
  DO suspend;
end	
^
SET TERM ; ^</script>
	</version>
	
<version number="0.40">
    <script>SET TERM ^ ; 
CREATE OR ALTER PROCEDURE DO_UP as
begin 
delete from deleted;
delete from info;

UPDATE OR INSERT INTO AGE_CLASS (ID_AGECL, NAME, FROM_AGE, TO_AGE, ENGNAME)
                         VALUES (80 /*=13*/, 'Мастера 80+', 80, 999, 'Masters 80up')
                       MATCHING (ID_AGECL);
update  compet_entry_limit       set id_agecl = 80 where id_agecl =13;
update  lifter_on_competition    set id_agecl = 80 where id_agecl =13;
update                   records set id_agecl = 80 where id_agecl =13;
delete from age_class                              where id_agecl =13;

UPDATE OR INSERT INTO AGE_CLASS (ID_AGECL, NAME, FROM_AGE, TO_AGE, ENGNAME)
                         VALUES (75 /*=12*/, 'Мастера 75 - 79', 75, 79, 'Masters 75-79')
                       MATCHING (ID_AGECL);
update  compet_entry_limit       set id_agecl = 75 where id_agecl =12;
update  lifter_on_competition    set id_agecl = 75 where id_agecl =12;
update                   records set id_agecl = 75 where id_agecl =12;
delete from age_class                              where id_agecl =12;

UPDATE OR INSERT INTO AGE_CLASS (ID_AGECL, NAME, FROM_AGE, TO_AGE, ENGNAME)
                         VALUES (70 /*=11*/, 'Мастера 70 - 74', 70, 74, 'Masters 70-74')
                       MATCHING (ID_AGECL);
update  compet_entry_limit       set id_agecl = 70 where id_agecl =11;
update  lifter_on_competition    set id_agecl = 70 where id_agecl =11;
update                   records set id_agecl = 70 where id_agecl =11;
Delete from age_class                              where id_agecl =11;

UPDATE OR INSERT INTO AGE_CLASS (ID_AGECL, NAME, FROM_AGE, TO_AGE, ENGNAME)
                         VALUES (65 /*=10*/, 'Мастера 65 - 69', 65, 69, 'Masters 65-69')
                       MATCHING (ID_AGECL);
update  compet_entry_limit       set id_agecl = 65 where id_agecl =10;
update  lifter_on_competition    set id_agecl = 65 where id_agecl =10;
update                   records set id_agecl = 65 where id_agecl =10;
Delete from age_class                              where id_agecl =10;

UPDATE OR INSERT INTO AGE_CLASS (ID_AGECL, NAME, FROM_AGE, TO_AGE, ENGNAME)
                         VALUES (60 /*=9*/, 'Мастера 60 - 64', 60, 64, 'Masters 60-64')
                       MATCHING (ID_AGECL);
update  compet_entry_limit       set id_agecl = 60 where id_agecl =9;
update  lifter_on_competition    set id_agecl = 60 where id_agecl =9;
update                   records set id_agecl = 60 where id_agecl =9;
Delete from age_class                              where id_agecl =9;

UPDATE OR INSERT INTO AGE_CLASS (ID_AGECL, NAME, FROM_AGE, TO_AGE, ENGNAME)
                         VALUES (55 /*=8*/, 'Мастера 55 - 59', 55, 59, 'Masters 55-59')
                       MATCHING (ID_AGECL);
update  compet_entry_limit       set id_agecl = 55 where id_agecl =8;
update  lifter_on_competition    set id_agecl = 55 where id_agecl =8;
update                   records set id_agecl = 55 where id_agecl =8;
Delete from age_class                              where id_agecl =8;

UPDATE OR INSERT INTO AGE_CLASS (ID_AGECL, NAME, FROM_AGE, TO_AGE, ENGNAME)
                         VALUES (50 /*=6*/, 'Мастера 50 - 54', 50, 54, 'Masters 50-54')
                       MATCHING (ID_AGECL);
update  compet_entry_limit       set id_agecl = 50 where id_agecl =6;
update  lifter_on_competition    set id_agecl = 50 where id_agecl =6;
update                   records set id_agecl = 50 where id_agecl =6;
Delete from age_class                              where id_agecl =6;

UPDATE OR INSERT INTO AGE_CLASS (ID_AGECL, NAME, FROM_AGE, TO_AGE, ENGNAME)
                         VALUES (45 /*=4*/, 'Мастера 45 - 49', 45, 49, 'Masters 45-49')
                       MATCHING (ID_AGECL);
update  compet_entry_limit       set id_agecl = 45 where id_agecl =4;
update  lifter_on_competition    set id_agecl = 45 where id_agecl =4;
update                   records set id_agecl = 45 where id_agecl =4;
Delete from age_class                              where id_agecl =4;

UPDATE OR INSERT INTO AGE_CLASS (ID_AGECL, NAME, FROM_AGE, TO_AGE, ENGNAME)
                         VALUES (40 /*=3*/, 'Мастера 40 - 44', 40, 44, 'Masters 40-44')
                       MATCHING (ID_AGECL);
update  compet_entry_limit       set id_agecl = 40 where id_agecl =3;
update  lifter_on_competition    set id_agecl = 40 where id_agecl =3;
update                   records set id_agecl = 40 where id_agecl =3;
Delete from age_class                              where id_agecl =3;

UPDATE OR INSERT INTO AGE_CLASS (ID_AGECL, NAME, FROM_AGE, TO_AGE, ENGNAME)
                         VALUES (20 /*=1*/, 'Юниоры 20 - 23', 20, 23, 'Juniors 20-23')
                       MATCHING (ID_AGECL);
update  compet_entry_limit       set id_agecl = 20 where id_agecl =1;
update  lifter_on_competition    set id_agecl = 20 where id_agecl =1;
update                   records set id_agecl = 20 where id_agecl =1;
Delete from age_class                              where id_agecl =1;

UPDATE OR INSERT INTO AGE_CLASS (ID_AGECL, NAME, FROM_AGE, TO_AGE, ENGNAME)
                         VALUES (18 /*=2*/, 'Юноши 18 - 19', 18, 19, 'Teen 18-19')
                       MATCHING (ID_AGECL);
update  compet_entry_limit       set id_agecl = 18 where id_agecl =2;
update  lifter_on_competition    set id_agecl = 18 where id_agecl =2;
update                   records set id_agecl = 18 where id_agecl =2;
Delete from age_class                              where id_agecl =2;

UPDATE OR INSERT INTO AGE_CLASS (ID_AGECL, NAME, FROM_AGE, TO_AGE, ENGNAME)
                         VALUES (16 /*=15*/, 'Юноши 16 - 17', 16, 17, 'Teen 16-17')
                       MATCHING (ID_AGECL);
update  compet_entry_limit       set id_agecl = 16 where id_agecl =15;
update  lifter_on_competition    set id_agecl = 16 where id_agecl =15;
update                   records set id_agecl = 16 where id_agecl =15;
Delete from age_class                              where id_agecl =15;

UPDATE OR INSERT INTO AGE_CLASS (ID_AGECL, NAME, FROM_AGE, TO_AGE, ENGNAME)
                         VALUES (13 /*=14*/, 'Юноши 13 - 15', 1, 15, 'Teen 13-15')
                       MATCHING (ID_AGECL);
update  compet_entry_limit       set id_agecl = 13 where id_agecl =14;
update  lifter_on_competition    set id_agecl = 13 where id_agecl =14;
update                   records set id_agecl = 13 where id_agecl =14;
Delete from age_class                              where id_agecl =14;

  update age_class set name = trim(name);
  update age_class set ENGNAME = trim(coalesce(ENGNAME, ''));
end^ 
SET TERM ; ^</script>
		<script>EXECUTE PROCEDURE DO_UP;</script>	

		<script>SET TERM ^ ;
CREATE OR ALTER procedure AGE_CLASS2
returns (
    ID_AGECL numeric(12,0),
    NAME varchar(25) character set WIN1251,
    FROM_AGE numeric(3,0),
    TO_AGE numeric(3,0),
    ENGNAME varchar(25) character set WIN1251)
as
begin
  FOR SELECT
    id_agecl, name, from_age, to_age, engname
  FROM
    age_class
  WHERE
    id_agecl in (20,-2)
  INTO
    id_agecl, name, from_age, to_age, engname
  DO SUSPEND;

  FOR SELECT
    id_agecl, 'Юноши 13-19', 1, 19, 'T 13-19'
  FROM
    age_class
  WHERE
    id_agecl in (13, 16, 18)
  INTO
    id_agecl, name, from_age, to_age, engname
  DO SUSPEND;

  FOR SELECT
    id_agecl, 'Мастера 40+', 40, 999, 'M 40+'
  FROM
    age_class
  WHERE
    id_agecl > 39
  INTO
    id_agecl, name, from_age, to_age, engname
  DO SUSPEND;
end^		
SET TERM ; ^</script>	
	</version>
	
<version number="0.41">
    <script optional ="1">DROP PROCEDURE DO_UP;</script>
	<script>ALTER TABLE RANGE ALTER NAME TYPE varchar(60)  CHARACTER SET WIN1251;</script>  
	<script>ALTER TABLE RANGE ALTER SNAME TYPE varchar(20)  CHARACTER SET WIN1251;</script>  
</version>
 
<version number="0.42">
    <script>SET TERM ^ ; 
CREATE OR ALTER PROCEDURE DO_UP as
declare variable NUM bigint;
begin 
  

UPDATE OR INSERT INTO TRANSLATE_RUS_ENG (ID, VAL)
                                 VALUES ('RANGE_SNAME_2', 'Folk BP 1 bw.')
                               MATCHING (ID);
UPDATE OR INSERT INTO TRANSLATE_RUS_ENG (ID, VAL)
                                 VALUES ('RANGE_SNAME_4', 'Folk BP 1/2 bw.')
                               MATCHING (ID);
  num = null;				   
end^ 
SET TERM ; ^</script>
		<script>EXECUTE PROCEDURE DO_UP;</script>	
        <script optional ="1">DROP PROCEDURE DO_UP;</script>
	</version>

<version number="0.43">
    <script>SET TERM ^ ; 
CREATE OR ALTER PROCEDURE DELETE_LIFTER (
    id double precision)
returns (
    ts timestamp)
as
begin
  DELETE FROM
    LIFTER
  WHERE
    ID_LIFTER = :ID;

 TS = CURRENT_TIMESTAMP;

 INSERT INTO DELETED
    (ID, "TABLE", EDITTIME, "VALUE")
  VALUES
    (GEN_ID(DELETED, 1), 'LIFTER', :"TS", :"ID");

  POST_EVENT 'LIFTER_DELETE';
  POST_EVENT 'DELETE';
end^ 
SET TERM ; ^</script>

    <script>SET TERM ^ ; 
CREATE OR ALTER PROCEDURE DELETE_COACH (
    id double precision)
returns (
    ts timestamp)
as
begin
  DELETE FROM
    TRENER
  WHERE
    ID_TRENER = :ID;

 TS = CURRENT_TIMESTAMP;

 INSERT INTO DELETED
    (ID, "TABLE", EDITTIME, "VALUE")
  VALUES
    (GEN_ID(DELETED, 1), 'TRENER', :"TS", :"ID");

  POST_EVENT 'COACH_DELETE';
  POST_EVENT 'DELETE';
end^ 
SET TERM ; ^</script>
    <script>SET TERM ^ ; 
CREATE OR ALTER PROCEDURE DELETE_TEAM (
    id double precision)
returns (
    ts timestamp)
as
begin
  IF (ID &lt; 0) THEN
    EXCEPTION ESYSTEMDATADEL;
    
  DELETE FROM
    TEAM
  WHERE
    ID_TEAM = :ID;

 TS = CURRENT_TIMESTAMP;

 INSERT INTO DELETED
    (ID, "TABLE", EDITTIME, "VALUE")
  VALUES
    (GEN_ID(DELETED, 1), 'TEAM', :"TS", :"ID");

  POST_EVENT 'TEAM_DELETE';
end^
SET TERM ; ^</script>
    <script>SET TERM ^ ; 
CREATE OR ALTER PROCEDURE DELETE_TOWN (
    id numeric(12,0))
returns (
    ts timestamp)
as
begin
  DELETE FROM
    TOWNS
  WHERE
    ID = :ID;

 TS = CURRENT_TIMESTAMP;

 INSERT INTO DELETED
    (ID, "TABLE", EDITTIME, "VALUE")
  VALUES
    (GEN_ID(DELETED, 1), 'TOWNS', :"TS", :"ID");

  POST_EVENT 'TOWN_DELETE';
  POST_EVENT 'DELETE';
end^
SET TERM ; ^</script>
    <script>SET TERM ^ ; 
CREATE OR ALTER PROCEDURE DELETE_LOC (
    id double precision)
returns (
    ts timestamp)
as
begin
  TS = CURRENT_TIMESTAMP;

  DELETE FROM
    LIFTER_EXERSIS
  WHERE
    ID_LIFTER_COMPET = :ID;

  DELETE FROM
    LIFTER_ON_COMPETITION
  WHERE
    ID_LIFTER_COMPET = :ID;

 INSERT INTO DELETED
    (ID, "TABLE", EDITTIME, "VALUE")
  VALUES
    (GEN_ID(DELETED, 1), 'LIFTER_ON_COMPETITION', :"TS", :"ID");

  POST_EVENT 'LOC_DELETE';
  POST_EVENT 'DELETE';
end^
SET TERM ; ^</script>

	<script optional ="1">DROP INDEX DELETED_IDX;</script>
	<script>CREATE INDEX DELETED_IDX ON DELETED COMPUTED BY (UPPER("TABLE"));</script>

    <script>SET TERM ^ ; 
CREATE OR ALTER PROCEDURE MEDALSCOUNT (
    idc numeric(12,0),
    sex smallint)
returns (
    id_compet numeric(12,0),
    medals_teens integer,
    medals_juns integer,
    medals_open integer,
    medals_masters integer)
as
begin
for
select c1.id_compet
, (select count(fio) from competitionwinners(c1.id_compet)
where  ageclass in (13, 16, 18) and sex = :sex) as medals_teens

, (select count(fio) from competitionwinners(c1.id_compet)
where  ageclass in (20) and sex = :sex) as medals_juns

, (select count(fio) from competitionwinners(c1.id_compet)
where  ageclass in (-2) and sex = :sex) as medals_open

, (select count(fio)  from competitionwinners(c1.id_compet)
where  ageclass &gt; 39 and sex = :sex ) as medals_masters

from competit c1 inner join
  competit c2 on  c1.grp = c2.grp
where c2.id_compet = :idc
into :id_compet
  , :medals_teens
  , :medals_juns
  , :medals_open
  , :medals_masters
do suspend;
end^
SET TERM ; ^</script>

    <script>SET TERM ^ ; 
CREATE OR ALTER PROCEDURE MEDALSCOUNTBYPLACE (
    idc numeric(12,0),
    sex smallint)
returns (
    id_compet numeric(12,0),
    place integer,
    amount integer,
    age_name varchar(50))
as
begin
for
select c1.id_compet
from competit c1 inner join
  competit c2 on  c1.grp = c2.grp
where c2.id_compet = :idc
into :id_compet
do
begin
for
    select ac.name, place, count(1)
    from competitionwinners(:id_compet)cw inner join age_class ac on cw.ageclass = ac.id_agecl
    where sex = :sex
    group by  ac.name, place
    order by ac.name desc
    into :age_name, :place, :amount
do suspend;
end
end^
SET TERM ; ^</script>


    <script>SET TERM ^ ; 
CREATE OR ALTER PROCEDURE ABSOLUTE (
    idc numeric(12,0))
returns (
    loc numeric(12,0),
	cat varchar(25),
    fio varchar(100),
    totall double precision,
    gloss double precision,
    sex integer,
    agename varchar(15),
    agenum integer)
as
BEGIN
for select ab.catname, ab.fio, ab.totall, ab.gloss,  ab.sex, ab.loc,'Teenagers' as agename, 1 as agenum  from absolutebyage(:idc) ab
where ageclass in (13, 16, 18) and sex = 0
order by 5,8,4 desc  rows 24
into :"CAT", :"FIO", :"TOTALL", :"GLOSS", :"SEX", :"LOC", :"AGENAME", :"AGENUM"
do suspend;

for select ab.catname, ab.fio, ab.totall, ab.gloss, ab.sex , ab.loc,'Junior   ', 2 from absolutebyage(:idc) ab
where ageclass = (20)  and sex = 0
order by 5,8,4 desc rows 24
into :"CAT", :"FIO", :"TOTALL", :"GLOSS", :"SEX", :"LOC", :"AGENAME", :"AGENUM"
do suspend;

for select ab.catname, ab.fio, ab.totall, ab.gloss, ab.sex , ab.loc,'Open     ', 3 from absolutebyage(:idc) ab
where ageclass = (-2) and sex = 0
order by 5,8,4 desc rows 24
into :"CAT", :"FIO", :"TOTALL", :"GLOSS", :"SEX", :"LOC", :"AGENAME", :"AGENUM"
do suspend;

for select ab.catname, ab.fio, ab.totall, ab.gloss, ab.sex , ab.loc,'Masters  ', 4 from absolutebyage(:idc) ab
where ageclass &gt; 39 and sex = 0
order by 5,8,4 desc  rows 24
into :"CAT", :"FIO", :"TOTALL", :"GLOSS", :"SEX", :"LOC", :"AGENAME", :"AGENUM"
do suspend;



for select ab.catname, ab.fio, ab.totall, ab.gloss,  ab.sex, ab.loc,'Teenagers' as agename, 1 as agenum  from absolutebyage(:idc) ab
where ageclass in (13, 16, 18) and sex = 1
order by 5,8,4 desc  rows 24
into :"CAT", :"FIO", :"TOTALL", :"GLOSS", :"SEX", :"LOC", :"AGENAME", :"AGENUM"
do suspend;

for select ab.catname, ab.fio, ab.totall, ab.gloss, ab.sex , ab.loc,'Junior   ', 2 from absolutebyage(:idc) ab
where ageclass = 20  and sex = 1
order by 5,8,4 desc rows 24
into :"CAT", :"FIO", :"TOTALL", :"GLOSS", :"SEX", :"LOC", :"AGENAME", :"AGENUM"
do suspend;

for select ab.catname, ab.fio, ab.totall, ab.gloss, ab.sex , ab.loc,'Open     ', 3 from absolutebyage(:idc) ab
where ageclass = (-2) and sex = 1
order by 5,8,4 desc rows 24
into :"CAT", :"FIO", :"TOTALL", :"GLOSS", :"SEX", :"LOC", :"AGENAME", :"AGENUM"
do suspend;

for select ab.catname, ab.fio, ab.totall, ab.gloss, ab.sex , ab.loc,'Masters  ', 4 from absolutebyage(:idc) ab
where ageclass &gt; 39 and sex = 1
order by 5,8,4 desc  rows 24
into :"CAT", :"FIO", :"TOTALL", :"GLOSS", :"SEX", :"LOC", :"AGENAME", :"AGENUM"
do suspend;
end^
SET TERM ; ^</script>

    <script>SET TERM ^ ; 
CREATE OR ALTER PROCEDURE ABSOLUTEBYAGE (
    idc numeric(12,0))
returns (
    loc numeric(12,0),
	idcat numeric(12,0),
    fio varchar(150),
    totall double precision,
    gloss double precision,
    ageclass numeric(12,0),
    sex integer,
    catname varchar(15))
as
begin

  for select ID_CATEGORY, NAME from WEIGTH_CATEGORY into :"IDCAT", :"CATNAME"
  do
   for select
         distinct trim(l.name),
         coalesce(le.summaall, 0),
         case
           when loc.id_agecl &lt;&gt; -2 then
             coalesce(le.summaall, 0)* w.coef *
             coalesce((select agecoef from agecorrection where age = (
              select (cast('now' as date) - dat_bith)/365 from lifter where id_lifter = loc.id_lifter)
             ), 1)
           else
             coalesce(le.summaall, 0)* w.coef
         end,
         loc.id_agecl,
         l.sex,
         loc.id_lifter_compet
       from
         lifter l join
         lifter_on_competition loc on l.id_lifter = loc.id_lifter join
         lifter_exersis le on loc.id_lifter_compet = le.id_lifter_compet join
         wilks w on loc.id_wilks= w.id_wilks
       where
         coalesce(le.summaall, 0) &gt; 0 and
         loc.id_category = :IDCAT and
         loc.ID_Compet= :IDC
       into :FIO, :TOTALL, :GLOSS, :AGECLASS, :SEX, :LOC
       do suspend;
end^
SET TERM ; ^</script>
    <script>SET TERM ^ ; 
CREATE OR ALTER PROCEDURE FINALREPORT (
    idc numeric(12,0))
returns (
    loc numeric(12,0),
    fio varchar(60) character set win1251,
    ageclass varchar(25) character set win1251,
    bithdate date,
    bodyweight double precision,
    coef float,
    team varchar(60) character set win1251,
    town varchar(160) character set win1251,
    squat1 varchar(9) character set win1251,
    oc1 integer,
    squat2 varchar(9) character set win1251,
    oc2 integer,
    squat3 varchar(9) character set win1251,
    oc3 integer,
    squat4 varchar(9) character set win1251,
    oc4 integer,
    bench1 varchar(9) character set win1251,
    oc5 integer,
    bench2 varchar(9) character set win1251,
    oc6 integer,
    bench3 varchar(9) character set win1251,
    oc7 integer,
    bench4 varchar(9) character set win1251,
    oc8 integer,
    dl1 varchar(9) character set win1251,
    oc9 integer,
    dl2 varchar(9) character set win1251,
    oc10 integer,
    dl3 varchar(9) character set win1251,
    oc11 integer,
    dl4 varchar(9) character set win1251,
    oc12 integer,
    totall varchar(12) character set win1251,
    pts double precision,
    coach varchar(50) character set win1251,
    wcateg varchar(4) character set win1251,
    sex integer,
    ageclasseng varchar(25) character set win1251,
    orazr varchar(6) character set win1251,
    nrazr varchar(6) character set win1251)
as
declare variable tmp char(1);
declare variable acoef double precision;
declare variable aclass double precision;
begin
for
select loc.id_lifter_compet,
  trim(cutfio2(l.name)) as Fio,   l.dat_bith as DateBith,
  trim(ac.ENGNAME) as AgeClass,   trim(ac.ENGNAME) as ageclasseng,
  w.Self_Weight as BodyWeight,    w.Coef as Coef,
  t.name as TeamName,
  case
    when position('/' in l.TOWN) &gt; 0 then
      case
      when substring(l.town from 1 for position('/' in l.TOWN)-1) = substring(l.town from position('/' in l.TOWN)+1 for 99) then substring(l.town from 1 for position('/' in l.TOWN)-1)
      else l.town
      end
    else l.town
  end as LifterTown,
  le.Squat1,                      le.Oc1,
  le.Squat2,                      le.Oc2,
  le.Squat3,                      le.oc3,
  le.Squat4,                      le.oc10,
  le.Bench1,                      le.oc4,
  le.Bench2,                      le.oc5,
  le.Bench3,                      le.oc6,
  le.Bench4,                      le.oc11,
  le.Dl1,                         le.oc7,
  le.Dl2,                         le.oc8,
  le.Dl3,                         le.oc9,
  le.Dl4,                         le.oc12,
  Le.SummaAll as Totall,          le.SummaAll * w.Coef as Pts,
  loc.Trener,                     trim(Wc.name) as Categ,
  l.sex,                          loc.WasRazr,
  Loc.NewRazr,                   coalesce( (
select agecoef from agecorrection where age = (
select (cast('now' as date) - dat_bith)/365 from lifter where id_lifter = loc.id_lifter)
), 1) as acoef,
  loc.id_agecl
  from  lifter_on_competition loc 
    inner join  lifter_exersis le on le.id_lifter_compet=loc.id_lifter_compet
    inner join  Team T on t.id_team=loc.id_team 
    inner join  Lifter L on l.id_lifter=loc.id_lifter 
    inner join  Age_class Ac on ac.id_agecl=loc.id_agecl 
    inner join  Wilks w on w.id_wilks=loc.id_wilks 
    inner join  WEIGTH_CATEGORY wc on wc.ID_CATEGORY = Loc.ID_CATEGORY
where loc.id_compet = :idc
order by  l.sex
  , Loc.ID_CATEGORY
  , ac.from_age
  , le.summaall desc
  , w.Self_Weight asc
into 
  :loc, :FIO, :BITHDATE, :"AGECLASS", :"AGECLASSENG", :"BODYWEIGHT",
  :"COEF", :"TEAM", :"TOWN", 
  :"SQUAT1", :"OC1", :SQUAT2, :OC2, :"SQUAT3", :"OC3", :"SQUAT4", :"OC4"
  ,:"BENCH1", :"OC5", :"BENCH2", :"OC6", :"BENCH3", :"OC7", :"BENCH4", :"OC8"
  ,:"DL1", :"OC9", :"DL2", :"OC10", :"DL3", :"OC11", :"DL4", :"OC12"
  ,:TOTALL, :PTS, :"COACH", :"WCATEG", :"SEX", :orazr, :nrazr, :acoef, :ACLASS

do
begin
  tmp = '';

  if (:ACLASS &lt;&gt; -2) then
    COEF = :COEF * :ACOEF;

  PTS = Cast(:TOTALL as float) * :COEF;

  if
    (
      (nullif(:squat1, '0') &lt;&gt; '0') and
      (nullif(:oc1, -1) &gt; 0)
    ) then
  begin 
    select result from checkrecord(:loc, 0, :squat1) into :tmp;
    squat1 = trim(:squat1)||:tmp;
  end

  if 
    (
      (nullif(:squat2, '0') &lt;&gt; '0') and
      (nullif(:oc2, -1) &gt; 0)
    ) then
  begin 
    select result from checkrecord(:loc, 0, :squat2) into :tmp;
    squat2 = trim(:squat2)||:tmp;
  end

  if 
    (
      (nullif(:squat3, '0') &lt;&gt; '0') and
      (nullif(:oc3, -1) &gt; 0)
    ) then
  begin 
    select result from checkrecord(:loc, 0, :squat3) into :tmp;
    squat3 = trim(:squat3)||:tmp;
  end

  if 
    (
      (nullif(:squat4, '0') &lt;&gt; '0') and
      (nullif(:oc4, -1) &gt; 0)
    ) then
  begin 
    select result from checkrecord(:loc, 0, :squat4) into :tmp;
    squat4 = trim(:squat4)||:tmp;
  end


  if 
    (
      (nullif(:bench1, '0') &lt;&gt; '0') and
      (nullif(:oc5, -1) &gt; 0)
    ) then
  begin 
    select result from checkrecord(:loc, 1, :bench1) into :tmp;
    bench1 = trim(:bench1)||:tmp;
  end

  if 
    (
      (nullif(:bench2, '0') &lt;&gt; '0') and
      (nullif(:oc6, -1) &gt; 0)
    ) then
  begin 
    select result from checkrecord(:loc, 1, :bench2) into :tmp;
    bench2 = trim(:bench2)||:tmp;
  end

  if 
    (
      (nullif(:bench3, '0') &lt;&gt; '0') and
      (nullif(:oc7, -1) &gt; 0)
    ) then
  begin 
    select result from checkrecord(:loc, 1, :bench3) into :tmp;
    bench3 = trim(:bench3)||:tmp;
  end

  if 
    (
      (nullif(:bench4, '0') &lt;&gt; '0') and
      (nullif(:oc8, 0) &gt; 0)
    ) then
  begin 
    select result from checkrecord(:loc, 1, :bench4) into :tmp;
    bench4 = trim(:bench4)||:tmp;
  end

  if 
    (
      (nullif(:dl1, '0') &lt;&gt; '0') and
      (nullif(:oc9, 0) &gt; 0)
    ) then
  begin 
    select result from checkrecord(:loc, 2, :dl1) into :tmp;
    dl1 = trim(:dl1)||:tmp;
  end

  if 
    (
      (nullif(:dl2, '0') &lt;&gt; '0') and
      (nullif(:oc10, 0) &gt; 0)
    ) then
  begin 
    select result from checkrecord(:loc, 2, :dl2) into :tmp;
    dl2 = trim(:dl2)||:tmp;
  end

  if 
    (
      (nullif(:dl3, '0') &lt;&gt; '0') and
      (nullif(:oc11, 0) &gt; 0)
    ) then
  begin 
    select result from checkrecord(:loc, 2, :dl3) into :tmp;
    dl3 = trim(:dl3)||:tmp;
  end

  if 
    (
      (nullif(:dl4, '0') &lt;&gt; '0') and
      (nullif(:oc12, 0) &gt; 0)
    ) then
  begin 
    select result from checkrecord(:loc, 2, :dl4) into :tmp;
    dl4 = trim(:dl4)||:tmp;
  end

  if (nullif(:totall, '0') &lt;&gt; '0') then
  begin 
    select result from checkrecord(:loc, -2, :totall) into :tmp;
    totall = trim(:totall)||:tmp;
  end

  tmp = null;
  suspend;
end
end^
SET TERM ; ^</script>

    <script optional ="1">DROP PROCEDURE DO_UP;</script>
	</version>

<version number="0.44">
    <script>SET TERM ^ ; 
CREATE OR ALTER PROCEDURE DO_UP as
begin 
/* */
end^ 
SET TERM ; ^</script>
    <script>SET TERM ^ ; 
CREATE OR ALTER procedure SELECT_SQUATOUT (
    ID_STREAM numeric(12,0),
    ID_COMPET numeric(12,0))
returns (
    NAME varchar(60) character set WIN1251,
    WEIGHT double precision,
    EXERSCISE varchar(15) character set WIN1251,
    ZR double precision,
    WEIGHTCAT varchar(10) character set WIN1251)
as
BEGIN

for select name, weight, exerscise, min(zr), weightCat
from
(  select
    l.name as Name,
    le.squat1 as Weight,
    'Squat1' as Exerscise,
     zr as zr,
     wc.name as weightCat
  from
    lifter_on_competition loc inner join
    Lifter_exersis le on loc.id_lifter_compet = le.id_lifter_compet inner join
    Lifter l  on loc.id_lifter = l.id_lifter inner join
    weigth_category wc on loc.id_category = wc.id_category
  where
    loc.id_compet = :ID_COMPET and
    loc.id_stream = :ID_STREAM and
    le.squat1 &gt; 0 and
    OC1 is null
union all
  select
    l.name as Fio,
    le.squat2 as Weight,
    'Squat2' as exerscise,
    zr as zr,
    wc.name as weightCat
  from
    lifter_on_competition loc inner join
    Lifter_exersis le on loc.id_lifter_compet = le.id_lifter_compet inner join
    Lifter l  on loc.id_lifter = l.id_lifter inner join
    weigth_category wc on loc.id_category = wc.id_category
  where
    loc.id_compet = :ID_COMPET and
    loc.id_stream = :ID_STREAM and
    le.squat2 &gt; 0 and
    OC2 is null
union all
  select
    l.name as Fio,
    le.squat3 as Weight,
    'Squat3' as exerscise,
    zr as zr,
    wc.name as weightCat
  from
    lifter_on_competition loc inner join
    Lifter_exersis le on loc.id_lifter_compet = le.id_lifter_compet inner join
    Lifter l  on loc.id_lifter = l.id_lifter inner join
    weigth_category wc on loc.id_category = wc.id_category
  where
    loc.id_compet = :ID_COMPET and
    loc.id_stream = :ID_STREAM  and
    le.squat3 &gt; 0 and
    OC3 is null
) tbl
group by name, Weight, Exerscise, weightCat
order by 3, 2, 4 desc
into :name, :weight, :exerscise, :zr,:weightcat

DO SUSPEND;
end^ 
SET TERM ; ^</script>
    <script>SET TERM ^ ; 
CREATE OR ALTER procedure SELECT_BENCHOUT (
    ID_STREAM numeric(12,0),
    ID_COMPET numeric(12,0))
returns (
    NAME varchar(60) character set WIN1251,
    WEIGHT double precision,
    EXERSCISE varchar(15) character set WIN1251,
    ZR double precision,
    WEIGHTCAT varchar(10) character set WIN1251)
as
BEGIN
for select name, weight, exerscise, min(zr), weightCat
from
(
  select
    l.name as Name,
    le.bench1 as Weight,'Bench1' as Exerscise,
    zr as zr,
    wc.name as weightCat
  from
    lifter_on_competition loc inner join
    Lifter_exersis le on loc.id_lifter_compet = le.id_lifter_compet inner join
    Lifter l  on loc.id_lifter = l.id_lifter inner join
    weigth_category wc on loc.id_category = wc.id_category
  where
    loc.id_compet = :ID_COMPET and
    loc.id_stream = :ID_STREAM and
    le.bench1 &gt; 0 and
    OC4 is null
union all
  select
    l.name as Fio,
    le.Bench2 as Weight,
    'Bench2' as exerscise,
    zr as zr,
    wc.name as weightCat
  from
    lifter_on_competition loc inner join
    Lifter_exersis le on loc.id_lifter_compet = le.id_lifter_compet inner join
    Lifter l  on loc.id_lifter = l.id_lifter inner join
    weigth_category wc on loc.id_category = wc.id_category
  where
    loc.id_compet = :ID_COMPET and
    loc.id_stream = :ID_STREAM and
    le.bench2 &gt; 0 and
    OC5 is null
union all
  select
    l.name as Fio,
    le.Bench3 as Weight,
    'Bench3' as exerscise,
    zr as zr,
    wc.name as weightCat
  from
    lifter_on_competition loc inner join
    Lifter_exersis le on loc.id_lifter_compet = le.id_lifter_compet inner join
    Lifter l  on loc.id_lifter = l.id_lifter inner join
    weigth_category wc on loc.id_category = wc.id_category
  where
    loc.id_compet = :ID_COMPET and
    loc.id_stream = :ID_STREAM  and
    le.bench3 &gt; 0 and
    OC6 is null
) tbl
group by name, Weight, Exerscise, weightCat
order by 3, 2, 4 desc
into :name, :weight, :exerscise, :zr, :weightcat
DO SUSPEND;
end^ 
SET TERM ; ^</script>
    <script>SET TERM ^ ; 
CREATE OR ALTER procedure SELECT_DLOUT (
    ID_STREAM numeric(12,0),
    ID_COMPET numeric(12,0))
returns (
    NAME varchar(60) character set WIN1251,
    WEIGHT double precision,
    EXERSCISE varchar(15) character set WIN1251,
    ZR double precision,
    WEIGHTCAT varchar(10) character set WIN1251)
as
BEGIN

for select name, weight, exerscise, min(zr), weightCat
from
(  select
    l.name as Name,
    le.dl1 as Weight,
    'DeadLift1' as Exerscise,
    zr as zr,
    wc.name as weightCat
  from
    lifter_on_competition loc inner join
    Lifter_exersis le on loc.id_lifter_compet = le.id_lifter_compet inner join
    Lifter l  on loc.id_lifter = l.id_lifter inner join
    weigth_category wc on loc.id_category = wc.id_category
  where
    loc.id_compet = :ID_COMPET and
    loc.id_stream = :ID_STREAM and
    le.dl1 &gt; 0 and
    OC7 is null
union all
  select
    l.name as Fio,
    le.dl2 as Weight,
    'DeadLift2' as exerscise,
    zr as zr,
    wc.name as weightCat
  from
    lifter_on_competition loc inner join
    Lifter_exersis le on loc.id_lifter_compet = le.id_lifter_compet inner join
    Lifter l  on loc.id_lifter = l.id_lifter inner join
    weigth_category wc on loc.id_category = wc.id_category
  where
    loc.id_compet = :ID_COMPET and
    loc.id_stream = :ID_STREAM and
    le.dl2 &gt; 0 and
    OC8 is null
union all
  select
    l.name as Fio,
    le.dl3 as Weight,
    'DeadLift3' as exerscise,
    zr as zr,
    wc.name as weightCat
  from
    lifter_on_competition loc inner join
    Lifter_exersis le on loc.id_lifter_compet = le.id_lifter_compet inner join
    Lifter l  on loc.id_lifter = l.id_lifter inner join
    weigth_category wc on loc.id_category = wc.id_category
  where
    loc.id_compet = :ID_COMPET and
    loc.id_stream = :ID_STREAM  and
    le.dl3 &gt; 0 and
    OC9 is null
) tbl
group by name, Weight, Exerscise, weightCat
order by 3, 2, 4 desc
into :name, :weight, :exerscise, :zr, :weightcat
DO SUSPEND;
end^ 
SET TERM ; ^</script>

</version>

<version number="0.45">
    <script>SET TERM ^ ; 
CREATE OR ALTER PROCEDURE DO_UP as
begin 
  suspend;
end^ 
SET TERM ; ^</script>
    
	<script>SET TERM ^ ; 
CREATE OR ALTER PROCEDURE EDIT_LE (
    le numeric(12),
    sqltext varchar(254) character set win1251)
returns (ts timestamp)
as
  declare variable tot float;
begin
  suspend;
end^ 
SET TERM ; ^</script>
</version>

<version number="0.46">
    <script optional ="1">DROP table sql_log ;</script>
    <script>CREATE TABLE SQL_LOG (
    ID           ID,
    TBL          VARCHAR(50) character set WIN1251,
    SQL_STRING   VARCHAR(512) character set WIN1251,
    CREATE_TIME  TIMESTAMP DEFAULT CURRENT_TIMESTAMP);</script>
    <script>SET TERM ^ ; 
CREATE OR ALTER PROCEDURE DO_UP as
begin 
/* */
end^ 
SET TERM ; ^</script>
    <script>SET TERM ^ ; 

	CREATE OR ALTER PROCEDURE EDIT_LE (
    le numeric(12),
    sqltext varchar(254) character set win1251)
returns (
    ts timestamp)
as
declare variable tot float;
begin
  ts = CURRENT_TIMESTAMP;
  
  if (:SQLTEXT is not NULL) then
    EXECUTE STATEMENT :SQLTEXT;
  
  insert into sql_log (ID, TBL, SQL_STRING) values (:LE, 'LIFTER_EXERSIS', :sqltext);

  select totall from CURRENTTOTALL(:LE) into :TOT;

  update
    LIFTER_EXERSIS
  set
    SUMMAALL = cast(:tot/2.5 as integer) * 2.5,
    EDITTIME = :ts
  where
    ID_LIFTER_COMPET = :LE;

  POST_EVENT 'LE_EDIT';
  TOT = NULL;
end^ 
SET TERM ; ^</script>
</version>

<version number="0.47">
    <script>SET TERM ^ ; 
CREATE OR ALTER PROCEDURE DO_UP as
begin 
	UPDATE OR INSERT INTO PARAMS (ID, ID_PARENT, NAME, "VALUE", DESCRIPTION)
	VALUES (210, 200, 'MinTotallCalculateBy', 'FIRST', 'При установленном ограничении по сумме как вычислять ее FIRST/BEST');
end
^ SET TERM ; ^</script>
		<script>EXECUTE PROCEDURE DO_UP;</script>
		
</version>	

<version number="0.48">
    <script>SET TERM ^ ; 
CREATE OR ALTER procedure EDIT_LE (
    LE numeric(12),
    SQLTEXT varchar(254) character set WIN1251)
returns (TS timestamp)
as
  declare variable TOT float;
begin
  ts = CURRENT_TIMESTAMP;
  
  if (:SQLTEXT is not NULL) then
    EXECUTE STATEMENT :SQLTEXT;
  
  insert into sql_log (ID, TBL, SQL_STRING) values (:LE, 'LIFTER_EXERSIS', :sqltext);

  select totall from CURRENTTOTALL(:LE) into :TOT;

  update
    LIFTER_EXERSIS
  set
    SUMMAALL =
     (case (select min(id_range) from range)
        when 0 then trunc(:tot/2.5, 0) * 2.5
        else :tot
      end),
    EDITTIME = :ts
  where
    ID_LIFTER_COMPET = :LE;

  POST_EVENT 'LE_EDIT';
  TOT = NULL;
end
^ SET TERM ; ^</script>		
</version>	

</versions>